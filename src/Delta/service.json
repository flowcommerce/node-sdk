{
  "apidoc": {
    "version": "0.11.23"
  },
  "name": "delta",
  "organization": {
    "key": "flow"
  },
  "application": {
    "key": "delta"
  },
  "namespace": "io.flow.delta.v0",
  "version": "0.1.75",
  "info": {},
  "headers": [],
  "imports": [
    {
      "uri": "http://www.apidoc.me/flow/common/0.0.12/service.json",
      "namespace": "io.flow.common.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "common"
      },
      "version": "0.0.12",
      "enums": [
        "calendar",
        "capability",
        "change_type",
        "exception_type",
        "holiday_calendar",
        "schedule_exception_status",
        "sort_direction",
        "unit_of_measurement",
        "unit_of_time",
        "value_added_service",
        "visibility"
      ],
      "unions": [
        "expandable_location",
        "expandable_organization",
        "expandable_user"
      ],
      "models": [
        "contact",
        "datetime_range",
        "dimension",
        "error",
        "exception",
        "healthcheck",
        "location",
        "location_reference",
        "measurement",
        "name",
        "organization",
        "organization_reference",
        "organization_summary",
        "price",
        "schedule",
        "user",
        "user_reference",
        "user_summary"
      ]
    },
    {
      "uri": "http://www.apidoc.me/flow/delta-config/0.1.68/service.json",
      "namespace": "io.flow.delta.config.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "delta-config"
      },
      "version": "0.1.68",
      "enums": [
        "build_stage",
        "instance_type",
        "project_stage"
      ],
      "unions": [
        "config"
      ],
      "models": [
        "branch",
        "build",
        "config_error",
        "config_project"
      ]
    },
    {
      "uri": "http://www.apidoc.me/flow/github/0.0.3/service.json",
      "namespace": "io.flow.github.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "github"
      },
      "version": "0.0.3",
      "enums": [
        "contents_type",
        "encoding",
        "hook_event",
        "owner_type",
        "visibility"
      ],
      "unions": [],
      "models": [
        "commit",
        "contents",
        "error",
        "github_object",
        "hook",
        "hook_config",
        "ref",
        "ref_form",
        "repository",
        "tag",
        "tag_form",
        "tag_summary",
        "tagger",
        "unprocessable_entity",
        "user",
        "user_email"
      ]
    }
  ],
  "enums": [
    {
      "name": "docker_provider",
      "plural": "docker_providers",
      "values": [
        {
          "name": "docker_hub",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "event_type",
      "plural": "event_types",
      "values": [
        {
          "name": "change",
          "attributes": [],
          "description": "Indicates this event actually reported a successful change was completed in the project"
        },
        {
          "name": "info",
          "attributes": [],
          "description": "Indicates this was an informational event only"
        }
      ],
      "attributes": []
    },
    {
      "name": "publication",
      "plural": "publications",
      "values": [
        {
          "name": "deployments",
          "attributes": [],
          "description": "Get notified of all deployments"
        }
      ],
      "attributes": [],
      "description": "A publication represents something that a user can subscribe to."
    },
    {
      "name": "role",
      "plural": "roles",
      "values": [
        {
          "name": "member",
          "attributes": []
        },
        {
          "name": "admin",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "scms",
      "plural": "scmses",
      "values": [
        {
          "name": "github",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "status",
      "plural": "statuses",
      "values": [
        {
          "name": "enabled",
          "attributes": []
        },
        {
          "name": "paused",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "visibility",
      "plural": "visibilities",
      "values": [
        {
          "name": "public",
          "attributes": []
        },
        {
          "name": "private",
          "attributes": []
        }
      ],
      "attributes": []
    }
  ],
  "unions": [
    {
      "name": "item_summary",
      "plural": "item_summaries",
      "types": [
        {
          "type": "project_summary",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    }
  ],
  "models": [
    {
      "name": "aws_actor",
      "plural": "aws_actors",
      "fields": [
        {
          "name": "id",
          "type": "long",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Defines an aws actor"
    },
    {
      "name": "build",
      "plural": "builds",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "project",
          "type": "project_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "status",
          "type": "status",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "This is the full name of the application that this build represents and is used to lookup information in the registry, in docker hub, in AWS, etc.",
          "example": "delta-api"
        }
      ],
      "attributes": [],
      "description": "A build provides information abuot a dockerfile and the name of the build in the registry."
    },
    {
      "name": "build_state",
      "plural": "build_states",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The build name"
        },
        {
          "name": "desired",
          "type": "state",
          "required": false,
          "attributes": []
        },
        {
          "name": "last",
          "type": "state",
          "required": false,
          "attributes": []
        },
        {
          "name": "latest_image",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "If available, the full name of the latest image for this build"
        }
      ],
      "attributes": [],
      "description": "Describes the last and desired states of a build"
    },
    {
      "name": "dashboard_build",
      "plural": "dashboard_builds",
      "fields": [
        {
          "name": "project",
          "type": "project_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The build name"
        },
        {
          "name": "desired",
          "type": "state",
          "required": true,
          "attributes": []
        },
        {
          "name": "last",
          "type": "state",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Summary of each build for the purposes of displaying on a dashboard"
    },
    {
      "name": "docker",
      "plural": "dockers",
      "fields": [
        {
          "name": "provider",
          "type": "docker_provider",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "flowcommerce"
        }
      ],
      "attributes": []
    },
    {
      "name": "event",
      "plural": "events",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "created_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "project",
          "type": "project_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "event_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "summary",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "error",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "github_authentication_form",
      "plural": "github_authentication_forms",
      "fields": [
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Used to authenticate user based on the oauth code we receive from github"
    },
    {
      "name": "github_user",
      "plural": "github_users",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "user",
          "type": "reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "github_user_id",
          "type": "long",
          "required": true,
          "attributes": []
        },
        {
          "name": "login",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "github_user_form",
      "plural": "github_user_forms",
      "fields": [
        {
          "name": "user_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "github_user_id",
          "type": "long",
          "required": true,
          "attributes": []
        },
        {
          "name": "login",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "github_webhook",
      "plural": "github_webhooks",
      "fields": [
        {
          "name": "id",
          "type": "long",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Defines a github hook"
    },
    {
      "name": "image",
      "plural": "images",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "build",
          "type": "build",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "version",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "image_form",
      "plural": "image_forms",
      "fields": [
        {
          "name": "build_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "version",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "item",
      "plural": "items",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Unique identifier for this item."
        },
        {
          "name": "organization",
          "type": "organization_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "visibility",
          "type": "visibility",
          "required": true,
          "attributes": []
        },
        {
          "name": "summary",
          "type": "item_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "label",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "A denormalization of item content for search"
    },
    {
      "name": "membership",
      "plural": "memberships",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Unique identifier for this membership"
        },
        {
          "name": "user",
          "type": "user_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "organization_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "role",
          "type": "role",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "A user can belong to one or more organizations via memberships."
    },
    {
      "name": "membership_form",
      "plural": "membership_forms",
      "fields": [
        {
          "name": "user_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "role",
          "type": "role",
          "required": true,
          "attributes": [],
          "default": "member"
        }
      ],
      "attributes": []
    },
    {
      "name": "organization",
      "plural": "organizations",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "user",
          "type": "user_summary",
          "required": true,
          "attributes": [],
          "description": "The user that created this organization"
        },
        {
          "name": "docker",
          "type": "docker",
          "required": true,
          "attributes": [],
          "description": "Required information to locate docker images for projects associated with this organization."
        }
      ],
      "attributes": []
    },
    {
      "name": "organization_form",
      "plural": "organization_forms",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "docker",
          "type": "docker",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "organization_summary",
      "plural": "organization_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "project",
      "plural": "projects",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "organization_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "user",
          "type": "reference",
          "required": true,
          "attributes": [],
          "description": "The user that created this project"
        },
        {
          "name": "visibility",
          "type": "visibility",
          "required": true,
          "attributes": []
        },
        {
          "name": "scms",
          "type": "scms",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "uri",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "config",
          "type": "io.flow.delta.config.v0.unions.config",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "project_form",
      "plural": "project_forms",
      "fields": [
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "visibility",
          "type": "visibility",
          "required": true,
          "attributes": []
        },
        {
          "name": "scms",
          "type": "scms",
          "required": true,
          "attributes": []
        },
        {
          "name": "uri",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "config",
          "type": "io.flow.delta.config.v0.models.config_project",
          "required": false,
          "attributes": [],
          "description": "Project configuration. If not provided, we use the global default"
        }
      ],
      "attributes": []
    },
    {
      "name": "project_summary",
      "plural": "project_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "organization_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "uri",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "reference",
      "plural": "references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "repository",
      "plural": "repositories",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "visibility",
          "type": "visibility",
          "required": true,
          "attributes": []
        },
        {
          "name": "uri",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "sha",
      "plural": "shas",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "project",
          "type": "project_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "created_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "branch",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "hash",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "state",
      "plural": "states",
      "fields": [
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "example": "Date / time that this state was captured"
        },
        {
          "name": "versions",
          "type": "[version]",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Used to describe the last state of a project in AWS. Specifically which versions are running"
    },
    {
      "name": "state_form",
      "plural": "state_forms",
      "fields": [
        {
          "name": "versions",
          "type": "[version]",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "subscription",
      "plural": "subscriptions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Internal unique identifier for this subscription record"
        },
        {
          "name": "user",
          "type": "reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "publication",
          "type": "publication",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a user that is currently subscribed to a publication"
    },
    {
      "name": "subscription_form",
      "plural": "subscription_forms",
      "fields": [
        {
          "name": "user_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "publication",
          "type": "publication",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "tag",
      "plural": "tags",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "project",
          "type": "project_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "created_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "hash",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "token",
      "plural": "tokens",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "user",
          "type": "reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "masked",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "cleartext",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The cleartext token. Only available when the token is initially created"
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "token_form",
      "plural": "token_forms",
      "fields": [
        {
          "name": "user_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "user_form",
      "plural": "user_forms",
      "fields": [
        {
          "name": "email",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "name",
          "type": "io.flow.common.v0.models.name",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "user_identifier",
      "plural": "user_identifiers",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "user",
          "type": "reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "value",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "user_summary",
      "plural": "user_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "email",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "name",
          "type": "io.flow.common.v0.models.name",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "username_password",
      "plural": "username_passwords",
      "fields": [
        {
          "name": "username",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "password",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "variable",
      "plural": "variables",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "organization_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "value",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Configuration variable of an organization"
    },
    {
      "name": "variable_form",
      "plural": "variable_forms",
      "fields": [
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "value",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "version",
      "plural": "versions",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "0.0.1"
        },
        {
          "name": "instances",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "The number of instances running this version"
        }
      ],
      "attributes": []
    }
  ],
  "resources": [
    {
      "type": "aws_actor",
      "plural": "aws_actors",
      "operations": [
        {
          "method": "POST",
          "path": "/actors/aws/:build_id",
          "parameters": [
            {
              "name": "build_id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit"
            }
          ],
          "attributes": [],
          "description": "Trigger actor message for build id"
        }
      ],
      "attributes": [],
      "path": "/actors/aws",
      "description": "way to trigger aws configure actor message"
    },
    {
      "type": "dashboard_build",
      "plural": "dashboard_builds",
      "operations": [
        {
          "method": "GET",
          "path": "/dashboard_builds",
          "parameters": [
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of records to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "Used to paginate. First page of results is 0.",
              "default": "0",
              "minimum": 0
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[dashboard_build]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            }
          ],
          "attributes": []
        }
      ],
      "attributes": [],
      "path": "/dashboard_builds"
    },
    {
      "type": "event",
      "plural": "events",
      "operations": [
        {
          "method": "GET",
          "path": "/events",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by any one of these ids"
            },
            {
              "name": "project_id",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find events for this project."
            },
            {
              "name": "type",
              "type": "event_type",
              "location": "Query",
              "required": false
            },
            {
              "name": "number_minutes_since_creation",
              "type": "long",
              "location": "Query",
              "required": false
            },
            {
              "name": "has_error",
              "type": "boolean",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of records to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "Used to paginate. First page of results is 0.",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-events.created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[event]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/events/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "event"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit"
            }
          ],
          "attributes": []
        }
      ],
      "attributes": [],
      "path": "/events"
    },
    {
      "type": "github_user",
      "plural": "github_users",
      "operations": [
        {
          "method": "POST",
          "path": "/authentications/github",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "io.flow.common.v0.models.user"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[io.flow.common.v0.models.error]"
            }
          ],
          "attributes": [],
          "description": "Used to authenticate a user via github",
          "body": {
            "type": "github_authentication_form",
            "attributes": []
          }
        }
      ],
      "attributes": [],
      "path": "/authentications"
    },
    {
      "type": "github_webhook",
      "plural": "github_webhooks",
      "operations": [
        {
          "method": "POST",
          "path": "/webhooks/github/:project_id",
          "parameters": [
            {
              "name": "project_id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit"
            }
          ],
          "attributes": [],
          "description": "Receives a webhook on push for this particular project"
        }
      ],
      "attributes": [],
      "path": "/webhooks/github",
      "description": "The target of the github webooks"
    },
    {
      "type": "image",
      "plural": "images",
      "operations": [
        {
          "method": "GET",
          "path": "/images",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by any one of these ids"
            },
            {
              "name": "project_id",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find images for this project."
            },
            {
              "name": "name",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find images with this name.",
              "example": "0.0.1"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of records to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "Used to paginate. First page of results is 0.",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "lower(images.name),-images.sort_key"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[image]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/images/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "image"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit"
            }
          ],
          "attributes": []
        },
        {
          "method": "DELETE",
          "path": "/images/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit"
            }
          ],
          "attributes": []
        }
      ],
      "attributes": [],
      "path": "/images"
    },
    {
      "type": "io.flow.common.v0.models.user",
      "plural": "users",
      "operations": [
        {
          "method": "GET",
          "path": "/users",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find user with this id. Exact match"
            },
            {
              "name": "email",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find user with this email address. Case in-sensitive. Exact match"
            },
            {
              "name": "identifier",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find user associated with this randomly generated identifier. Exact match"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[io.flow.common.v0.models.user]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            }
          ],
          "attributes": [],
          "description": "Search for a specific user. You must specify at least 1 parameter - either a id or email - and will receive back either 0 or 1 users."
        },
        {
          "method": "GET",
          "path": "/users/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "io.flow.common.v0.models.user"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit"
            }
          ],
          "attributes": [],
          "description": "Returns information about the user with this id."
        },
        {
          "method": "GET",
          "path": "/users/:id/identifier",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "user_identifier"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit"
            }
          ],
          "attributes": [],
          "description": "Returns the latest identifier for this user. The basic use case is to enable things like unsubscribe w/out  login (and thus once you have an identifier, you can GET /users?identifier=xxx). Identifiers are rotated regularly with last n identifiers being valid (allowing eventual expiration)."
        },
        {
          "method": "POST",
          "path": "/users",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "io.flow.common.v0.models.user"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[io.flow.common.v0.models.error]"
            }
          ],
          "attributes": [],
          "description": "Create a new user.",
          "body": {
            "type": "user_form",
            "attributes": []
          }
        }
      ],
      "attributes": [],
      "path": "/users"
    },
    {
      "type": "item",
      "plural": "items",
      "operations": [
        {
          "method": "GET",
          "path": "/items",
          "parameters": [
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Actual search query"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of records to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "Used to paginate. First page of results is 0.",
              "default": "0",
              "minimum": 0
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[item]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            }
          ],
          "attributes": [],
          "description": "Returns a list of all matching items"
        }
      ],
      "attributes": [],
      "path": "/items"
    },
    {
      "type": "membership",
      "plural": "memberships",
      "operations": [
        {
          "method": "GET",
          "path": "/memberships",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by any one of these ids"
            },
            {
              "name": "organization",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter to organization with this key. Case insensitive"
            },
            {
              "name": "user_id",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "role",
              "type": "role",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of records to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "Used to paginate. First page of results is 0.",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-memberships.created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[membership]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            }
          ],
          "attributes": [],
          "description": "Search all memberships. Results are always paginated."
        },
        {
          "method": "GET",
          "path": "/memberships/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "membership"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit"
            }
          ],
          "attributes": []
        },
        {
          "method": "POST",
          "path": "/memberships",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "membership"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[io.flow.common.v0.models.error]"
            }
          ],
          "attributes": [],
          "body": {
            "type": "membership_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/memberships/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit"
            }
          ],
          "attributes": []
        }
      ],
      "attributes": [],
      "path": "/memberships"
    },
    {
      "type": "organization",
      "plural": "organizations",
      "operations": [
        {
          "method": "GET",
          "path": "/organizations",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by any one of these ids"
            },
            {
              "name": "user_id",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find organizations that this user has access to"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of records to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "Used to paginate. First page of results is 0.",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "organizations.id"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[organization]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            }
          ],
          "attributes": [],
          "description": "Search organizations. Results are paginated"
        },
        {
          "method": "GET",
          "path": "/organizations/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "organization"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit"
            }
          ],
          "attributes": [],
          "description": "Returns information about the organization with this id."
        },
        {
          "method": "POST",
          "path": "/organizations",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "organization"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[io.flow.common.v0.models.error]"
            }
          ],
          "attributes": [],
          "description": "Create a new organization.",
          "body": {
            "type": "organization_form",
            "attributes": []
          }
        },
        {
          "method": "PUT",
          "path": "/organizations/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "organization",
              "description": "Organization successfully updated"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[io.flow.common.v0.models.error]"
            }
          ],
          "attributes": [],
          "description": "Update an existing organization.",
          "body": {
            "type": "organization_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/organizations/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit"
            }
          ],
          "attributes": []
        }
      ],
      "attributes": [],
      "path": "/organizations"
    },
    {
      "type": "project",
      "plural": "projects",
      "operations": [
        {
          "method": "GET",
          "path": "/projects",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by any one of these ids"
            },
            {
              "name": "organization",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter to resolvers belongs to the organization with this key"
            },
            {
              "name": "name",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find project with this name. Case in-sensitive. Exact match"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of records to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "Used to paginate. First page of results is 0.",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "projects.id"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[project]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            }
          ],
          "attributes": [],
          "description": "Search projects. Results are paginated"
        },
        {
          "method": "GET",
          "path": "/projects/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "project"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit"
            }
          ],
          "attributes": [],
          "description": "Returns information about the project with this id."
        },
        {
          "method": "POST",
          "path": "/projects",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "project"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[io.flow.common.v0.models.error]"
            }
          ],
          "attributes": [],
          "description": "Create a new project.",
          "body": {
            "type": "project_form",
            "attributes": []
          }
        },
        {
          "method": "POST",
          "path": "/projects/:id/events/pursue_desired_state",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit"
            }
          ],
          "attributes": [],
          "description": "Triggers the pursue desired state event."
        },
        {
          "method": "PUT",
          "path": "/projects/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "project",
              "description": "Project successfully updated"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[io.flow.common.v0.models.error]"
            }
          ],
          "attributes": [],
          "description": "Update an existing project.",
          "body": {
            "type": "project_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/projects/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/projects/:id/builds/states",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[build_state]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/projects/:id/builds/:build_name/states/desired",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "build_name",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[state]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit"
            }
          ],
          "attributes": []
        },
        {
          "method": "POST",
          "path": "/projects/:id/builds/:build_name/states/desired",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "build_name",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[state_form]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/projects/:id/builds/:build_name/states/last",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "build_name",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[state]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit"
            }
          ],
          "attributes": []
        }
      ],
      "attributes": [],
      "path": "/projects"
    },
    {
      "type": "repository",
      "plural": "repositories",
      "operations": [
        {
          "method": "GET",
          "path": "/github",
          "parameters": [
            {
              "name": "owner",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Optionally filter by owner name. Case in-sensitive. Exact match"
            },
            {
              "name": "name",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Optionally filter by repo name. Case in-sensitive. Exact match"
            },
            {
              "name": "organization_id",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If specified, we enable additional filtering by this organization (see existing_project parameter)."
            },
            {
              "name": "existing_project",
              "type": "boolean",
              "location": "Query",
              "required": false,
              "description": "Optionally filter by repositories that are either already mapped to existing projects or not. Requires organization_id parameter to also be specified."
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of records to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "Used to paginate. First page of results is 0.",
              "default": "0",
              "minimum": 0
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[io.flow.github.v0.models.repository]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[io.flow.common.v0.models.error]"
            }
          ],
          "attributes": [],
          "description": "Returns a list of repositories from github"
        },
        {
          "method": "GET",
          "path": "/github/:owner/:repo/config",
          "parameters": [
            {
              "name": "owner",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "repo",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "io.flow.delta.config.v0.unions.config"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[io.flow.common.v0.models.error]"
            }
          ],
          "attributes": [],
          "description": "Returns the delta configuration for the specified github repo, if the repo has a .delta file in its root"
        }
      ],
      "attributes": [],
      "path": "/github"
    },
    {
      "type": "sha",
      "plural": "shas",
      "operations": [
        {
          "method": "GET",
          "path": "/shas",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by any one of these ids"
            },
            {
              "name": "project_id",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find shas for this project."
            },
            {
              "name": "branch",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find shas for this branch.",
              "example": "master"
            },
            {
              "name": "hash",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find shas for this hash.",
              "example": "master"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of records to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "Used to paginate. First page of results is 0.",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-shas.created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[sha]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/shas/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "sha"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit"
            }
          ],
          "attributes": []
        },
        {
          "method": "DELETE",
          "path": "/shas/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit"
            }
          ],
          "attributes": []
        }
      ],
      "attributes": [],
      "path": "/shas"
    },
    {
      "type": "subscription",
      "plural": "subscriptions",
      "operations": [
        {
          "method": "GET",
          "path": "/subscriptions",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by any one of these ids"
            },
            {
              "name": "user_id",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find subscriptions for this user."
            },
            {
              "name": "identifier",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find subscriptions associated with this user identifier. Exact match"
            },
            {
              "name": "publication",
              "type": "publication",
              "location": "Query",
              "required": false,
              "description": "Find subscriptions for this publication."
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of records to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "Used to paginate. First page of results is 0.",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-subscriptions.created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[subscription]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            }
          ],
          "attributes": [],
          "description": "Search subscriptions. Always paginated."
        },
        {
          "method": "GET",
          "path": "/subscriptions/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "subscription"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific subscription."
        },
        {
          "method": "POST",
          "path": "/subscriptions",
          "parameters": [
            {
              "name": "identifier",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If a user identifier is provided, authentication is bypassed"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "subscription"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[io.flow.common.v0.models.error]"
            }
          ],
          "attributes": [],
          "description": "Create a new subscription.",
          "body": {
            "type": "subscription_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/subscriptions/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "identifier",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If a user identifier is provided, authentication is bypassed"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit"
            }
          ],
          "attributes": []
        }
      ],
      "attributes": [],
      "path": "/subscriptions"
    },
    {
      "type": "tag",
      "plural": "tags",
      "operations": [
        {
          "method": "GET",
          "path": "/tags",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by any one of these ids"
            },
            {
              "name": "project_id",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find tags for this project."
            },
            {
              "name": "name",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find tags with this name.",
              "example": "0.0.1"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of records to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "Used to paginate. First page of results is 0.",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-tags.sort_key"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[tag]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/tags/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "tag"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit"
            }
          ],
          "attributes": []
        },
        {
          "method": "DELETE",
          "path": "/tags/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit"
            }
          ],
          "attributes": []
        }
      ],
      "attributes": [],
      "path": "/tags"
    },
    {
      "type": "token",
      "plural": "tokens",
      "operations": [
        {
          "method": "GET",
          "path": "/tokens",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by any one of these ids"
            },
            {
              "name": "user_id",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find tokens for this user."
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of records to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "Used to paginate. First page of results is 0.",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-tokens.created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[token]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/tokens/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "token"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit"
            }
          ],
          "attributes": [],
          "description": "Used to fetch one token"
        },
        {
          "method": "POST",
          "path": "/tokens",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "token"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[io.flow.common.v0.models.error]"
            }
          ],
          "attributes": [],
          "description": "Create a new API token for this user",
          "body": {
            "type": "token_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/tokens/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit"
            }
          ],
          "attributes": []
        }
      ],
      "attributes": [],
      "path": "/tokens"
    }
  ],
  "attributes": []
}