{
  "apidoc": {
    "version": "0.11.26"
  },
  "name": "API",
  "organization": {
    "key": "flow"
  },
  "application": {
    "key": "api"
  },
  "namespace": "io.flow.v0",
  "version": "0.0.45",
  "info": {
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    },
    "contact": {
      "email": "tech@flow.io"
    }
  },
  "headers": [],
  "imports": [],
  "enums": [
    {
      "name": "adjustment_type",
      "plural": "adjustment_types",
      "values": [
        {
          "name": "fixed_margin",
          "attributes": []
        },
        {
          "name": "percent_margin",
          "attributes": []
        },
        {
          "name": "round",
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Cost variation used to calculate localized prices"
    },
    {
      "name": "calendar",
      "plural": "calendars",
      "values": [
        {
          "name": "weekdays",
          "attributes": [],
          "description": "Mon - Fri"
        },
        {
          "name": "everyday",
          "attributes": [],
          "description": "7 days per week"
        }
      ],
      "attributes": []
    },
    {
      "name": "capability",
      "plural": "capabilities",
      "values": [
        {
          "name": "crossdock",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "card_type",
      "plural": "card_types",
      "values": [
        {
          "name": "visa",
          "attributes": []
        },
        {
          "name": "mastercard",
          "attributes": []
        },
        {
          "name": "american_express",
          "attributes": []
        },
        {
          "name": "diners_club",
          "attributes": []
        },
        {
          "name": "discover",
          "attributes": []
        },
        {
          "name": "jcb",
          "attributes": []
        },
        {
          "name": "china_union_pay",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "change_type",
      "plural": "change_types",
      "values": [
        {
          "name": "insert",
          "attributes": []
        },
        {
          "name": "update",
          "attributes": []
        },
        {
          "name": "delete",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "commercial_term",
      "plural": "commercial_terms",
      "values": [
        {
          "name": "DDP",
          "attributes": []
        },
        {
          "name": "DDU",
          "attributes": []
        },
        {
          "name": "CPT",
          "attributes": []
        },
        {
          "name": "CIP",
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "The international commercial term reference of the shipment."
    },
    {
      "name": "content_type",
      "plural": "content_types",
      "values": [
        {
          "name": "zpl",
          "attributes": []
        },
        {
          "name": "pdf",
          "attributes": []
        },
        {
          "name": "png",
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Content format of a generated shipment_label"
    },
    {
      "name": "delivered_duty",
      "plural": "delivered_duties",
      "values": [
        {
          "name": "paid",
          "attributes": []
        },
        {
          "name": "unpaid",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "dimension_type",
      "plural": "dimension_types",
      "values": [
        {
          "name": "product",
          "attributes": [],
          "description": "The standalone dimensions of an item."
        },
        {
          "name": "package",
          "attributes": [],
          "description": "The boxed dimensions of an item."
        }
      ],
      "attributes": [],
      "description": "Specifies the difference between product dimensions and the actual packaged dimensions. This enables us to generate more accurate shipping estimates based on the packaged dimensions. The common example is a scarf which may have product dimensions of 6 feet long even though it can be folded to have very small package dimensions."
    },
    {
      "name": "eel_pfc",
      "plural": "eel_pfcs",
      "values": [
        {
          "name": "NOEEI_30_37_a",
          "attributes": []
        },
        {
          "name": "NOEEI_30_37_h",
          "attributes": []
        },
        {
          "name": "NOEEI_30_36",
          "attributes": []
        },
        {
          "name": "AES_ITN",
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "EEL / PFC type of the shipment. For most shipments from the US to CA, 'NOEEI_30_36' is applicable; for most other shipments from the US, 'NOEEI_30_37_a' is applicable."
    },
    {
      "name": "exception_type",
      "plural": "exception_types",
      "values": [
        {
          "name": "open",
          "attributes": []
        },
        {
          "name": "closed",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "holiday_calendar",
      "plural": "holiday_calendars",
      "values": [
        {
          "name": "us_bank_holidays",
          "attributes": []
        },
        {
          "name": "jewish_holidays",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "integration",
      "plural": "integrations",
      "values": [
        {
          "name": "direct",
          "attributes": [],
          "description": "Always generate a label for the chosen delivery option."
        },
        {
          "name": "informational",
          "attributes": [],
          "description": "Booking and label generation is not available. Just use Flow to calculate delivery window estimates and shipment prices to display."
        },
        {
          "name": "preadvice",
          "attributes": [],
          "description": "A generic label will be provided by the client organization when available as pre-advice shipment notification to carrier partner."
        }
      ],
      "attributes": [],
      "description": "Type of shipping integration for a given shipping tier"
    },
    {
      "name": "levy",
      "plural": "levies",
      "values": [
        {
          "name": "duty",
          "attributes": []
        },
        {
          "name": "shipping",
          "attributes": []
        },
        {
          "name": "vat",
          "attributes": [],
          "description": "Value-Added Tax"
        }
      ],
      "attributes": []
    },
    {
      "name": "levy_component",
      "plural": "levy_components",
      "values": [
        {
          "name": "goods",
          "attributes": [],
          "description": "The value of goods"
        },
        {
          "name": "duty",
          "attributes": []
        },
        {
          "name": "insurance",
          "attributes": []
        },
        {
          "name": "freight",
          "attributes": []
        },
        {
          "name": "vat",
          "attributes": [],
          "description": "Value-Added Tax"
        }
      ],
      "attributes": []
    },
    {
      "name": "levy_strategy",
      "plural": "levy_strategies",
      "values": [
        {
          "name": "minimum",
          "attributes": []
        },
        {
          "name": "average",
          "attributes": []
        },
        {
          "name": "maximum",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "measurement_system",
      "plural": "measurement_systems",
      "values": [
        {
          "name": "imperial",
          "attributes": []
        },
        {
          "name": "metric",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "reason",
      "plural": "reasons",
      "values": [
        {
          "name": "prohibited",
          "attributes": [],
          "description": "Absolutely cannot ship"
        },
        {
          "name": "restricted",
          "attributes": [],
          "description": "May be able to ship depending on criteria"
        },
        {
          "name": "risk",
          "attributes": [],
          "description": "Known to cause delays at customs"
        }
      ],
      "attributes": [],
      "description": "Exception reasons"
    },
    {
      "name": "role",
      "plural": "roles",
      "values": [
        {
          "name": "admin",
          "attributes": []
        },
        {
          "name": "member",
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "A user's role within an organization"
    },
    {
      "name": "rounding_method",
      "plural": "rounding_methods",
      "values": [
        {
          "name": "up",
          "attributes": [],
          "description": "Round up to the specified rounding.value"
        },
        {
          "name": "down",
          "attributes": [],
          "description": "Round down to the specified rounding.value"
        },
        {
          "name": "nearest",
          "attributes": [],
          "description": "Round to the nearest specified rounding.value. If equidistant, will round up."
        }
      ],
      "attributes": [],
      "description": "Direction to round localized price"
    },
    {
      "name": "schedule_exception_status",
      "plural": "schedule_exception_statuses",
      "values": [
        {
          "name": "Open",
          "attributes": []
        },
        {
          "name": "Closed",
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Pending better name"
    },
    {
      "name": "sort_direction",
      "plural": "sort_directions",
      "values": [
        {
          "name": "ascending",
          "attributes": []
        },
        {
          "name": "descending",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "status",
      "plural": "statuses",
      "values": [
        {
          "name": "pending",
          "attributes": []
        },
        {
          "name": "info_received",
          "attributes": []
        },
        {
          "name": "in_transit",
          "attributes": []
        },
        {
          "name": "out_for_delivery",
          "attributes": []
        },
        {
          "name": "attempt_fail",
          "attributes": []
        },
        {
          "name": "delivered",
          "attributes": []
        },
        {
          "name": "exception",
          "attributes": []
        },
        {
          "name": "expired",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "strategy",
      "plural": "strategies",
      "values": [
        {
          "name": "range",
          "attributes": [],
          "description": "Tightest range"
        },
        {
          "name": "from",
          "attributes": [],
          "description": "Lowest minimum of the ranges"
        },
        {
          "name": "to",
          "attributes": [],
          "description": "Lowest maximum of the ranges"
        }
      ],
      "attributes": []
    },
    {
      "name": "tier_strategy",
      "plural": "tier_strategies",
      "values": [
        {
          "name": "fastest",
          "attributes": [],
          "description": "Optimize for fastest first, then cheapest"
        },
        {
          "name": "cheapest",
          "attributes": [],
          "description": "Optimize for cheapest first, then fastest"
        }
      ],
      "attributes": [],
      "description": "Strategy to apply when there are multiple rates available for a tier"
    },
    {
      "name": "unit_of_measurement",
      "plural": "unit_of_measurements",
      "values": [
        {
          "name": "millimeter",
          "attributes": [],
          "description": "Equivalent to MILLI(METRE)."
        },
        {
          "name": "centimeter",
          "attributes": [],
          "description": "Equivalent to CENTI(METRE)."
        },
        {
          "name": "inch",
          "attributes": [],
          "description": "A unit of length equal to 0.01004 m (standard name in)."
        },
        {
          "name": "foot",
          "attributes": [],
          "description": "A unit of length equal to 0.3048 m (standard name ft)."
        },
        {
          "name": "cubic_inch",
          "attributes": [],
          "description": "A unit of volume equal to one cubic inch (in³)."
        },
        {
          "name": "cubic_meter",
          "attributes": [],
          "description": "The metric unit for volume quantities (m³)."
        },
        {
          "name": "gram",
          "attributes": [],
          "description": "A unit of mass equal to 1 / 1000 kilogram (standard name g)."
        },
        {
          "name": "kilogram",
          "attributes": [],
          "description": "The base unit for mass quantities (kg)."
        },
        {
          "name": "meter",
          "attributes": [],
          "description": "The base unit for length quantities (m)."
        },
        {
          "name": "ounce",
          "attributes": [],
          "description": "A unit of mass equal to 1 / 16 POUND (standard name oz)."
        },
        {
          "name": "pound",
          "attributes": [],
          "description": "A unit of mass equal to 453.59237 grams (avoirdupois pound, standard name lb)."
        }
      ],
      "attributes": [],
      "description": "Defines the units of measurement that we support. As units are added, we conform with the standard units provided by jscience as part of JSR 363 - see http://jscience.org/api/javax/measure/unit/SI.html and http://jscience.org/api/javax/measure/unit/NonSI.html"
    },
    {
      "name": "unit_of_time",
      "plural": "unit_of_times",
      "values": [
        {
          "name": "day",
          "attributes": []
        },
        {
          "name": "hour",
          "attributes": []
        },
        {
          "name": "minute",
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Defines the units of time that we support. We confirm with the standard set of units of time from http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/TimeUnit.html"
    },
    {
      "name": "update_policy",
      "plural": "update_policies",
      "values": [
        {
          "name": "auto",
          "attributes": []
        },
        {
          "name": "queue",
          "attributes": [],
          "description": "Queue item update for approval."
        },
        {
          "name": "discard",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "value_added_service",
      "plural": "value_added_services",
      "values": [
        {
          "name": "Hazardous Material",
          "attributes": [],
          "description": "See https://en.wikipedia.org/wiki/ORM-D"
        }
      ],
      "attributes": []
    },
    {
      "name": "visibility",
      "plural": "visibilities",
      "values": [
        {
          "name": "public",
          "attributes": []
        },
        {
          "name": "private",
          "attributes": []
        }
      ],
      "attributes": []
    }
  ],
  "unions": [
    {
      "name": "adjustment",
      "plural": "adjustments",
      "types": [
        {
          "type": "margin",
          "attributes": []
        },
        {
          "type": "rounding",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator",
      "description": "Cost variation used to calculate localized prices"
    },
    {
      "name": "authorization_details",
      "plural": "authorization_detailses",
      "types": [
        {
          "type": "authorization_details_decline",
          "attributes": []
        },
        {
          "type": "authorization_details_success",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator",
      "description": "Represents all possible responses from an authorization attempt"
    },
    {
      "name": "credentials",
      "plural": "credentialses",
      "types": [
        {
          "type": "dhl_credentials",
          "attributes": []
        },
        {
          "type": "fedex_credentials",
          "attributes": []
        },
        {
          "type": "ups_credentials",
          "attributes": []
        },
        {
          "type": "usps_credentials",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "deminimus",
      "plural": "deminimuses",
      "types": [
        {
          "type": "deminimus_simple",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "document",
      "plural": "documents",
      "types": [
        {
          "type": "catalog_item_document",
          "attributes": []
        },
        {
          "type": "harmonization_document",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "expandable_booking",
      "plural": "expandable_bookings",
      "types": [
        {
          "type": "booking",
          "attributes": []
        },
        {
          "type": "booking_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "expandable_carrier",
      "plural": "expandable_carriers",
      "types": [
        {
          "type": "carrier",
          "attributes": []
        },
        {
          "type": "carrier_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "expandable_carrier_account",
      "plural": "expandable_carrier_accounts",
      "types": [
        {
          "type": "carrier_account",
          "attributes": []
        },
        {
          "type": "carrier_account_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "expandable_center",
      "plural": "expandable_centers",
      "types": [
        {
          "type": "center",
          "attributes": []
        },
        {
          "type": "center_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "expandable_delivery",
      "plural": "expandable_deliveries",
      "types": [
        {
          "type": "delivery",
          "attributes": []
        },
        {
          "type": "delivery_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "expandable_function",
      "plural": "expandable_functions",
      "types": [
        {
          "type": "function",
          "attributes": []
        },
        {
          "type": "function_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator",
      "description": "A function can be represented with just it's ID, or the entire model"
    },
    {
      "name": "expandable_lane",
      "plural": "expandable_lanes",
      "types": [
        {
          "type": "lane",
          "attributes": []
        },
        {
          "type": "lane_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "expandable_location",
      "plural": "expandable_locations",
      "types": [
        {
          "type": "location",
          "attributes": []
        },
        {
          "type": "location_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "expandable_option",
      "plural": "expandable_options",
      "types": [
        {
          "type": "option",
          "attributes": []
        },
        {
          "type": "option_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "expandable_organization",
      "plural": "expandable_organizations",
      "types": [
        {
          "type": "organization",
          "attributes": []
        },
        {
          "type": "organization_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "expandable_quote",
      "plural": "expandable_quotes",
      "types": [
        {
          "type": "quote",
          "attributes": []
        },
        {
          "type": "quote_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "expandable_service",
      "plural": "expandable_services",
      "types": [
        {
          "type": "service",
          "attributes": []
        },
        {
          "type": "service_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "expandable_shipment",
      "plural": "expandable_shipments",
      "types": [
        {
          "type": "shipment",
          "attributes": []
        },
        {
          "type": "shipment_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "expandable_shipment_label",
      "plural": "expandable_shipment_labels",
      "types": [
        {
          "type": "shipment_label",
          "attributes": []
        },
        {
          "type": "shipment_label_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "expandable_subcatalog",
      "plural": "expandable_subcatalogs",
      "types": [
        {
          "type": "subcatalog",
          "attributes": []
        },
        {
          "type": "subcatalog_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator",
      "description": "A subcatalog can be represented with just it's ID, or the entire model"
    },
    {
      "name": "expandable_tier",
      "plural": "expandable_tiers",
      "types": [
        {
          "type": "tier",
          "attributes": []
        },
        {
          "type": "tier_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "expandable_user",
      "plural": "expandable_users",
      "types": [
        {
          "type": "user",
          "attributes": []
        },
        {
          "type": "user_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "rule_outcome",
      "plural": "rule_outcomes",
      "types": [
        {
          "type": "amount_margin",
          "attributes": [],
          "description": "Add a certain amount on the actual base cost"
        },
        {
          "type": "at_cost",
          "attributes": []
        },
        {
          "type": "flat_rate",
          "attributes": []
        },
        {
          "type": "free_shipping",
          "attributes": []
        },
        {
          "type": "percent_margin",
          "attributes": [],
          "description": "Add a certain percentage of the actual base cost"
        }
      ],
      "attributes": [],
      "discriminator": "discriminator",
      "description": "Possible outcome types from a tier rule"
    }
  ],
  "models": [
    {
      "name": "address",
      "plural": "addresses",
      "fields": [
        {
          "name": "contact",
          "type": "contact",
          "required": true,
          "attributes": [],
          "description": "Contact information of entity at the address"
        },
        {
          "name": "location",
          "type": "location",
          "required": true,
          "attributes": [],
          "description": "Attributes on physical location"
        }
      ],
      "attributes": []
    },
    {
      "name": "amount_margin",
      "plural": "amount_margins",
      "fields": [
        {
          "name": "addition",
          "type": "price",
          "required": true,
          "attributes": [],
          "description": "Additional cost to be added to actual cost to get quote amount to show to customer"
        }
      ],
      "attributes": [],
      "description": "Rule outcome where shipping surfaced in quote is actual cost plus a predefined margin price"
    },
    {
      "name": "at_cost",
      "plural": "at_costs",
      "fields": [
        {
          "name": "at_cost",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Rule outcome where shipping surfaced in quote is actual cost of the service"
    },
    {
      "name": "attribute",
      "plural": "attributes",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "options",
          "type": "options",
          "required": true,
          "attributes": []
        },
        {
          "name": "label",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "An attribute represents applicable item data made available on specific UI elements (e.g. require 'Brand')"
    },
    {
      "name": "attribute_metadata",
      "plural": "attribute_metadata",
      "fields": [
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "value",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Attribtue metadata represents additional item data not configured in other top level fields"
    },
    {
      "name": "attribute_version",
      "plural": "attribute_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "attribute",
          "type": "attribute",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Retrieve journaled history of an attribute"
    },
    {
      "name": "authentication_form",
      "plural": "authentication_forms",
      "fields": [
        {
          "name": "email",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "password",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "authorization",
      "plural": "authorizations",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "reference",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Unique client reference number for this authorization"
        },
        {
          "name": "card",
          "type": "card_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The amount to authorize",
          "example": "120.38"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://reference.api.flow.io/currencies",
          "example": "USD"
        },
        {
          "name": "metadata",
          "type": "map[string]",
          "required": true,
          "attributes": [],
          "description": "A set of key/value pairs that you can attach to a charge object. It can be useful for storing additional information about the charge in a structured format."
        },
        {
          "name": "shipping",
          "type": "location",
          "required": false,
          "attributes": [],
          "description": "Shipping address, if relevant"
        },
        {
          "name": "details",
          "type": "authorization_details",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "An authorization is used to check and reserve funds w/ a given payment method. No funds are actually transferred; once you have you an authorization, you can capture up to the amount of the authorization."
    },
    {
      "name": "authorization_details_decline",
      "plural": "authorization_details_declines",
      "fields": [
        {
          "name": "reason",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Reason for the decline"
        },
        {
          "name": "avs",
          "type": "avs",
          "required": false,
          "attributes": []
        },
        {
          "name": "cvv",
          "type": "cvv",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a declined authorization"
    },
    {
      "name": "authorization_details_success",
      "plural": "authorization_details_successes",
      "fields": [
        {
          "name": "avs",
          "type": "avs",
          "required": false,
          "attributes": []
        },
        {
          "name": "cvv",
          "type": "cvv",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a successful authorization"
    },
    {
      "name": "authorization_form",
      "plural": "authorization_forms",
      "fields": [
        {
          "name": "reference",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Unique client reference number for this authorization"
        },
        {
          "name": "token",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The token of the payment method to use when authorizing this transaction"
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The amount to authorize",
          "example": "120.38"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://reference.api.flow.io/currencies",
          "example": "USD"
        },
        {
          "name": "cvv",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The card verification number. Note this number is never stored and thus is presented on each auth. Presenting the CVV may increase acceptance rates"
        },
        {
          "name": "metadata",
          "type": "map[string]",
          "required": false,
          "attributes": [],
          "description": "A set of key/value pairs that you can attach to a charge object. It can be useful for storing additional information about the charge in a structured format."
        },
        {
          "name": "shipping",
          "type": "location",
          "required": false,
          "attributes": [],
          "description": "Shipping address, if relevant"
        }
      ],
      "attributes": [],
      "description": "An authorization is used to check and reserve funds w/ a given payment method. No funds are actually transferred; once you have you an authorization, you can capture up to the amount of the authorization."
    },
    {
      "name": "authorization_reference",
      "plural": "authorization_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "authorization_version",
      "plural": "authorization_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "authorization",
          "type": "authorization",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "available_service",
      "plural": "available_services",
      "fields": [
        {
          "name": "service",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Carrier service level ID",
          "example": "ups-ground"
        }
      ],
      "attributes": [],
      "description": "Representation of a service level available at a center, including misc attributes. Only ID for now, more attributes will be added in the future."
    },
    {
      "name": "avs",
      "plural": "avses",
      "fields": [
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "message",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents data from the address verification check"
    },
    {
      "name": "booking",
      "plural": "bookings",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "shipments",
          "type": "[shipment_reference]",
          "required": true,
          "attributes": [],
          "description": "Shipments created as a result of booking the quote options"
        }
      ],
      "attributes": [],
      "description": "Represents second step of two-step purchase of Flow services."
    },
    {
      "name": "booking_form",
      "plural": "booking_forms",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "quote",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Reference to quote being booked by the organization"
        },
        {
          "name": "options",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "Selected list of options for the quote"
        }
      ],
      "attributes": [],
      "description": "Represents second step of two-step purchase of Flow services."
    },
    {
      "name": "booking_reference",
      "plural": "booking_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "booking_version",
      "plural": "booking_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "booking",
          "type": "expandable_booking",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "capture",
      "plural": "captures",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "reference",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Unique client reference number for this capture"
        },
        {
          "name": "authorization",
          "type": "authorization_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The amount to capture in the currency of the associated authorization. If not specified, defaults to the full amount of the authorization (minus any prior captures).",
          "example": "120.38"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Required if amount is specified. The ISO 4217-3 code for the currency. Case insensitive. See https://reference.api.flow.io/currencies",
          "example": "USD"
        }
      ],
      "attributes": [],
      "description": "Capture actually transfers funds. You can capture as many times as you'd like up until the total amount of the authorization has been captured or the authorization otherwise becomes unavailable (e.g. expires)."
    },
    {
      "name": "capture_form",
      "plural": "capture_forms",
      "fields": [
        {
          "name": "reference",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Unique client reference number for this capture"
        },
        {
          "name": "authorization_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": false,
          "attributes": [],
          "description": "The amount to capture in the currency of the associated authorization. If not specified, defaults to the full amount of the authorization (minus any prior captures).",
          "example": "120.38"
        },
        {
          "name": "currency",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Required if amount is specified. The ISO 4217-3 code for the currency. Case insensitive. See https://reference.api.flow.io/currencies",
          "example": "USD"
        }
      ],
      "attributes": [],
      "description": "Capture actually transfers funds. You can capture as many times as you'd like up until the total amount of the authorization has been captured or the authorization otherwise becomes unavailable (e.g. expires)."
    },
    {
      "name": "capture_version",
      "plural": "capture_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "capture",
          "type": "capture",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "card",
      "plural": "cards",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "type",
          "type": "card_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "expiration",
          "type": "expiration",
          "required": true,
          "attributes": []
        },
        {
          "name": "last4",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Cleartext last 4 numbers of the card"
        },
        {
          "name": "name",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Cardholder name"
        },
        {
          "name": "address",
          "type": "location",
          "required": false,
          "attributes": [],
          "description": "Cardholder address"
        }
      ],
      "attributes": [],
      "description": "Card represents the metadata about a secure, tokenized card. The card 'id' is a unique, cryptographically secure token by which this card can be identified in the future."
    },
    {
      "name": "card_form",
      "plural": "card_forms",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Cleartext card number. May contain integers only or integers with dashes. If dashes are provided, we will remove them, storing only the raw number.",
          "example": "4111111111111111 or 4111-1111-1111-1111"
        },
        {
          "name": "expiration_month",
          "type": "integer",
          "required": true,
          "attributes": [],
          "description": "The month of expiration expressed as a number. 1 = January, 12 = December",
          "minimum": 1,
          "maximum": 12,
          "example": "4"
        },
        {
          "name": "expiration_year",
          "type": "integer",
          "required": true,
          "attributes": [],
          "description": "The 4 digit expiration year",
          "example": "2016"
        },
        {
          "name": "name",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Cardholder name"
        },
        {
          "name": "address",
          "type": "location",
          "required": false,
          "attributes": [],
          "description": "Cardholder address"
        }
      ],
      "attributes": []
    },
    {
      "name": "card_reference",
      "plural": "card_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "card_version",
      "plural": "card_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "card",
          "type": "card",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "carrier",
      "plural": "carriers",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "DHL, Fedex, etc."
        },
        {
          "name": "facilities",
          "type": "[address]",
          "required": true,
          "attributes": [],
          "description": "List of facilities available for consolidation"
        },
        {
          "name": "visibility",
          "type": "visibility",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Partner that actually take a shipment between places (ex: FedEx, DHL, SF Express)"
    },
    {
      "name": "carrier_account",
      "plural": "carrier_accounts",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "carrier",
          "type": "carrier",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "User-friendly name to reference the carrier_account"
        },
        {
          "name": "credentials",
          "type": "credentials",
          "required": false,
          "attributes": [],
          "description": "Carrier carrier_account credentials necessary to integrate with organization's carrier carrier_account on their behalf."
        }
      ],
      "attributes": [],
      "description": "carrier_account an organization has with a carrier, including credentials. A carrier can have multiple carrier_accounts with a single carrier, each with their own set of credentials. This represents the many-to-many relationship between organizations and carriers."
    },
    {
      "name": "carrier_account_form",
      "plural": "carrier_account_forms",
      "fields": [
        {
          "name": "carrier",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "credentials",
          "type": "credentials",
          "required": false,
          "attributes": [],
          "description": "Carrier carrier_account credentials necessary to integrate with organization's carrier carrier_account on their behalf."
        }
      ],
      "attributes": []
    },
    {
      "name": "carrier_account_reference",
      "plural": "carrier_account_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "carrier_account_version",
      "plural": "carrier_account_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "carrier_account",
          "type": "expandable_carrier_account",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "carrier_form",
      "plural": "carrier_forms",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Name of the carrier",
          "minimum": 3
        },
        {
          "name": "facilities",
          "type": "[address]",
          "required": false,
          "attributes": [],
          "description": "List of facilities available for consolidation"
        },
        {
          "name": "visibility",
          "type": "visibility",
          "required": false,
          "attributes": [],
          "description": "Public vs private carrier"
        }
      ],
      "attributes": [],
      "description": "Partner that actually take a shipment between places (ex: FedEx, DHL, SF Express)"
    },
    {
      "name": "carrier_reference",
      "plural": "carrier_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "carrier_version",
      "plural": "carrier_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "carrier",
          "type": "expandable_carrier",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "catalog",
      "plural": "catalogs",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "catalog_item_document",
      "plural": "catalog_item_documents",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "categories",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "minimum": 0
        },
        {
          "name": "experiences",
          "type": "[experience_summary]",
          "required": true,
          "attributes": [],
          "minimum": 0
        },
        {
          "name": "attributes",
          "type": "[document_attribute]",
          "required": true,
          "attributes": [],
          "minimum": 0
        }
      ],
      "attributes": []
    },
    {
      "name": "catalog_version",
      "plural": "catalog_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "catalog",
          "type": "catalog",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "category_summary",
      "plural": "category_summaries",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The category, if known. If there is no category name, this indicates that the items in this bucket do not belong to any categories."
        },
        {
          "name": "count",
          "type": "long",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "center",
      "plural": "centers",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "capabilities",
          "type": "[capability]",
          "required": true,
          "attributes": [],
          "description": "List of standard capabilities that this center offers"
        },
        {
          "name": "address",
          "type": "address",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Long name of the facility. ex: Fosdick CT, Quiet Logistics Andover"
        },
        {
          "name": "schedule",
          "type": "schedule",
          "required": true,
          "attributes": [],
          "description": "Schedule of the origin location where shipment is originating. Contains normal operating hours, holiday periods, and cutoff."
        },
        {
          "name": "services",
          "type": "[available_service]",
          "required": true,
          "attributes": [],
          "description": "List of carrier service levels available at this center"
        },
        {
          "name": "timezone",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a facility capable of fulfilling a shipment"
    },
    {
      "name": "center_form",
      "plural": "center_forms",
      "fields": [
        {
          "name": "capabilities",
          "type": "[capability]",
          "required": true,
          "attributes": []
        },
        {
          "name": "address",
          "type": "address",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Organization-provided name for the center",
          "minimum": 3
        },
        {
          "name": "schedule",
          "type": "schedule",
          "required": true,
          "attributes": [],
          "description": "Schedule of the origin location where shipment is originating. Contains normal operating hours, holiday periods, and cutoff."
        },
        {
          "name": "services",
          "type": "[available_service]",
          "required": true,
          "attributes": [],
          "description": "List of carrier service levels available at this center"
        },
        {
          "name": "timezone",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "center_reference",
      "plural": "center_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "center_version",
      "plural": "center_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "center",
          "type": "expandable_center",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "checkout",
      "plural": "checkouts",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "deliveries",
          "type": "[delivery]",
          "required": true,
          "attributes": [],
          "minimum": 1
        },
        {
          "name": "prices",
          "type": "[localized_price]",
          "required": true,
          "attributes": []
        },
        {
          "name": "total",
          "type": "localized_price",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Representation of information indicating landed cost and how it was derived"
    },
    {
      "name": "checkout_form",
      "plural": "checkout_forms",
      "fields": [
        {
          "name": "destination",
          "type": "location",
          "required": true,
          "attributes": []
        },
        {
          "name": "items",
          "type": "[line]",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "cleartext",
      "plural": "cleartexts",
      "fields": [
        {
          "name": "value",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The actual cleartext value of the token"
        }
      ],
      "attributes": [],
      "description": "The actual value of the API token. This is modeled as a separate resource as it is fetched only on demand."
    },
    {
      "name": "component",
      "plural": "components",
      "fields": [
        {
          "name": "adjustments",
          "type": "[adjustment_type]",
          "required": true,
          "attributes": []
        },
        {
          "name": "levies",
          "type": "[levy]",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "contact",
      "plural": "contacts",
      "fields": [
        {
          "name": "name",
          "type": "name",
          "required": true,
          "attributes": []
        },
        {
          "name": "email",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "phone",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Defines structured fields for a contact person. Typically used for specifying contact person for an account, shipment, or organization representative"
    },
    {
      "name": "country",
      "plural": "countries",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "United States of America"
        },
        {
          "name": "iso_3166_2",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 3166 2-character country code. See https://www.iso.org/obp/ui/#search",
          "example": "US"
        },
        {
          "name": "iso_3166_3",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 3166 3-character country code. See https://www.iso.org/obp/ui/#search",
          "example": "USA"
        },
        {
          "name": "measurement_system",
          "type": "measurement_system",
          "required": true,
          "attributes": []
        },
        {
          "name": "default_currency",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "ISO 4217 3-character currency code. See http://www.xe.com/iso4217.php",
          "example": "USD"
        }
      ],
      "attributes": []
    },
    {
      "name": "currency",
      "plural": "currencies",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "US Dollar"
        },
        {
          "name": "iso_4217_3",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "USD"
        }
      ],
      "attributes": [],
      "description": "ISO 4217 3-character currency code. See http://www.xe.com/iso4217.php"
    },
    {
      "name": "customs",
      "plural": "customses",
      "fields": [
        {
          "name": "signer",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Name of the person who created the customs declaration and is responsible for the validity of all information provided."
        },
        {
          "name": "commercial_term",
          "type": "commercial_term",
          "required": true,
          "attributes": [],
          "description": "The international commercial term reference of the shipment."
        }
      ],
      "attributes": [],
      "description": "Customs-related form information that need to be filled, either by Flow based on the customer's setup, or manually by the customer through the API"
    },
    {
      "name": "cvv",
      "plural": "cvvs",
      "fields": [
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "message",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents data from the card verification number check"
    },
    {
      "name": "datetime_range",
      "plural": "datetime_ranges",
      "fields": [
        {
          "name": "from",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "to",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "delivery",
      "plural": "deliveries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "items",
          "type": "[item_summary]",
          "required": true,
          "attributes": []
        },
        {
          "name": "options",
          "type": "[option]",
          "required": true,
          "attributes": [],
          "minimum": 1
        }
      ],
      "attributes": [],
      "description": "Represents a collection of items, the available delivery option tier for that collection of items, and metadata about those options"
    },
    {
      "name": "delivery_form",
      "plural": "delivery_forms",
      "fields": [
        {
          "name": "quote",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "items",
          "type": "[item_summary]",
          "required": true,
          "attributes": []
        },
        {
          "name": "destination",
          "type": "address",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a collection of items, the available delivery option tier for that collection of items, and metadata about those options"
    },
    {
      "name": "delivery_reference",
      "plural": "delivery_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "delivery_version",
      "plural": "delivery_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "delivery",
          "type": "expandable_delivery",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "delivery_window",
      "plural": "delivery_windows",
      "fields": [
        {
          "name": "from",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "to",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "deminimus_simple",
      "plural": "deminimus_simples",
      "fields": [
        {
          "name": "value",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The value below which no tax or duty is collected"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO-4217 3 character currency code in which the value is calculated"
        },
        {
          "name": "components",
          "type": "[levy_component]",
          "required": true,
          "attributes": [],
          "description": "The components which are used to determine the value. Note that these components may be different from the components for the tax or duty itself"
        },
        {
          "name": "minimum",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "If the value of the deminimus is less than the minimum, no tax or duty is due",
          "minimum": 0
        }
      ],
      "attributes": []
    },
    {
      "name": "dhl_credentials",
      "plural": "dhl_credentialses",
      "fields": [
        {
          "name": "account_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "site_id",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Credentials used to communicate with DHL on behalf of client organization."
    },
    {
      "name": "dimension",
      "plural": "dimensions",
      "fields": [
        {
          "name": "type",
          "type": "dimension_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "depth",
          "type": "measurement",
          "required": false,
          "attributes": []
        },
        {
          "name": "length",
          "type": "measurement",
          "required": false,
          "attributes": []
        },
        {
          "name": "weight",
          "type": "measurement",
          "required": false,
          "attributes": []
        },
        {
          "name": "width",
          "type": "measurement",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "display",
      "plural": "displays",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "component",
          "type": "component",
          "required": true,
          "attributes": []
        },
        {
          "name": "experience",
          "type": "experience_reference",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Defines elements of a localized cost available for display (e.g on a localized product page or checkout)"
    },
    {
      "name": "display_form",
      "plural": "display_forms",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "component",
          "type": "component",
          "required": true,
          "attributes": []
        },
        {
          "name": "experience_id",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "display_version",
      "plural": "display_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "display",
          "type": "display",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "document_attribute",
      "plural": "document_attributes",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "value",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "duty",
      "plural": "duties",
      "fields": [
        {
          "name": "rate",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The combined duty rate",
          "minimum": 0,
          "example": ".35"
        },
        {
          "name": "components",
          "type": "[levy_component]",
          "required": true,
          "attributes": [],
          "description": "The components to which duty is applied.",
          "minimum": 1
        },
        {
          "name": "deminimus",
          "type": "deminimus",
          "required": false,
          "attributes": [],
          "description": "Describes the duty deminimus if there is one for this destination"
        }
      ],
      "attributes": [],
      "description": "Represents a simple model of duties that apply to a given item / trade lane."
    },
    {
      "name": "email_verification",
      "plural": "email_verifications",
      "fields": [
        {
          "name": "email",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents the successful response of an email verification token. We return the email address in this case to allow the UI to display which email address was verified."
    },
    {
      "name": "error",
      "plural": "errors",
      "fields": [
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Machine readable code for this specific error message"
        },
        {
          "name": "message",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Description of the error"
        }
      ],
      "attributes": [],
      "description": "Represents an error of some sort (e.g. invalid input). Each error will contain a code and a specific message describing the failure."
    },
    {
      "name": "estimated_window",
      "plural": "estimated_windows",
      "fields": [
        {
          "name": "from",
          "type": "integer",
          "required": true,
          "attributes": []
        },
        {
          "name": "to",
          "type": "integer",
          "required": true,
          "attributes": []
        },
        {
          "name": "unit",
          "type": "unit_of_time",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Range of time given a from and to number and the unit. For example: 1-4 hours or 4-7 days"
    },
    {
      "name": "event",
      "plural": "events",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "label",
          "type": "label_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "location",
          "type": "expandable_location",
          "required": true,
          "attributes": []
        },
        {
          "name": "status",
          "type": "status",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "event_form",
      "plural": "event_forms",
      "fields": [
        {
          "name": "label_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "status",
          "type": "status",
          "required": true,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "location",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "event_summary",
      "plural": "event_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "status",
          "type": "status",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "event_version",
      "plural": "event_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "event",
          "type": "event_summary",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "exception",
      "plural": "exceptions",
      "fields": [
        {
          "name": "type",
          "type": "exception_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "datetime_range",
          "type": "datetime_range",
          "required": true,
          "attributes": [],
          "description": "Range for the holiday. For single-day holidays, from and to should just be the same.",
          "example": "2016/12/24 12:00 am to 2016/12/25 11:59 pm"
        }
      ],
      "attributes": [],
      "description": "Represents an exception to the schedule of a location."
    },
    {
      "name": "experience",
      "plural": "experiences",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "country",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "iso_3166_3 currency code as defined in http://reference.api.flow.io/countries",
          "example": "USA"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "iso_4217_3 currency code as defined in http://reference.api.flow.io/currencies",
          "example": "usd"
        },
        {
          "name": "language",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "iso_639_2 language code as defined in http://reference.api.flow.io/languages",
          "example": "en"
        },
        {
          "name": "measurement_system",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "subcatalog",
          "type": "subcatalog_reference",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Properties that define a customized local experience for a given country"
    },
    {
      "name": "experience_form",
      "plural": "experience_forms",
      "fields": [
        {
          "name": "country",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "iso_3166_3 currency code as defined in http://reference.api.flow.io/countries",
          "minimum": 3,
          "maximum": 3,
          "example": "USA"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Custom defined name for the experience"
        },
        {
          "name": "currency",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "iso_4217_3 currency code as defined in http://reference.api.flow.io/currencies",
          "minimum": 3,
          "maximum": 3,
          "example": "usd"
        },
        {
          "name": "language",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "iso_639_2 language code as defined in http://reference.api.flow.io/languages",
          "example": "en"
        },
        {
          "name": "measurement_system",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "subcatalog_id",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "experience_reference",
      "plural": "experience_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "experience_summary",
      "plural": "experience_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "currency",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://reference.api.flow.io/currencies",
          "example": "USD"
        },
        {
          "name": "country",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The ISO 3166-3 code for the destination country. Case insensitive. See https://reference.api.flow.io/countries",
          "example": "USA"
        }
      ],
      "attributes": [],
      "description": "Some important fields related to experiences used in various APIs"
    },
    {
      "name": "experience_version",
      "plural": "experience_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "experience",
          "type": "experience",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "expiration",
      "plural": "expirations",
      "fields": [
        {
          "name": "month",
          "type": "integer",
          "required": true,
          "attributes": [],
          "description": "The month of expiration expressed as a number. 1 = January, 12 = December",
          "minimum": 1,
          "maximum": 12,
          "example": "4"
        },
        {
          "name": "year",
          "type": "integer",
          "required": true,
          "attributes": [],
          "description": "The 4 digit expiration year",
          "example": "2016"
        }
      ],
      "attributes": [],
      "description": "The month and year at which a card expires"
    },
    {
      "name": "fedex_credentials",
      "plural": "fedex_credentialses",
      "fields": [
        {
          "name": "account_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "meter_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "username_password",
          "type": "username_password",
          "required": true,
          "attributes": []
        },
        {
          "name": "smartpost_hub_id",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Credentials used to communicate with Fedex on behalf of client organization."
    },
    {
      "name": "flat_rate",
      "plural": "flat_rates",
      "fields": [
        {
          "name": "price",
          "type": "price",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Rule outcome where shipping surfaced in quote is pre-defined flat rate"
    },
    {
      "name": "flow",
      "plural": "flows",
      "fields": [
        {
          "name": "origin",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The country of origin as a iso_4217_3 currency code. See http://reference.api.flow.io/countries",
          "minimum": 3,
          "maximum": 3,
          "example": "USA"
        },
        {
          "name": "function",
          "type": "expandable_function",
          "required": false,
          "attributes": []
        },
        {
          "name": "hs6",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Flow internal model containing an item's origin and classified harmonization code (6 digit)"
    },
    {
      "name": "free_shipping",
      "plural": "free_shippings",
      "fields": [
        {
          "name": "free_shipping",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Rule outcome where shipping surfaced in quote is free"
    },
    {
      "name": "function",
      "plural": "functions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "subcatalog_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "position",
          "type": "long",
          "required": true,
          "attributes": []
        },
        {
          "name": "presets",
          "type": "presets",
          "required": true,
          "attributes": []
        },
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "q",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Prioritized calculation yielding a localized price (also allows for custom defined price function)"
    },
    {
      "name": "function_form",
      "plural": "function_forms",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "subcatalog_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "q",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "presets",
          "type": "presets",
          "required": false,
          "attributes": []
        },
        {
          "name": "code",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "position",
          "type": "long",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "function_reference",
      "plural": "function_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "function_summary",
      "plural": "function_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "function_version",
      "plural": "function_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "function",
          "type": "function",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "harmonization_document",
      "plural": "harmonization_documents",
      "fields": [
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "categories",
          "type": "[category_summary]",
          "required": true,
          "attributes": [],
          "minimum": 1
        },
        {
          "name": "origin",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "ISO 3166 3-character code for country of origin. See https://www.iso.org/obp/ui/#search",
          "example": "USA"
        }
      ],
      "attributes": []
    },
    {
      "name": "harmonization_settings",
      "plural": "harmonization_settings",
      "fields": [
        {
          "name": "duty_strategy",
          "type": "levy_strategy",
          "required": true,
          "attributes": [],
          "description": "Documents what will happen if we are unable to get an actual duty rate for this item, i.e. there will be estimation of some sort",
          "default": "maximum"
        },
        {
          "name": "tax_strategy",
          "type": "levy_strategy",
          "required": true,
          "attributes": [],
          "description": "Documents what will happen if we are unable to get an actual duty rate for this item, i.e. there will be estimation of some sort",
          "default": "maximum"
        }
      ],
      "attributes": [],
      "description": "Organization level settings."
    },
    {
      "name": "harmonization_settings_form",
      "plural": "harmonization_settings_forms",
      "fields": [
        {
          "name": "duty_strategy",
          "type": "levy_strategy",
          "required": false,
          "attributes": []
        },
        {
          "name": "tax_strategy",
          "type": "levy_strategy",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "harmonized_item",
      "plural": "harmonized_items",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Description of the item that is being classified."
        },
        {
          "name": "categories",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "default": "[]"
        },
        {
          "name": "metadata",
          "type": "map[string]",
          "required": true,
          "attributes": [],
          "default": "{}"
        }
      ],
      "attributes": [],
      "description": "A harmonized item stores explicit information about this item for the purposes of harmonization / classification. The harmonization process begins by creating a harmonized item; this kicks off the internal processes. Once assigned, codes will be available via the hs6 and hs10 resources"
    },
    {
      "name": "harmonized_item_duty",
      "plural": "harmonized_item_duties",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "item",
          "type": "harmonized_item_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "origin",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166 2 or 3 character code for the country of origin. Case insensitive. See https://reference.api.flow.io/countries",
          "example": "USA"
        },
        {
          "name": "destination",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166 2 or 3 character code for the destination country. Case insensitive. See https://reference.api.flow.io/countries",
          "example": "CAN"
        },
        {
          "name": "rate",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The actual duty rate, expressed as a decimal (e.g. 10% is represented as .1 not 10)",
          "minimum": 0,
          "example": ".15"
        }
      ],
      "attributes": [],
      "description": "Used to specifically set an item's duty rate for a given trade lane."
    },
    {
      "name": "harmonized_item_duty_form",
      "plural": "harmonized_item_duty_forms",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "origin",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "destination",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "rate",
          "type": "decimal",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "harmonized_item_duty_version",
      "plural": "harmonized_item_duty_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "harmonized_item_duty",
          "type": "harmonized_item_duty",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "harmonized_item_form",
      "plural": "harmonized_item_forms",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "categories",
          "type": "[string]",
          "required": false,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "metadata",
          "type": "map[string]",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "harmonized_item_put_form",
      "plural": "harmonized_item_put_forms",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "categories",
          "type": "[string]",
          "required": false,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "metadata",
          "type": "map[string]",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "harmonized_item_reference",
      "plural": "harmonized_item_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        }
      ],
      "attributes": []
    },
    {
      "name": "harmonized_item_version",
      "plural": "harmonized_item_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "harmonized_item",
          "type": "harmonized_item",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "healthcheck",
      "plural": "healthchecks",
      "fields": [
        {
          "name": "status",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "healthy"
        }
      ],
      "attributes": []
    },
    {
      "name": "hs10",
      "plural": "hs10",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "item",
          "type": "harmonized_item_reference",
          "required": true,
          "attributes": [],
          "description": "The item to which this code is assigned"
        },
        {
          "name": "origin",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166 3 character code for the country of origin"
        },
        {
          "name": "destination",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166 3 character code for the destination country"
        },
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The assigned HS-10 code",
          "minimum": 10
        }
      ],
      "attributes": [],
      "description": "The (Harmonized System) HS-10 code assigned to an item with a given origin/destination pair."
    },
    {
      "name": "hs10_version",
      "plural": "hs10_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "hs10",
          "type": "hs10",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "hs6",
      "plural": "hs6",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "item",
          "type": "harmonized_item_reference",
          "required": true,
          "attributes": [],
          "description": "The item to which this code is assigned"
        },
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The assigned HS-6 code",
          "minimum": 6,
          "maximum": 6
        }
      ],
      "attributes": [],
      "description": "The (Harmonized System) HS-6 code assigned to an item."
    },
    {
      "name": "hs6_version",
      "plural": "hs6_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "hs6",
          "type": "hs6",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "image",
      "plural": "images",
      "fields": [
        {
          "name": "url",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The full URL to the image",
          "example": "https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png"
        },
        {
          "name": "tags",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "Tags can be used to identify the type of image being sent",
          "default": "[]"
        }
      ],
      "attributes": [],
      "description": "The URL to an image, with optional tags. Flow Commerce primarily uses images to enhance the administrative tools (e.g. showing an item image in console)"
    },
    {
      "name": "image_form",
      "plural": "image_forms",
      "fields": [
        {
          "name": "url",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The full URL to the image",
          "example": "https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png"
        },
        {
          "name": "tags",
          "type": "[string]",
          "required": false,
          "attributes": [],
          "description": "Optional tags that can keep track of which image this is"
        }
      ],
      "attributes": [],
      "description": "Image form defines the data needed to create an image"
    },
    {
      "name": "invitation",
      "plural": "invitations",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "organization",
          "type": "expandable_organization",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "email",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The email address to which we send this invitation"
        },
        {
          "name": "name",
          "type": "name",
          "required": true,
          "attributes": []
        },
        {
          "name": "role",
          "type": "role",
          "required": true,
          "attributes": []
        },
        {
          "name": "expiration",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The date / time on which this token expires. Current default is for tokens to live for 1 week"
        }
      ],
      "attributes": [],
      "description": "An invitation via email to a user to join this organization. The user will then walk through a user login/registration process and will immediately become a member of the organization."
    },
    {
      "name": "invitation_accepts_form",
      "plural": "invitation_accepts_forms",
      "fields": [
        {
          "name": "user_id",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "invitation_form",
      "plural": "invitation_forms",
      "fields": [
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "email",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "name",
          "required": false,
          "attributes": []
        },
        {
          "name": "role",
          "type": "role",
          "required": true,
          "attributes": [],
          "default": "member"
        }
      ],
      "attributes": []
    },
    {
      "name": "invitation_version",
      "plural": "invitation_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "invitation",
          "type": "invitation",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "item",
      "plural": "items",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "locale",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "en_US"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "price",
          "type": "price",
          "required": true,
          "attributes": []
        },
        {
          "name": "categories",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "default": "[]"
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "attributes",
          "type": "[attribute_metadata]",
          "required": true,
          "attributes": [],
          "default": "[]"
        },
        {
          "name": "dimensions",
          "type": "[dimension]",
          "required": true,
          "attributes": [],
          "default": "[]"
        },
        {
          "name": "images",
          "type": "[image]",
          "required": true,
          "attributes": [],
          "default": "[]"
        },
        {
          "name": "flow",
          "type": "flow",
          "required": false,
          "attributes": []
        },
        {
          "name": "local",
          "type": "local",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "The Flow item defines a specific item that can be purchased by a consumer. For many clients, this will map to a Sku."
    },
    {
      "name": "item_form",
      "plural": "item_forms",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "locale",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The locale in which the content of this item is written.",
          "example": "en_US"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The customer friendly name of the actual item in the catalog.",
          "example": "Drawstring linen pants"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "iso_4217_3 currency code as defined in http://reference.api.flow.io/currencies",
          "example": "usd"
        },
        {
          "name": "price",
          "type": "double",
          "required": true,
          "attributes": [],
          "description": "The actual price of the item as offered to a customer. This price must be in the currency specified for this item."
        },
        {
          "name": "categories",
          "type": "[string]",
          "required": false,
          "attributes": [],
          "description": "A list of categories associated with this item."
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "If provided, the item description is used to improve classification."
        },
        {
          "name": "attributes",
          "type": "[attribute_metadata]",
          "required": false,
          "attributes": [],
          "description": "Attributes represent all other product data that you have regarding this item. Common attributes include 'country_of_origin', 'color', 'size', 'material', etc. We recommend including as many attributes as possible."
        },
        {
          "name": "dimensions",
          "type": "[dimension]",
          "required": false,
          "attributes": [],
          "description": "If provided, dimensions are used to drive more accurate shipping estimates."
        },
        {
          "name": "images",
          "type": "[image_form]",
          "required": false,
          "attributes": [],
          "description": "If provided, the item images will be used to enhance the user experience in Flow's online tools."
        }
      ],
      "attributes": [],
      "description": "The item form defines the data required to create an item."
    },
    {
      "name": "item_summary",
      "plural": "item_summaries",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "categories",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "default": "[]"
        },
        {
          "name": "dimensions",
          "type": "[dimension]",
          "required": true,
          "attributes": [],
          "default": "[]"
        },
        {
          "name": "price",
          "type": "price",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents metadata about the customer's line item product"
    },
    {
      "name": "item_version",
      "plural": "item_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "item",
          "type": "item",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "label",
      "plural": "labels",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "tracking",
          "type": "tracking_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "status",
          "type": "status",
          "required": true,
          "attributes": []
        },
        {
          "name": "carrier",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "tracking_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "delivery_estimate",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a specific label being tracked as part of the tracking bucket"
    },
    {
      "name": "label_form",
      "plural": "label_forms",
      "fields": [
        {
          "name": "tracking_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "status",
          "type": "status",
          "required": true,
          "attributes": [],
          "default": "pending"
        },
        {
          "name": "carrier",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "tracking_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "delivery_estimate",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": [],
          "description": "Defaults to now() if not provided"
        }
      ],
      "attributes": [],
      "description": "Represents a specific label being tracked as part of the tracking bucket"
    },
    {
      "name": "label_summary",
      "plural": "label_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "tracking",
          "type": "tracking_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "status",
          "type": "status",
          "required": true,
          "attributes": []
        },
        {
          "name": "carrier",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "tracking_number",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "label_version",
      "plural": "label_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "label",
          "type": "label_summary",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "lane",
      "plural": "lanes",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "service",
          "type": "service",
          "required": true,
          "attributes": []
        },
        {
          "name": "origin",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Origin country for a shipment. The ISO 3166-3 country code. Case insensitive. See https://reference.api.flow.io/countries."
        },
        {
          "name": "destination",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Destination country for a shipment. The ISO 3166-3 country code. Case insensitive. See https://reference.api.flow.io/countries"
        },
        {
          "name": "window",
          "type": "estimated_window",
          "required": true,
          "attributes": [],
          "description": "Minimum to maximum amount of time a typical shipment would take",
          "example": "1 to 3 days"
        },
        {
          "name": "exceptions",
          "type": "[lane_exception]",
          "required": true,
          "attributes": [],
          "description": "List of exceptions for this lane - can be prohibited, restricted, or terms known to cause customs/shipping delays"
        }
      ],
      "attributes": [],
      "description": "Available origin/destination mapping and available metadata for lanes of a carrier Service. e.g. UPS Ground only US-US, UPS Intl only US-Intl, etc"
    },
    {
      "name": "lane_exception",
      "plural": "lane_exceptions",
      "fields": [
        {
          "name": "keyword",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "reason",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "lane_form",
      "plural": "lane_forms",
      "fields": [
        {
          "name": "service",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Carrier service level associated with this lane"
        },
        {
          "name": "origin_country",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Origin country for a shipment. The ISO 3166-3 country code. Case insensitive. See https://reference.api.flow.io/countries",
          "example": "USA"
        },
        {
          "name": "destination_country",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Destination country for a shipment. The ISO 3166-3 country code. Case insensitive. See https://reference.api.flow.io/countries",
          "example": "USA"
        },
        {
          "name": "window",
          "type": "estimated_window",
          "required": true,
          "attributes": [],
          "description": "Min and max window of delivery for this lane"
        },
        {
          "name": "exceptions",
          "type": "[lane_exception]",
          "required": true,
          "attributes": [],
          "description": "List of exceptions for this lane - can be prohibited, restricted, or terms known to cause customs/shipping delays"
        }
      ],
      "attributes": []
    },
    {
      "name": "lane_reference",
      "plural": "lane_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "lane_version",
      "plural": "lane_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "lane",
          "type": "expandable_lane",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "language",
      "plural": "languages",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "English"
        },
        {
          "name": "iso_639_2",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "en"
        }
      ],
      "attributes": [],
      "description": "ISO 639 2-character language code. See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes"
    },
    {
      "name": "line",
      "plural": "lines",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "quantity",
          "type": "long",
          "required": true,
          "attributes": [],
          "minimum": 1
        }
      ],
      "attributes": [],
      "description": "Represents an order line for checkout"
    },
    {
      "name": "local",
      "plural": "locals",
      "fields": [
        {
          "name": "prices",
          "type": "[localized_price]",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "localized_price",
      "plural": "localized_prices",
      "fields": [
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "amount",
          "type": "double",
          "required": true,
          "attributes": []
        },
        {
          "name": "label",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "location",
      "plural": "locations",
      "fields": [
        {
          "name": "text",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Full text version of address"
        },
        {
          "name": "streets",
          "type": "[string]",
          "required": false,
          "attributes": [],
          "description": "Array for street line 1, street line 2, etc., in order"
        },
        {
          "name": "city",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "province",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "postal",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "country",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://reference.api.flow.io/countries",
          "example": "USA"
        },
        {
          "name": "latitude",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "longitude",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Defines structured fields for address to be used in user/form input. Either text or the structured input needs to be present."
    },
    {
      "name": "location_reference",
      "plural": "location_references",
      "fields": [
        {
          "name": "text",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Full text version of address"
        }
      ],
      "attributes": []
    },
    {
      "name": "margin",
      "plural": "margins",
      "fields": [
        {
          "name": "name",
          "type": "adjustment_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "value",
          "type": "double",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "measurement",
      "plural": "measurements",
      "fields": [
        {
          "name": "value",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "12.23"
        },
        {
          "name": "units",
          "type": "unit_of_measurement",
          "required": true,
          "attributes": [],
          "example": "inch"
        }
      ],
      "attributes": []
    },
    {
      "name": "membership",
      "plural": "memberships",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "organization",
          "type": "expandable_organization",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "user",
          "type": "expandable_user",
          "required": true,
          "attributes": []
        },
        {
          "name": "role",
          "type": "role",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents the users that are part of this organization. Primary purpose is to manage which users have access to the organization's data and to provide a simple user interface to assign roles and permissions to each member of the organization"
    },
    {
      "name": "membership_form",
      "plural": "membership_forms",
      "fields": [
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The id of the organization"
        },
        {
          "name": "user",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The id of the user to add to this organization"
        },
        {
          "name": "role",
          "type": "role",
          "required": true,
          "attributes": [],
          "default": "member"
        }
      ],
      "attributes": [],
      "description": "Top level resource to create a membership."
    },
    {
      "name": "membership_put_form",
      "plural": "membership_put_forms",
      "fields": [
        {
          "name": "role",
          "type": "role",
          "required": true,
          "attributes": [],
          "default": "member"
        }
      ],
      "attributes": [],
      "description": "Top level resource to create a membership."
    },
    {
      "name": "membership_version",
      "plural": "membership_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "membership",
          "type": "membership",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "name",
      "plural": "names",
      "fields": [
        {
          "name": "first",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "last",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "name_form",
      "plural": "name_forms",
      "fields": [
        {
          "name": "first",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "last",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "option",
      "plural": "options",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "cost",
          "type": "price",
          "required": true,
          "attributes": [],
          "description": "Actual shipping cost to be charged to the merchant by Flow"
        },
        {
          "name": "price",
          "type": "price",
          "required": true,
          "attributes": [],
          "description": "Price of shipping to be used for the end-customer selecting this option. Can be actual cost, free shipping, etc."
        },
        {
          "name": "service",
          "type": "service",
          "required": true,
          "attributes": []
        },
        {
          "name": "tier",
          "type": "tier_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "window",
          "type": "datetime_range",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a way to fulfill a delivery, including an estimates for the date range and cost"
    },
    {
      "name": "option_form",
      "plural": "option_forms",
      "fields": [
        {
          "name": "delivery",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "items",
          "type": "[item_summary]",
          "required": true,
          "attributes": []
        },
        {
          "name": "destination",
          "type": "address",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a way to fulfill a delivery, including an estimates for the date range and cost"
    },
    {
      "name": "option_reference",
      "plural": "option_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "option_version",
      "plural": "option_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "option",
          "type": "expandable_option",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "options",
      "plural": "optionses",
      "fields": [
        {
          "name": "show_in_catalog",
          "type": "boolean",
          "required": true,
          "attributes": [],
          "default": "false"
        },
        {
          "name": "show_in_harmonization",
          "type": "boolean",
          "required": true,
          "attributes": [],
          "default": "false"
        }
      ],
      "attributes": [],
      "description": "Flags to indicate whether a feature is enabled/disabled on a particular model (e.g. show/do not show attribute as a column in harmonization table view of items)"
    },
    {
      "name": "organization",
      "plural": "organizations",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a single organization in the system"
    },
    {
      "name": "organization_form",
      "plural": "organization_forms",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Defaults to a URL safe and unique version of the name",
          "minimum": 3
        },
        {
          "name": "name",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Defaults to the id",
          "minimum": 3
        }
      ],
      "attributes": [],
      "description": "Either id or name is required."
    },
    {
      "name": "organization_reference",
      "plural": "organization_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "organization_summary",
      "plural": "organization_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "organization_version",
      "plural": "organization_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "organization",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "password_change_form",
      "plural": "password_change_forms",
      "fields": [
        {
          "name": "current",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The current valid account password"
        },
        {
          "name": "new",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The new password"
        }
      ],
      "attributes": []
    },
    {
      "name": "password_reset_form",
      "plural": "password_reset_forms",
      "fields": [
        {
          "name": "token",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The token for the password reset request"
        },
        {
          "name": "password",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The new password"
        }
      ],
      "attributes": []
    },
    {
      "name": "password_reset_request_form",
      "plural": "password_reset_request_forms",
      "fields": [
        {
          "name": "email",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "percent_margin",
      "plural": "percent_margins",
      "fields": [
        {
          "name": "percentage",
          "type": "double",
          "required": true,
          "attributes": [],
          "description": "Percentage of the cost to be added to actual cost to get quote amount to show to customer"
        }
      ],
      "attributes": [],
      "description": "Rule outcome where shipping surfaced in quote is actual cost plus a predefined margin percentage"
    },
    {
      "name": "presets",
      "plural": "presets",
      "fields": [
        {
          "name": "adjustments",
          "type": "[adjustment]",
          "required": true,
          "attributes": [],
          "default": "[]"
        },
        {
          "name": "levies",
          "type": "[levy]",
          "required": true,
          "attributes": [],
          "default": "[]"
        }
      ],
      "attributes": [],
      "description": "Presentation for UI that is used to generate a localized price function"
    },
    {
      "name": "price",
      "plural": "prices",
      "fields": [
        {
          "name": "amount",
          "type": "double",
          "required": true,
          "attributes": []
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "iso_4217_3 currency code as defined in http://reference.api.flow.io/currencies",
          "example": "usd"
        },
        {
          "name": "label",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents an amount-currency pair for a basic price"
    },
    {
      "name": "quote",
      "plural": "quotes",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "destination",
          "type": "address",
          "required": true,
          "attributes": []
        },
        {
          "name": "deliveries",
          "type": "[delivery]",
          "required": true,
          "attributes": []
        },
        {
          "name": "exceptions",
          "type": "[quote_exception]",
          "required": true,
          "attributes": []
        },
        {
          "name": "customs",
          "type": "customs",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a collection of deliveries and available options for fulfillment of that delivery"
    },
    {
      "name": "quote_exception",
      "plural": "quote_exceptions",
      "fields": [
        {
          "name": "items",
          "type": "[item_summary]",
          "required": true,
          "attributes": []
        },
        {
          "name": "reason",
          "type": "reason",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "For whatever reason, if an item cannot be shipped and slotted into a quote delivery, then item(s) are exceptions to shipping and surface a reason."
    },
    {
      "name": "quote_form",
      "plural": "quote_forms",
      "fields": [
        {
          "name": "items",
          "type": "[item_summary]",
          "required": true,
          "attributes": [],
          "minimum": 1
        },
        {
          "name": "destination",
          "type": "address",
          "required": true,
          "attributes": []
        },
        {
          "name": "customs",
          "type": "customs",
          "required": false,
          "attributes": []
        },
        {
          "name": "origin",
          "type": "address",
          "required": false,
          "attributes": [],
          "description": "Generate quote based on specific origin location, if provided."
        }
      ],
      "attributes": []
    },
    {
      "name": "quote_reference",
      "plural": "quote_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "quote_version",
      "plural": "quote_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "quote",
          "type": "expandable_quote",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "refund",
      "plural": "refunds",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "reference",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Unique client reference number for this refund"
        },
        {
          "name": "capture",
          "type": "capture",
          "required": true,
          "attributes": []
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The amount to refund in the currency of the associated capture",
          "example": "120.38"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://reference.api.flow.io/currencies",
          "example": "USD"
        }
      ],
      "attributes": [],
      "description": "Refunds are used to issue refunds against a prior capture."
    },
    {
      "name": "refund_form",
      "plural": "refund_forms",
      "fields": [
        {
          "name": "capture_id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ID of the capture against which to issue the refund."
        },
        {
          "name": "reference",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Unique client reference number for this refund"
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": false,
          "attributes": [],
          "description": "The amount to refund, in the currency of the associated capture. Defaults to the value of the capture minus any prior refunds.",
          "example": "120.38"
        },
        {
          "name": "currency",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The ISO 4217-3 code for the currency. Required if amount is specified. Case insensitive. Note you will get an error if the currency does not match the related authrization's currency. See https://reference.api.flow.io/currencies",
          "example": "USD"
        }
      ],
      "attributes": [],
      "description": "Refund actually transfers funds. You can refund as many times as you'd like up until the total amount of the capture has been refunded."
    },
    {
      "name": "refund_version",
      "plural": "refund_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "refund",
          "type": "refund",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "rounding",
      "plural": "roundings",
      "fields": [
        {
          "name": "name",
          "type": "adjustment_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "rounding_method",
          "type": "rounding_method",
          "required": true,
          "attributes": []
        },
        {
          "name": "value",
          "type": "double",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "rule",
      "plural": "rules",
      "fields": [
        {
          "name": "query",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "Search API query"
        },
        {
          "name": "outcome",
          "type": "rule_outcome",
          "required": true,
          "attributes": [],
          "description": "Resulting cost function applied if query is met. e.g. service cost, free shipping, flat rate - 88.88 RMB"
        }
      ],
      "attributes": [],
      "description": "System to filter incoming quote for a shipment request based on a query and output corresponding outcomes."
    },
    {
      "name": "schedule",
      "plural": "schedules",
      "fields": [
        {
          "name": "calendar",
          "type": "calendar",
          "required": false,
          "attributes": [],
          "description": "Operating calendar used by origin location for shipment, if avialable. If not provided, assume they are never open.",
          "example": "Weekdays, 7 days, etc."
        },
        {
          "name": "holiday",
          "type": "holiday_calendar",
          "required": true,
          "attributes": [],
          "description": "Standard holiday set to respect for this schedule",
          "example": "US bank holidays"
        },
        {
          "name": "exception",
          "type": "[exception]",
          "required": true,
          "attributes": [],
          "description": "Holiday calendar used by origin location for shipment, if avialable.",
          "example": "Memorial Day, Independence Day, etc."
        },
        {
          "name": "cutoff",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Daily cutoff time for shipment fulfillment at origin location, if available. 24-hour time",
          "example": "16:45"
        }
      ],
      "attributes": [],
      "description": "Represents operating calendar and holidays of a location"
    },
    {
      "name": "service",
      "plural": "services",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "carrier",
          "type": "expandable_carrier",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Specific service rendered by the carrier (fedex ground saturday, ups overnight weekend, etc)"
    },
    {
      "name": "service_form",
      "plural": "service_forms",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Name of the Service",
          "minimum": 3
        },
        {
          "name": "carrier",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Flow ID of carrier using this Service."
        }
      ],
      "attributes": [],
      "description": "Specific service rendered by the carrier (fedex ground saturday, ups overnight weekend, etc)"
    },
    {
      "name": "service_reference",
      "plural": "service_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "service_version",
      "plural": "service_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "service",
          "type": "expandable_service",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "shipment",
      "plural": "shipments",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "commercial_invoice",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "S3 URL containing generated PDF commercial invoice required by customs for international shipments"
        },
        {
          "name": "destination",
          "type": "address",
          "required": true,
          "attributes": [],
          "description": "Final destination of this shipment"
        },
        {
          "name": "items",
          "type": "[item_summary]",
          "required": true,
          "attributes": [],
          "description": "Items contained in this shipment"
        },
        {
          "name": "shipment_labels",
          "type": "[shipment_label]",
          "required": true,
          "attributes": [],
          "description": "List of one or more carrier-generated shipping label(s) associated with this shipment"
        },
        {
          "name": "tracking_number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Flow-generated tracking number for use in Flow tracking service. Starts with F70."
        }
      ],
      "attributes": [],
      "description": "Represents a subset of items from an order grouped into a single physical shipment. Flow provides a generated tracking number to track this shipment across multiple possible hops and carriers."
    },
    {
      "name": "shipment_form",
      "plural": "shipment_forms",
      "fields": [
        {
          "name": "destination",
          "type": "address",
          "required": true,
          "attributes": []
        },
        {
          "name": "items",
          "type": "[item_summary]",
          "required": true,
          "attributes": []
        },
        {
          "name": "shipment_labels",
          "type": "[shipment_label_form]",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a subset of items from an order grouped into a single physical shipment."
    },
    {
      "name": "shipment_label",
      "plural": "shipment_labels",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "service",
          "type": "service",
          "required": true,
          "attributes": []
        },
        {
          "name": "tracking_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "window",
          "type": "datetime_range",
          "required": false,
          "attributes": []
        },
        {
          "name": "pdf",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Pre-signed S3 URL containing PDF copy of the shipping label. This is generated asynchronously and may not initially be available."
        },
        {
          "name": "zpl",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Pre-signed S3 URL containing ZPL copy of the shipping label. This is generated asynchronously and may not initially be available."
        }
      ],
      "attributes": [],
      "description": "Top-level information on shipment tracking shipment_label and number"
    },
    {
      "name": "shipment_label_form",
      "plural": "shipment_label_forms",
      "fields": [
        {
          "name": "service",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Service associated with this shipment_label."
        },
        {
          "name": "tracking_number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Carrier-issued reference number used to track a shipment."
        },
        {
          "name": "window",
          "type": "datetime_range",
          "required": false,
          "attributes": [],
          "description": "Carrier-provided information on actual delivery date range."
        },
        {
          "name": "data",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Actual zpl contents of the shipment_label to be generated, if available."
        },
        {
          "name": "shipment",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Shipment ID of the shipment_label, if shipment_label is generated after initial shipment is created"
        }
      ],
      "attributes": [],
      "description": "Top-level information on shipment tracking shipment_label and number"
    },
    {
      "name": "shipment_label_reference",
      "plural": "shipment_label_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "shipment_label_version",
      "plural": "shipment_label_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "shipment_label",
          "type": "expandable_shipment_label",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "shipment_reference",
      "plural": "shipment_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "shipment_version",
      "plural": "shipment_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "shipment",
          "type": "expandable_shipment",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "subcatalog",
      "plural": "subcatalogs",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "catalog",
          "type": "catalog",
          "required": true,
          "attributes": []
        },
        {
          "name": "country",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "settings",
          "type": "subcatalog_settings",
          "required": true,
          "attributes": []
        },
        {
          "name": "query",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "A configuration with custom query to select a subset of master catalog items for a localized experience"
    },
    {
      "name": "subcatalog_form",
      "plural": "subcatalog_forms",
      "fields": [
        {
          "name": "country",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "key",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "If not provided, key will be set to the country code of the provided countries (i.e. cad-fra)."
        },
        {
          "name": "query",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "settings",
          "type": "subcatalog_settings_form",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "subcatalog_item",
      "plural": "subcatalog_items",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "subcatalog_reference",
      "plural": "subcatalog_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "subcatalog_settings",
      "plural": "subcatalog_settings",
      "fields": [
        {
          "name": "update_policy",
          "type": "update_policy",
          "required": true,
          "attributes": [],
          "default": "auto"
        }
      ],
      "attributes": []
    },
    {
      "name": "subcatalog_settings_form",
      "plural": "subcatalog_settings_forms",
      "fields": [
        {
          "name": "update_policy",
          "type": "update_policy",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "subcatalog_version",
      "plural": "subcatalog_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "subcatalog",
          "type": "subcatalog",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "suggestion",
      "plural": "suggestions",
      "fields": [
        {
          "name": "label",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The suggestion to display to user"
        },
        {
          "name": "count",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "The number of results for the label"
        }
      ],
      "attributes": []
    },
    {
      "name": "tax",
      "plural": "taxes",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The name of the taxes being applied",
          "example": "VAT, GST + PST, HST"
        },
        {
          "name": "rate",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The combined tax rate",
          "minimum": 0,
          "example": ".35"
        },
        {
          "name": "components",
          "type": "[levy_component]",
          "required": true,
          "attributes": [],
          "description": "The components to which tax is applied.",
          "minimum": 1
        },
        {
          "name": "deminimus",
          "type": "deminimus",
          "required": false,
          "attributes": [],
          "description": "Describes the tax deminimus if there is one for this destination"
        }
      ],
      "attributes": [],
      "description": "Represents a simple model of taxes that apply to a given item / destination."
    },
    {
      "name": "tier",
      "plural": "tiers",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "experience",
          "type": "experience_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "integration",
          "type": "integration",
          "required": true,
          "attributes": [],
          "description": "Type of shipping integration used for this tier."
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "rules",
          "type": "[rule]",
          "required": true,
          "attributes": [],
          "description": "Ordered set of rules for this tier"
        },
        {
          "name": "services",
          "type": "[service]",
          "required": true,
          "attributes": [],
          "description": "Services assocaited with this tier"
        },
        {
          "name": "strategy",
          "type": "tier_strategy",
          "required": true,
          "attributes": [],
          "description": "If multiple available return outcomes for a single tier, strategy picks the top one based on cost or timing."
        },
        {
          "name": "visibility",
          "type": "visibility",
          "required": true,
          "attributes": [],
          "description": "Public or Private. Private ones appear as inactive/disabled to the public"
        }
      ],
      "attributes": [],
      "description": "Service shipping tier available in this tier gorup. e.g. Standard tier, Express tier, Economy tier"
    },
    {
      "name": "tier_form",
      "plural": "tier_forms",
      "fields": [
        {
          "name": "experience",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "integration",
          "type": "integration",
          "required": true,
          "attributes": [],
          "description": "Type of shipping integration used for this tier."
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "rules",
          "type": "[rule]",
          "required": true,
          "attributes": [],
          "description": "Ordered set of rules for this tier"
        },
        {
          "name": "services",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "Services associated with this tier"
        },
        {
          "name": "strategy",
          "type": "tier_strategy",
          "required": true,
          "attributes": [],
          "description": "If multiple available return outcomes for a single tier, strategy picks the top one based on cost or timing."
        },
        {
          "name": "visibility",
          "type": "visibility",
          "required": true,
          "attributes": [],
          "description": "Public or Private. Private ones appear as inactive/disabled to the public"
        }
      ],
      "attributes": [],
      "description": "Service shipping tier available in this tier gorup. e.g. Standard tier, Express tier, Economy tier"
    },
    {
      "name": "tier_reference",
      "plural": "tier_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "tier_summary",
      "plural": "tier_summaries",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "tier_version",
      "plural": "tier_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "tier",
          "type": "expandable_tier",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "timezone",
      "plural": "timezones",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "America/New_York"
        },
        {
          "name": "description",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "Coordinated Universal Time"
        },
        {
          "name": "offset",
          "type": "integer",
          "required": true,
          "attributes": [],
          "description": "Minutes offset from GMT",
          "example": "-180, 60"
        }
      ],
      "attributes": [],
      "description": "Time zone data is provided by the public IANA time zone database. See http://www.iana.org/time-zones"
    },
    {
      "name": "token",
      "plural": "tokens",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "user",
          "type": "user_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "partial",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The partial API token",
          "example": "a21TK-XXXXX-lJ38i"
        },
        {
          "name": "created_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The date/time on which this token was created"
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "All of the metadata associated with a given token."
    },
    {
      "name": "token_authentication_form",
      "plural": "token_authentication_forms",
      "fields": [
        {
          "name": "token",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The actual token with which to authenticate"
        }
      ],
      "attributes": [],
      "description": "Used to authenticate a given token."
    },
    {
      "name": "token_form",
      "plural": "token_forms",
      "fields": [
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Used to create a new token for the user authorized by the request. You can only create an API token for your own account."
    },
    {
      "name": "token_reference",
      "plural": "token_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "user",
          "type": "user_reference",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Summary data for a given token"
    },
    {
      "name": "token_version",
      "plural": "token_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "token",
          "type": "token",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "tracking",
      "plural": "trackings",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "status",
          "type": "status",
          "required": true,
          "attributes": []
        },
        {
          "name": "metadata",
          "type": "object",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Top level tracking information which contains labels. In cases where shipments are re-labeled, you will see multiple labels for each tracking allowing simple access to see where a shipment is - with which carrier and with the local tracking number"
    },
    {
      "name": "tracking_form",
      "plural": "tracking_forms",
      "fields": [
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "status",
          "type": "status",
          "required": false,
          "attributes": []
        },
        {
          "name": "metadata",
          "type": "object",
          "required": false,
          "attributes": [],
          "description": "Additional reference metadata",
          "example": "{\"order_id\": 123456}"
        }
      ],
      "attributes": [],
      "description": "Top level tracking information which contains labels. In cases where shipments are re-labeled, you will see multiple labels for each tracking allowing simple access to see where a shipment is - with which carrier and with the local tracking number"
    },
    {
      "name": "tracking_summary",
      "plural": "tracking_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "status",
          "type": "status",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "tracking_version",
      "plural": "tracking_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "tracking",
          "type": "tracking_summary",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "ups_credentials",
      "plural": "ups_credentialses",
      "fields": [
        {
          "name": "account_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "username_password",
          "type": "username_password",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Credentials used to communicate with UPS on behalf of client organization."
    },
    {
      "name": "user",
      "plural": "users",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "email",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "If known, the user's primary email address. While in most common cases, we expect users to have email addresses, there are edge cases where it is useful to allow a user to NOT have an email address. For example, users interacting solely from mobile devices, guest user accounts, initial onboarding where email is not known, etc. We think by starting off with an optional primary email address we can support these use cases with very little implementation cost."
        },
        {
          "name": "name",
          "type": "name",
          "required": true,
          "attributes": [],
          "description": "The user's name."
        }
      ],
      "attributes": [],
      "description": "Represents a single user in the system"
    },
    {
      "name": "user_form",
      "plural": "user_forms",
      "fields": [
        {
          "name": "email",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "password",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "name",
          "type": "name_form",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "user_put_form",
      "plural": "user_put_forms",
      "fields": [
        {
          "name": "email",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "name",
          "type": "name_form",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "user_reference",
      "plural": "user_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "user_summary",
      "plural": "user_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "email",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "user_version",
      "plural": "user_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "user",
          "type": "user",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "username_password",
      "plural": "username_passwords",
      "fields": [
        {
          "name": "username",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "password",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Username and password credentials."
    },
    {
      "name": "usps_credentials",
      "plural": "usps_credentialses",
      "fields": [
        {
          "name": "account_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "username_password",
          "type": "username_password",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Credentials used to communicate with USPS on behalf of client organization."
    },
    {
      "name": "validation",
      "plural": "validations",
      "fields": [
        {
          "name": "status",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Textual description of whether or not token is valid"
        }
      ],
      "attributes": [],
      "description": "Model used to report whether or not a given token is valid"
    },
    {
      "name": "validation_form",
      "plural": "validation_forms",
      "fields": [
        {
          "name": "token",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The actual token that you are validating"
        }
      ],
      "attributes": [],
      "description": "Defines the payload of a request to validate a token, with primary goal of preventing the token from being included in an HTTP GET."
    }
  ],
  "resources": [
    {
      "type": "attribute",
      "plural": "attributes",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/attributes",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "name",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "option",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[attribute]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "name"
                  }
                ]
              }
            }
          ],
          "description": "Search metadata. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/attributes",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "attribute",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Add attribute",
          "body": {
            "type": "attribute",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/attributes/:name",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "name",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "attribute",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific attribute."
        },
        {
          "method": "PUT",
          "path": "/:organization/attributes/:name",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "name",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "attribute",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "attribute",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update an attribute with the specified name, creating if it does not exist.",
          "body": {
            "type": "attribute",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/attributes/:name",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "name",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete an attribute with this name"
        },
        {
          "method": "GET",
          "path": "/:organization/attributes/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "name",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[attribute_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "path": "/:organization/attributes",
      "description": "An attribute represents applicable item data made available on specific UI elements (e.g. require 'Brand')"
    },
    {
      "type": "catalog",
      "plural": "catalogs",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/catalog",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "catalog",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific catalog."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "path": "/:organization"
    },
    {
      "type": "experience",
      "plural": "experiences",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/experiences",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "country",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "currency",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "name",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "subcatalog",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Represented by Flow's internal subcatalog ID.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[experience]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "name"
                  }
                ]
              }
            }
          ],
          "description": "Search experiences. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/experiences",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "experience",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Add experience",
          "body": {
            "type": "experience_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/experiences/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "experience",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific experience."
        },
        {
          "method": "PUT",
          "path": "/:organization/experiences/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "experience",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "experience",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update experience with the specified key, creating if it does not exist.",
          "body": {
            "type": "experience_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/experiences/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete the experience with this key"
        },
        {
          "method": "POST",
          "path": "/:organization/experiences/checkout",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "checkout",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Checkout, aggregate items and prices.",
          "body": {
            "type": "checkout_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/experiences/items",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "destination",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "from_country",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "ip",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "currency",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "language",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "iso_639_2 language code as defined in http://reference.api.flow.io/languages",
              "example": "en"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[item]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "number"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "non-crud",
              "value": {}
            }
          ],
          "description": "Compose items and prices. Always paginated."
        },
        {
          "method": "GET",
          "path": "/:organization/experiences/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "name",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[experience_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "path": "/:organization/experiences",
      "description": "Properties that define a customized local experience for a given country"
    },
    {
      "type": "item",
      "plural": "items",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/catalog/items",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Find items with this number. Case insensitive. Exact match",
              "maximum": 100
            },
            {
              "name": "query",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Query against Algolia for items (i.e. give me all apparel)"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[item]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "number"
                  }
                ]
              }
            }
          ],
          "description": "Search items. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/catalog/items",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "item",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Add catalog item(s)",
          "body": {
            "type": "item_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/items/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific item."
        },
        {
          "method": "PUT",
          "path": "/:organization/catalog/items/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "item",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update item with the specified number, creating if it does not exist.",
          "body": {
            "type": "item_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/catalog/items/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete the item with this number"
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/items/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to items with any one of these numbers.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[item_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "path": "/:organization/catalog/items",
      "description": "The Flow item defines a specific item that can be purchased by a consumer. For many clients, this will map to a Sku."
    },
    {
      "type": "subcatalog",
      "plural": "subcatalogs",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[subcatalog]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Search subcatalogs. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/catalog/subcatalogs",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "subcatalog",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Add subcatalog",
          "body": {
            "type": "subcatalog_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "subcatalog",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific subcatalog."
        },
        {
          "method": "PUT",
          "path": "/:organization/catalog/subcatalogs/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "subcatalog",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "subcatalog",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update subcatalog with the specified key, creating if it does not exist.",
          "body": {
            "type": "subcatalog_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/catalog/subcatalogs/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete the subcatalog with this key"
        },
        {
          "method": "POST",
          "path": "/:organization/catalog/subcatalogs/:key/events/:event",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "event",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Sync subcatalog"
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:key/settings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "subcatalog_settings",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific subcatalog's settings."
        },
        {
          "method": "PUT",
          "path": "/:organization/catalog/subcatalogs/:key/settings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "subcatalog_settings",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update subcatalog settings for the specified subcatalog.",
          "body": {
            "type": "subcatalog_settings_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[subcatalog_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "path": "/:organization/catalog/subcatalogs",
      "description": "A configuration with custom query to select a subset of master catalog items for a localized experience"
    },
    {
      "type": "subcatalog_item",
      "plural": "subcatalog_items",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:subcatalog/items",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "query",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Query Algolia for subcatalog items",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[item]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Search subcatalog items. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/catalog/subcatalogs/:subcatalog/items",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "item",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Add subcatalog item",
          "body": {
            "type": "item_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:subcatalog/items/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about specific subcatalog items."
        },
        {
          "method": "PUT",
          "path": "/:organization/catalog/subcatalogs/:subcatalog/items/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "item",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update subcatalog item with the specified number, creating if it does not exist.",
          "body": {
            "type": "item_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/catalog/subcatalogs/:subcatalog/items/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete the subcatalog item with this number"
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:subcatalog/items/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to items with any one of these numbers.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[subcatalog_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "path": "/:organization/catalog/subcatalogs/:subcatalog/items"
    },
    {
      "type": "display",
      "plural": "displays",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/displays",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "name",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "experience",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Represented by Flow's internal experience ID.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[display]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "name"
                  }
                ]
              }
            }
          ],
          "description": "Search displays. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/displays",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "display",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Add display",
          "body": {
            "type": "display_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/displays/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "display",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific display."
        },
        {
          "method": "PUT",
          "path": "/:organization/displays/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "display",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "display",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update display with the specified key, creating if it does not exist.",
          "body": {
            "type": "display_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/displays/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete the display with this key"
        },
        {
          "method": "GET",
          "path": "/:organization/displays/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "name",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[display_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "pricing"
          }
        }
      ],
      "path": "/:organization/displays",
      "description": "Defines elements of a localized cost available for display (e.g on a localized product page or checkout)"
    },
    {
      "type": "function",
      "plural": "functions",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/functions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "name",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "position",
              "type": "[long]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "subcatalog",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[function]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "position"
                  }
                ]
              }
            }
          ],
          "description": "Search functions. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/functions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "function",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Add function",
          "body": {
            "type": "function_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/functions/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "function",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific function."
        },
        {
          "method": "PUT",
          "path": "/:organization/functions/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "function",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "function",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update function with the specified key, creating if it does not exist.",
          "body": {
            "type": "function_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/functions/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete the function with this key"
        },
        {
          "method": "GET",
          "path": "/:organization/functions/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "name",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[function_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "pricing"
          }
        }
      ],
      "path": "/:organization/functions",
      "description": "Prioritized calculation yielding a localized price (also allows for custom defined price function)"
    },
    {
      "type": "duty",
      "plural": "duties",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/harmonization/duties/:origin",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "origin",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "The ISO 3 character code for country of origin",
              "minimum": 3,
              "maximum": 3,
              "example": "chn"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Query",
              "required": true
            },
            {
              "name": "address",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "22 Hudson Pl, Hoboken NJ 07030 USA"
            },
            {
              "name": "ip",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "latitude",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "longitude",
              "type": "string",
              "location": "Query",
              "required": false
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "duty",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "Common error would be that we were unable to resolve the destination using the provided parameters (e.g. address, latitude, longitude or ip address)"
            }
          ],
          "attributes": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "landed cost"
          }
        }
      ],
      "path": "/:organization/harmonization/duties/:origin",
      "description": "Represents a simple model of duties that apply to a given item / trade lane."
    },
    {
      "type": "harmonization_settings",
      "plural": "harmonization_settings",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/harmonization/settings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "harmonization_settings",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/harmonization/settings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "harmonization_settings",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "harmonization_settings_form",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "landed cost"
          }
        }
      ],
      "path": "/:organization/harmonization/settings",
      "description": "Organization level settings."
    },
    {
      "type": "harmonized_item",
      "plural": "harmonized_items",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/harmonization/items",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[harmonized_item]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/harmonization/items",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "harmonized_item",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "harmonized_item_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/harmonization/items/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "harmonized_item",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/harmonization/items/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "harmonized_item",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "harmonized_item",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create or update an item to harmonize",
          "body": {
            "type": "harmonized_item_put_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/harmonization/items/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/harmonization/items/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "item_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to items with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[harmonized_item_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "item_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "landed cost"
          }
        }
      ],
      "path": "/:organization/harmonization/items",
      "description": "A harmonized item stores explicit information about this item for the purposes of harmonization / classification. The harmonization process begins by creating a harmonized item; this kicks off the internal processes. Once assigned, codes will be available via the hs6 and hs10 resources"
    },
    {
      "type": "harmonized_item_duty",
      "plural": "harmonized_item_duties",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/harmonization/item-duties",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "origin",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "The ISO-3166 2 or 3 character country code of the country of origin"
            },
            {
              "name": "destination",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "The ISO-3166 2 or 3 character country code of the destination country"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[harmonized_item_duty]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "origin"
                  },
                  {
                    "value": "destination"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/harmonization/item-duties",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "harmonized_item_duty",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "harmonized_item_duty_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/harmonization/item-duties/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "harmonized_item_duty",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "DELETE",
          "path": "/:organization/harmonization/item-duties/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/harmonization/item-duties/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "harmonized_item_duty_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to item duties with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[harmonized_item_duty_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "harmonized_item_duty_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "landed cost"
          }
        }
      ],
      "path": "/:organization/harmonization/item-duties",
      "description": "Used to specifically set an item's duty rate for a given trade lane."
    },
    {
      "type": "hs10",
      "plural": "hs10",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/harmonization/hs10",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "item_number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "origin",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "The ISO-3166 2 or 3 character country code of the destination country"
            },
            {
              "name": "destination",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "The ISO-3166 2 or 3 character country code of the destination country"
            },
            {
              "name": "code",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter to records matching this HS-10 code"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[hs10]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "item_number"
                  },
                  {
                    "value": "origin"
                  },
                  {
                    "value": "destination"
                  },
                  {
                    "value": "code"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "GET",
          "path": "/:organization/harmonization/hs10/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "hs10_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to HS-10s with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[hs10_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "hs10_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "landed cost"
          }
        }
      ],
      "path": "/:organization/harmonization/hs10",
      "description": "API to fetch HS-10 codes assigned to your items. Note that if your item has been classified multiple times or its classification has changed, this API will provide you with the most recent harmonization code for that item. That is, each code is unique across your item number, country of origin and destination."
    },
    {
      "type": "hs6",
      "plural": "hs6",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/harmonization/hs6",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "item_number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "code",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter to records matching this HS-6 code"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[hs6]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "item_number"
                  },
                  {
                    "value": "code"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "GET",
          "path": "/:organization/harmonization/hs6/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "hs6_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to HS-6s with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[hs6_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "hs6_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "landed cost"
          }
        }
      ],
      "path": "/:organization/harmonization/hs6",
      "description": "API to fetch HS-6 codes assigned to your items. Note that if your item has been classified multiple times or its classification has changed, this API will provide you with the most recent harmonization code for that item."
    },
    {
      "type": "tax",
      "plural": "taxes",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/harmonization/taxes",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "address",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "22 Hudson Pl, Hoboken NJ 07030 USA"
            },
            {
              "name": "ip",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "latitude",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "longitude",
              "type": "string",
              "location": "Query",
              "required": false
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "tax",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "Common error would be that we were unable to resolve the destination using the provided parameters (e.g. address, latitude, longitude or ip address)"
            }
          ],
          "attributes": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "landed cost"
          }
        }
      ],
      "path": "/:organization/harmonization/taxes",
      "description": "Represents a simple model of taxes that apply to a given item / destination."
    },
    {
      "type": "authorization",
      "plural": "authorizations",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/authorizations",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "reference",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[authorization]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "reference"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/authorizations",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "authorization",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a new authorization.",
          "body": {
            "type": "authorization_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/authorizations/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "authorization",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific authorization."
        },
        {
          "method": "DELETE",
          "path": "/:organization/authorizations/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Deletes a given authorization. This method will return a 422 if funds have already been captured."
        },
        {
          "method": "GET",
          "path": "/:organization/authorizations/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "authorization_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to authorizations with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[authorization_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "authorization_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "payment"
          }
        }
      ],
      "path": "/:organization/authorizations",
      "description": "An authorization is used to check and reserve funds w/ a given payment method. No funds are actually transferred; once you have you an authorization, you can capture up to the amount of the authorization."
    },
    {
      "type": "capture",
      "plural": "captures",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/captures",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "reference",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "authorization_id",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "authorization_reference",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[capture]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "reference"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/captures",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "capture",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a new capture.",
          "body": {
            "type": "capture_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/captures/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "capture",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific capture."
        },
        {
          "method": "GET",
          "path": "/:organization/captures/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "capture_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to captures with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[capture_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "capture_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "payment"
          }
        }
      ],
      "path": "/:organization/captures",
      "description": "Capture actually transfers funds. You can capture as many times as you'd like up until the total amount of the authorization has been captured or the authorization otherwise becomes unavailable (e.g. expires)."
    },
    {
      "type": "card",
      "plural": "cards",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/cards",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[card]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "sort_parameter_default"
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/cards",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "card",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a new card.",
          "body": {
            "type": "card_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/cards/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "card",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific card."
        },
        {
          "method": "DELETE",
          "path": "/:organization/cards/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Deletes the card with the specified ID."
        },
        {
          "method": "POST",
          "path": "/:organization/cards/:id/updates",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "card",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Updates are implemented as copy on write. This method is a convenience method that will transactionally DELETE the card with the specified ID, then CREATE a new card with the data from this request. Note that this means the returned credit card token will be DIFFERENT from the one used in the request.",
          "body": {
            "type": "card_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/cards/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "card_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to cards with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[card_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "card_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "payment"
          }
        }
      ],
      "path": "/:organization/cards",
      "description": "Card represents the metadata about a secure, tokenized card. The card 'id' is a unique, cryptographically secure token by which this card can be identified in the future."
    },
    {
      "type": "refund",
      "plural": "refunds",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/refunds",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "reference",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "authorization_id",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "authorization_reference",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "capture_id",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "capture_reference",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[refund]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "reference"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/refunds",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "refund",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a new refund.",
          "body": {
            "type": "refund_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/refunds/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "refund",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific refund."
        },
        {
          "method": "GET",
          "path": "/:organization/refunds/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "refund_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to refunds with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[refund_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "refund_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "payment"
          }
        }
      ],
      "path": "/:organization/refunds",
      "description": "Refunds are used to issue refunds against a prior capture."
    },
    {
      "type": "booking",
      "plural": "bookings",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/bookings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[booking]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/bookings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "booking",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "booking_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/bookings/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "booking",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/bookings/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "booking",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "booking"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[booking_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "booking"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/bookings",
      "description": "Represents second step of two-step purchase of Flow services."
    },
    {
      "type": "carrier",
      "plural": "carriers",
      "operations": [
        {
          "method": "GET",
          "path": "/carriers",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[carrier]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/carriers",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "carrier",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "carrier_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/carriers/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "carrier",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/carriers/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "carrier",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "carrier",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "carrier_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/carriers/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "[error]",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/carriers/versions",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "carrier",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "carrier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[carrier_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "carrier"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/carriers",
      "description": "Partner that actually take a shipment between places (ex: FedEx, DHL, SF Express)"
    },
    {
      "type": "carrier_account",
      "plural": "carrier_accounts",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/carrier_accounts",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "name",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[carrier_account]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/carrier_accounts",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "carrier_account",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "carrier_account_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/carrier_accounts/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "carrier_account",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/carrier_accounts/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "carrier_account",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "carrier_account",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "carrier_account_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/carrier_accounts/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/carrier_accounts/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "carrier_account",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "carrier_account"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[carrier_account_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "carrier_account"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/carrier_accounts",
      "description": "carrier_account an organization has with a carrier, including credentials. A carrier can have multiple carrier_accounts with a single carrier, each with their own set of credentials. This represents the many-to-many relationship between organizations and carriers."
    },
    {
      "type": "center",
      "plural": "centers",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/centers",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[center]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/centers",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "center",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "center_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/centers/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "center",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/centers/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "center",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "center",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "center_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/centers/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/centers/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "center",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "center"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[center_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "center"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/centers",
      "description": "Represents a facility capable of fulfilling a shipment"
    },
    {
      "type": "delivery_window",
      "plural": "delivery_windows",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/delivery-windows/summary",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier",
              "example": "some-org-key"
            },
            {
              "name": "strategy",
              "type": "strategy",
              "location": "Query",
              "required": true,
              "default": "range",
              "example": "range,from,to"
            },
            {
              "name": "center",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "ctr-20150101-101"
            },
            {
              "name": "origin",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "22 Hudson Pl, Hoboken NJ 07030 USA"
            },
            {
              "name": "destination",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "22 Hudson Pl, Hoboken NJ 07030 USA"
            },
            {
              "name": "ip",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "68.192.179.190"
            },
            {
              "name": "latitude",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "40.76955"
            },
            {
              "name": "longitude",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "-74.02042"
            },
            {
              "name": "service",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "ups-ground, dhl-express-worldwide"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "delivery_window",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "Unable to resolve delivery window based on parameter entries"
            }
          ],
          "attributes": [],
          "description": "Endpoint to request a delivery window. Requires some knowledge of origin (based on organization, center, or specified address string) and destination (based on ip, lat/long, or address string). Other attributes allow us to narrow down delivery windows even more such as service level to be used and timestamp of expected shipment date."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/delivery-windows"
    },
    {
      "type": "event",
      "plural": "events",
      "operations": [
        {
          "method": "GET",
          "path": "/events",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "organization",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "tracking_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "label_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "location"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[event]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "tracking_id"
                  },
                  {
                    "value": "label_id"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "GET",
          "path": "/events/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "location"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "event",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/events/versions",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "event_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[event_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "event_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/events"
    },
    {
      "type": "label",
      "plural": "labels",
      "operations": [
        {
          "method": "GET",
          "path": "/labels",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "organization",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "tracking_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[label]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "tracking_id"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/labels",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "label",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "label_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/labels/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "label",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/labels/versions",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "label_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[label_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "label_id"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/labels",
      "description": "Represents a specific label being tracked as part of the tracking bucket"
    },
    {
      "type": "lane",
      "plural": "lanes",
      "operations": [
        {
          "method": "GET",
          "path": "/lanes",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[lane]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/lanes",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "lane",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "lane_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/lanes/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "lane",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/lanes/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "lane",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "lane",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "lane_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/lanes/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/lanes/versions",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "lane",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "lane"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[lane_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "lane"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/lanes",
      "description": "Available origin/destination mapping and available metadata for lanes of a carrier Service. e.g. UPS Ground only US-US, UPS Intl only US-Intl, etc"
    },
    {
      "type": "quote",
      "plural": "quotes",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/quotes",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[quote]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            }
          ],
          "description": "Search quotes. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/quotes",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "[quote]",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "quote_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/quotes/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "quote",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/quotes/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "quote",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "quote"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[quote_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "quote"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/quotes",
      "description": "Represents a collection of deliveries and available options for fulfillment of that delivery"
    },
    {
      "type": "service",
      "plural": "services",
      "operations": [
        {
          "method": "GET",
          "path": "/services",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "carrier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[service]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/services",
          "parameters": [
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 1,
              "example": "carrier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "service",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "service_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/services/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 1,
              "example": "carrier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "service",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/services/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 1,
              "example": "carrier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "service",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "service",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "service_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/services/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/services/versions",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "service",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "service"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[service_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "service"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/services",
      "description": "Specific service rendered by the carrier (fedex ground saturday, ups overnight weekend, etc)"
    },
    {
      "type": "shipment",
      "plural": "shipments",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/shipments",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[shipment]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/shipments",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "shipment",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "shipment_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/shipments/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "shipment",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/shipments/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "shipment"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[shipment_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/shipments",
      "description": "Represents a subset of items from an order grouped into a single physical shipment. Flow provides a generated tracking number to track this shipment across multiple possible hops and carriers."
    },
    {
      "type": "shipment_label",
      "plural": "shipment_labels",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/shipments/:tracking_number/labels",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "tracking_number",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[shipment_label]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/shipments/:tracking_number/labels",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "tracking_number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "shipment_label",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "shipment_label_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/shipments/:tracking_number/labels/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "tracking_number",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "shipment_label"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[shipment_label_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/shipments/:tracking_number/labels",
      "description": "Top-level information on shipment tracking shipment_label and number"
    },
    {
      "type": "tier",
      "plural": "tiers",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/tiers",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[tier]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/tiers",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "tier",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "tier_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/tiers/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "tier",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/tiers/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "tier",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "tier",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "tier_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/tiers/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/tiers/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "tier",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "tier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[tier_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "tier"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/tiers",
      "description": "Service shipping tier available in this tier gorup. e.g. Standard tier, Express tier, Economy tier"
    },
    {
      "type": "tracking",
      "plural": "trackings",
      "operations": [
        {
          "method": "GET",
          "path": "/trackings",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "organization",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[tracking]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/trackings",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "tracking",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "tracking_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/trackings/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "tracking",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/trackings/versions",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "tracking_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[tracking_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "tracking_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/trackings",
      "description": "Top level tracking information which contains labels. In cases where shipments are re-labeled, you will see multiple labels for each tracking allowing simple access to see where a shipment is - with which carrier and with the local tracking number"
    },
    {
      "type": "country",
      "plural": "countries",
      "operations": [
        {
          "method": "GET",
          "path": "/countries",
          "parameters": [
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Free text search for a single matching country. Can be the 2 or 3 character code or the name of the country. Case insensitive"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[country]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [],
          "description": "Returns a list of countries."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "reference"
          }
        }
      ],
      "path": "/countries"
    },
    {
      "type": "currency",
      "plural": "currencies",
      "operations": [
        {
          "method": "GET",
          "path": "/currencies",
          "parameters": [
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Free text search for a single matching currency. Can be the code or the name of the currency. Case insensitive"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[currency]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [],
          "description": "Returns a list of currencies."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "reference"
          }
        }
      ],
      "path": "/currencies",
      "description": "ISO 4217 3-character currency code. See http://www.xe.com/iso4217.php"
    },
    {
      "type": "language",
      "plural": "languages",
      "operations": [
        {
          "method": "GET",
          "path": "/languages",
          "parameters": [
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Free text search for a single matching language. Can be the code or the name of the language. Case insensitive"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[language]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [],
          "description": "Returns a list of languages."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "reference"
          }
        }
      ],
      "path": "/languages",
      "description": "ISO 639 2-character language code. See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes"
    },
    {
      "type": "timezone",
      "plural": "timezones",
      "operations": [
        {
          "method": "GET",
          "path": "/timezones",
          "parameters": [
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Free text search on name for a single matching timezone. Case insensitive"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[timezone]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [],
          "description": "Returns a list of timezones."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "reference"
          }
        }
      ],
      "path": "/timezones",
      "description": "Time zone data is provided by the public IANA time zone database. See http://www.iana.org/time-zones"
    },
    {
      "type": "document",
      "plural": "documents",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/search/catalog",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "gucci category:handbag price:10"
            },
            {
              "name": "experience",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "attributes",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[catalog_item_document]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "name",
                    "default": true
                  },
                  {
                    "value": "categories"
                  },
                  {
                    "value": "experience"
                  }
                ]
              }
            }
          ],
          "description": "Returns items based on search criteria"
        },
        {
          "method": "GET",
          "path": "/:organization/search/harmonization",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "gucci category:handbag price:10"
            },
            {
              "name": "destination",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "ISO 3166 3-character country code. See https://www.iso.org/obp/ui/#search",
              "example": "USA"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[harmonization_document]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "code"
                  },
                  {
                    "value": "categories"
                  },
                  {
                    "value": "origin"
                  }
                ]
              }
            }
          ],
          "description": "Returns harmonization information based on search criteria"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/search"
    },
    {
      "type": "email_verification",
      "plural": "email_verifications",
      "operations": [
        {
          "method": "POST",
          "path": "/users/emails/verifications/:token",
          "parameters": [
            {
              "name": "token",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "The unique token sent to the user to verify their email address"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "email_verification",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/users/emails/verifications",
      "description": "Represents the successful response of an email verification token. We return the email address in this case to allow the UI to display which email address was verified."
    },
    {
      "type": "healthcheck",
      "plural": "healthchecks",
      "operations": [
        {
          "method": "GET",
          "path": "/_internal_/healthcheck",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "healthcheck",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/_internal_"
    },
    {
      "type": "invitation",
      "plural": "invitations",
      "operations": [
        {
          "method": "GET",
          "path": "/invitations",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "organization",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find invitations for this organization"
            },
            {
              "name": "email",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find invitations for this email"
            },
            {
              "name": "token",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find invitation for this token"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "organization"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[invitation]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "organization"
                  },
                  {
                    "value": "email"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Search invitations. Always paginated."
        },
        {
          "method": "POST",
          "path": "/invitations",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "invitation",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a new invitation.",
          "body": {
            "type": "invitation_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/invitations/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "organization"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "invitation",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific invitation."
        },
        {
          "method": "DELETE",
          "path": "/invitations/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/invitations/tokens/:token",
          "parameters": [
            {
              "name": "token",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "organization"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "invitation",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Lookup an invitation by its token."
        },
        {
          "method": "PUT",
          "path": "/invitations/tokens/:token",
          "parameters": [
            {
              "name": "token",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "membership",
              "description": "Indicates user was previously a member of the organization"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "membership",
              "description": "The new membership record for this user/organization"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Accepts the invitation w/ the specified token, creating a membership record for this user within this organization. Invitations are one time use only - you will get a validation error if the invitation has previously been accepted.",
          "body": {
            "type": "invitation_accepts_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/invitations/versions",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "invitation",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to versions for invitations with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[invitation_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "invitation"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/invitations",
      "description": "An invitation via email to a user to join this organization. The user will then walk through a user login/registration process and will immediately become a member of the organization."
    },
    {
      "type": "location",
      "plural": "locations",
      "operations": [
        {
          "method": "GET",
          "path": "/locations",
          "parameters": [
            {
              "name": "address",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "22 Hudson Pl, Hoboken NJ 07030 USA"
            },
            {
              "name": "ip",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "96.242.151.245"
            },
            {
              "name": "latitude",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "longitude",
              "type": "string",
              "location": "Query",
              "required": false
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[location]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Based on the provided location parameters, returns a list of the best potential matching addresses."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/locations"
    },
    {
      "type": "membership",
      "plural": "memberships",
      "operations": [
        {
          "method": "GET",
          "path": "/memberships",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "user",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find memberships for this user id",
              "maximum": 100
            },
            {
              "name": "organization",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find memberships for this organization id",
              "maximum": 100
            },
            {
              "name": "role",
              "type": "[role]",
              "location": "Query",
              "required": false,
              "description": "Find memberships with these roles",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 2,
              "example": "organization, user"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[membership]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "user"
                  },
                  {
                    "value": "organization"
                  },
                  {
                    "value": "role"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Search memberships. Always paginated."
        },
        {
          "method": "POST",
          "path": "/memberships",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "membership",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a new membership.",
          "body": {
            "type": "membership_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/memberships/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "organization"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "membership",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific membership."
        },
        {
          "method": "PUT",
          "path": "/memberships/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "membership",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Change the role for a specific membership record. If the user already has the specified role within the organization, does nothing.",
          "body": {
            "type": "membership_put_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/memberships/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/memberships/versions",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "membership",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter membership changes with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "user",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter membership changes for this user id",
              "maximum": 100
            },
            {
              "name": "organization",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter membership changes for this organization id",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[membership_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "membership"
                  },
                  {
                    "value": "user"
                  },
                  {
                    "value": "organization"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/memberships",
      "description": "Represents the users that are part of this organization. Primary purpose is to manage which users have access to the organization's data and to provide a simple user interface to assign roles and permissions to each member of the organization"
    },
    {
      "type": "organization",
      "plural": "organizations",
      "operations": [
        {
          "method": "GET",
          "path": "/organizations",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "name",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find organizations with this name. Case insensitive. Exact match."
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[organization]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Search organizations. Always paginated."
        },
        {
          "method": "POST",
          "path": "/organizations",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "organization",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a new organization.",
          "body": {
            "type": "organization_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/organizations/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "organization",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific organization."
        },
        {
          "method": "PUT",
          "path": "/organizations/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "organization",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "organization",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update or create an organization with the specified id.",
          "body": {
            "type": "organization_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/organizations/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete the organization with this id"
        },
        {
          "method": "GET",
          "path": "/organizations/versions",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "organization",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to organizations with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[organization_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "organization"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/organizations"
    },
    {
      "type": "password_reset_form",
      "plural": "password_reset_forms",
      "operations": [
        {
          "method": "POST",
          "path": "/users/passwords",
          "parameters": [
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "user"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "expandable_user",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "password_reset_form",
            "attributes": []
          }
        },
        {
          "method": "POST",
          "path": "/users/passwords/resets",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "password_reset_request_form",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/users/passwords"
    },
    {
      "type": "suggestion",
      "plural": "suggestions",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/suggestion/catalog",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "gucci category:handbag price:10"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-count"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[suggestion]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "count"
                  },
                  {
                    "value": "label"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "sort_parameter_default"
                ]
              }
            }
          ],
          "description": "Returns search suggestions for catalog items"
        },
        {
          "method": "GET",
          "path": "/:organization/suggestion/harmonization",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "gucci category:handbag price:10"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[suggestion]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "count"
                  },
                  {
                    "value": "label"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "sort_parameter_default"
                ]
              }
            }
          ],
          "description": "Returns search suggestions for harmonization data"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/suggestion"
    },
    {
      "type": "token",
      "plural": "tokens",
      "operations": [
        {
          "method": "GET",
          "path": "/tokens",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "token",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter by this token"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[token]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "description"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Get all tokens that you are authorized to view. Note that the cleartext token value is never sent. To view the API token itself, see the resource path /:id/cleartext"
        },
        {
          "method": "POST",
          "path": "/tokens",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "token",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a new token for the requesting user",
          "body": {
            "type": "token_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/tokens/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "token",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Get metadata for the token with this ID"
        },
        {
          "method": "DELETE",
          "path": "/tokens/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/tokens/:id/cleartext",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "cleartext",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Retrieves the token with the actual string token in cleartext"
        },
        {
          "method": "POST",
          "path": "/tokens/authentications",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "token_reference",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Preferred method to validate a token, obtaining user information if the token is valid (or a 404 if the token does not exist). We use an HTTP POST with a form body to enusre that the token itself is not logged in the request logs.",
          "body": {
            "type": "token_authentication_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/tokens/versions",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "token_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to tokens with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[token_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "token_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/tokens",
      "description": "All of the metadata associated with a given token."
    },
    {
      "type": "user",
      "plural": "users",
      "operations": [
        {
          "method": "GET",
          "path": "/users",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "email",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find users with this email address. Case insensitive. Exact match"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[user]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "email"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Search users. Always paginated."
        },
        {
          "method": "POST",
          "path": "/users",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "user",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a new user.",
          "body": {
            "type": "user_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/users/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "user",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific user."
        },
        {
          "method": "PUT",
          "path": "/users/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "user",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update a user.",
          "body": {
            "type": "user_put_form",
            "attributes": []
          }
        },
        {
          "method": "PATCH",
          "path": "/users/:id/passwords",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update the password for a user.",
          "body": {
            "type": "password_change_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/users/:id/passwords",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Deletes a password for the given user."
        },
        {
          "method": "POST",
          "path": "/users/authenticate",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "user",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Authenticates a user by email / password.",
          "body": {
            "type": "authentication_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/users/versions",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "user_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to users with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[user_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "user_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/users"
    },
    {
      "type": "validation",
      "plural": "validations",
      "operations": [
        {
          "method": "POST",
          "path": "/token-validations",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "validation",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "validation_form",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/token-validations",
      "description": "Validations test whether or not a given API token is valid"
    }
  ],
  "attributes": [],
  "base_url": "https://api.flow.io",
  "description": "The Flow Commerce REST API provides full access to the global ecommerce platform."
}