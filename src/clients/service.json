{
  "apidoc": {
    "version": "0.11.26"
  },
  "name": "API",
  "organization": {
    "key": "flow"
  },
  "application": {
    "key": "api"
  },
  "namespace": "io.flow.v0",
  "version": "0.0.82",
  "info": {
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    },
    "contact": {
      "email": "tech@flow.io"
    }
  },
  "headers": [],
  "imports": [],
  "enums": [
    {
      "name": "calendar",
      "plural": "calendars",
      "values": [
        {
          "name": "weekdays",
          "attributes": [],
          "description": "Mon - Fri"
        },
        {
          "name": "everyday",
          "attributes": [],
          "description": "7 days per week"
        }
      ],
      "attributes": []
    },
    {
      "name": "capability",
      "plural": "capabilities",
      "values": [
        {
          "name": "crossdock",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "card_type",
      "plural": "card_types",
      "values": [
        {
          "name": "visa",
          "attributes": []
        },
        {
          "name": "mastercard",
          "attributes": []
        },
        {
          "name": "american_express",
          "attributes": []
        },
        {
          "name": "diners_club",
          "attributes": []
        },
        {
          "name": "discover",
          "attributes": []
        },
        {
          "name": "jcb",
          "attributes": []
        },
        {
          "name": "china_union_pay",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "change_type",
      "plural": "change_types",
      "values": [
        {
          "name": "insert",
          "attributes": []
        },
        {
          "name": "update",
          "attributes": []
        },
        {
          "name": "delete",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "delivered_duty",
      "plural": "delivered_duties",
      "values": [
        {
          "name": "paid",
          "attributes": [],
          "description": "DDP"
        },
        {
          "name": "unpaid",
          "attributes": [],
          "description": "DDU"
        },
        {
          "name": "choice",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "environment",
      "plural": "environments",
      "values": [
        {
          "name": "sandbox",
          "attributes": [],
          "description": "In sandbox, no external services (e.g. payments, logistics) will generate real transactions"
        },
        {
          "name": "production",
          "attributes": [],
          "description": "In production, all external services are live and will generate real transactions"
        }
      ],
      "attributes": []
    },
    {
      "name": "exception_type",
      "plural": "exception_types",
      "values": [
        {
          "name": "open",
          "attributes": []
        },
        {
          "name": "closed",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "holiday_calendar",
      "plural": "holiday_calendars",
      "values": [
        {
          "name": "us_bank_holidays",
          "attributes": []
        },
        {
          "name": "jewish_holidays",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "levy_component",
      "plural": "levy_components",
      "values": [
        {
          "name": "goods",
          "attributes": [],
          "description": "The value of goods"
        },
        {
          "name": "duty",
          "attributes": []
        },
        {
          "name": "insurance",
          "attributes": []
        },
        {
          "name": "freight",
          "attributes": []
        },
        {
          "name": "vat",
          "attributes": [],
          "description": "Value-Added Tax"
        }
      ],
      "attributes": []
    },
    {
      "name": "levy_strategy",
      "plural": "levy_strategies",
      "values": [
        {
          "name": "minimum",
          "attributes": []
        },
        {
          "name": "average",
          "attributes": []
        },
        {
          "name": "maximum",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "localized_price_key",
      "plural": "localized_price_keys",
      "values": [
        {
          "name": "price",
          "attributes": [],
          "description": "The calculated price, taking into account pricing settings. For example, if vat is set to be included in the price, this value will be equal to subtotal + vat, rounded per the settings. This is the price you should lead with when displaying to consumers"
        },
        {
          "name": "subtotal",
          "attributes": []
        },
        {
          "name": "vat",
          "attributes": []
        },
        {
          "name": "duty",
          "attributes": []
        },
        {
          "name": "shipping",
          "attributes": []
        },
        {
          "name": "total",
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "The localized prices for an item are returned as a list - the key of each element is defined here"
    },
    {
      "name": "margin_type",
      "plural": "margin_types",
      "values": [
        {
          "name": "fixed",
          "attributes": [],
          "description": "A fixed amount to add, e.g $1.25."
        },
        {
          "name": "percent",
          "attributes": [],
          "description": "A percent of the base cost to add, e.g. 0.52 (52%)."
        }
      ],
      "attributes": [],
      "description": "Either a fixed or percent adjustment applied to some amount."
    },
    {
      "name": "measurement_system",
      "plural": "measurement_systems",
      "values": [
        {
          "name": "imperial",
          "attributes": []
        },
        {
          "name": "metric",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "pricing_levy_setting",
      "plural": "pricing_levy_settings",
      "values": [
        {
          "name": "included",
          "attributes": []
        },
        {
          "name": "displayed",
          "attributes": []
        },
        {
          "name": "ignored",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "query_type",
      "plural": "query_types",
      "values": [
        {
          "name": "exclusion",
          "attributes": [],
          "description": "Exclude items satisfied by the associated query"
        },
        {
          "name": "inclusion",
          "attributes": [],
          "description": "Include items satisfied by the associated query"
        }
      ],
      "attributes": [],
      "description": "Type to indicate whether query is an inclusion or exclusion"
    },
    {
      "name": "role",
      "plural": "roles",
      "values": [
        {
          "name": "admin",
          "attributes": []
        },
        {
          "name": "member",
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "A user's role within an organization"
    },
    {
      "name": "rounding_method",
      "plural": "rounding_methods",
      "values": [
        {
          "name": "up",
          "attributes": [],
          "description": "Round up to the specified rounding.value"
        },
        {
          "name": "down",
          "attributes": [],
          "description": "Round down to the specified rounding.value"
        },
        {
          "name": "nearest",
          "attributes": [],
          "description": "Round to the nearest specified rounding.value. If equidistant, will round up."
        }
      ],
      "attributes": [],
      "description": "Direction to round localized price"
    },
    {
      "name": "rounding_type",
      "plural": "rounding_types",
      "values": [
        {
          "name": "pattern",
          "attributes": [],
          "description": "Rounds a value to an amount ending with a pattern, e.g. an amount ending in '.99'."
        },
        {
          "name": "multiple",
          "attributes": [],
          "description": "Rounds a value to an amount that is the multiple of a value, e.g. rounding to the nearest 1000."
        }
      ],
      "attributes": [],
      "description": "The type of rounding to perform."
    },
    {
      "name": "schedule_exception_status",
      "plural": "schedule_exception_statuses",
      "values": [
        {
          "name": "Open",
          "attributes": []
        },
        {
          "name": "Closed",
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Pending better name"
    },
    {
      "name": "shipment_integration_type",
      "plural": "shipment_integration_types",
      "values": [
        {
          "name": "direct",
          "attributes": [],
          "description": "Always generate a label for the chosen delivery option."
        },
        {
          "name": "information",
          "attributes": [],
          "description": "Booking and label generation is not available. Just use Flow to calculate delivery window estimates and shipment prices to display."
        },
        {
          "name": "preadvice",
          "attributes": [],
          "description": "A generic label will be provided by the client organization when available as pre-advice shipment notification to carrier partner."
        }
      ],
      "attributes": [],
      "description": "Type of shipping integration for a given shipping tier"
    },
    {
      "name": "sort_direction",
      "plural": "sort_directions",
      "values": [
        {
          "name": "ascending",
          "attributes": []
        },
        {
          "name": "descending",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "strategy",
      "plural": "strategies",
      "values": [
        {
          "name": "range",
          "attributes": [],
          "description": "Tightest range"
        },
        {
          "name": "from",
          "attributes": [],
          "description": "Lowest minimum of the ranges"
        },
        {
          "name": "to",
          "attributes": [],
          "description": "Lowest maximum of the ranges"
        }
      ],
      "attributes": []
    },
    {
      "name": "subcatalog_item_status",
      "plural": "subcatalog_item_statuses",
      "values": [
        {
          "name": "excluded",
          "attributes": [],
          "description": "Item is excluded based on targeting query.  This is separate from an item marked as restricted."
        },
        {
          "name": "included",
          "attributes": [],
          "description": "Item is included"
        },
        {
          "name": "restricted",
          "attributes": [],
          "description": "Item is restricted and will be treated as excluded"
        }
      ],
      "attributes": [],
      "description": "Status indicating availability of a subcatalog item in an experience."
    },
    {
      "name": "tier_strategy",
      "plural": "tier_strategies",
      "values": [
        {
          "name": "fastest",
          "attributes": [],
          "description": "Optimize for fastest first, then cheapest"
        },
        {
          "name": "lowest_cost",
          "attributes": [],
          "description": "Optimize for lowest cost first, then fastest"
        }
      ],
      "attributes": [],
      "description": "Strategy to apply when there are multiple rates available for a tier"
    },
    {
      "name": "tracking_status",
      "plural": "tracking_statuses",
      "values": [
        {
          "name": "pending",
          "attributes": []
        },
        {
          "name": "info_received",
          "attributes": []
        },
        {
          "name": "in_transit",
          "attributes": []
        },
        {
          "name": "out_for_delivery",
          "attributes": []
        },
        {
          "name": "attempt_fail",
          "attributes": []
        },
        {
          "name": "delivered",
          "attributes": []
        },
        {
          "name": "exception",
          "attributes": []
        },
        {
          "name": "expired",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "unit_of_measurement",
      "plural": "unit_of_measurements",
      "values": [
        {
          "name": "millimeter",
          "attributes": [],
          "description": "Equivalent to MILLI(METRE)."
        },
        {
          "name": "centimeter",
          "attributes": [],
          "description": "Equivalent to CENTI(METRE)."
        },
        {
          "name": "inch",
          "attributes": [],
          "description": "A unit of length equal to 0.01004 m (standard name in)."
        },
        {
          "name": "foot",
          "attributes": [],
          "description": "A unit of length equal to 0.3048 m (standard name ft)."
        },
        {
          "name": "cubic_inch",
          "attributes": [],
          "description": "A unit of volume equal to one cubic inch (in³)."
        },
        {
          "name": "cubic_meter",
          "attributes": [],
          "description": "The metric unit for volume quantities (m³)."
        },
        {
          "name": "gram",
          "attributes": [],
          "description": "A unit of mass equal to 1 / 1000 kilogram (standard name g)."
        },
        {
          "name": "kilogram",
          "attributes": [],
          "description": "The base unit for mass quantities (kg)."
        },
        {
          "name": "meter",
          "attributes": [],
          "description": "The base unit for length quantities (m)."
        },
        {
          "name": "ounce",
          "attributes": [],
          "description": "A unit of mass equal to 1 / 16 POUND (standard name oz)."
        },
        {
          "name": "pound",
          "attributes": [],
          "description": "A unit of mass equal to 453.59237 grams (avoirdupois pound, standard name lb)."
        }
      ],
      "attributes": [],
      "description": "Defines the units of measurement that we support. As units are added, we conform with the standard units provided by jscience as part of JSR 363 - see http://jscience.org/api/javax/measure/unit/SI.html and http://jscience.org/api/javax/measure/unit/NonSI.html"
    },
    {
      "name": "unit_of_time",
      "plural": "unit_of_times",
      "values": [
        {
          "name": "day",
          "attributes": []
        },
        {
          "name": "hour",
          "attributes": []
        },
        {
          "name": "minute",
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Defines the units of time that we support. We confirm with the standard set of units of time from http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/TimeUnit.html"
    },
    {
      "name": "update_policy",
      "plural": "update_policies",
      "values": [
        {
          "name": "auto",
          "attributes": []
        },
        {
          "name": "queue",
          "attributes": [],
          "description": "Queue item update for approval."
        },
        {
          "name": "discard",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "update_type",
      "plural": "update_types",
      "values": [
        {
          "name": "change",
          "attributes": [],
          "description": "Long value to increment or decrement. Positive quantities are added to inventory while negative quantities are decrement from inventory."
        },
        {
          "name": "set",
          "attributes": [],
          "description": "Set aboluste quantity to new value with no regard for previous updates"
        }
      ],
      "attributes": [],
      "description": "Types of updates that can be made on quantity of inventory"
    },
    {
      "name": "value_added_service",
      "plural": "value_added_services",
      "values": [
        {
          "name": "Hazardous Material",
          "attributes": [],
          "description": "See https://en.wikipedia.org/wiki/ORM-D"
        }
      ],
      "attributes": []
    },
    {
      "name": "visibility",
      "plural": "visibilities",
      "values": [
        {
          "name": "public",
          "attributes": []
        },
        {
          "name": "private",
          "attributes": []
        }
      ],
      "attributes": []
    }
  ],
  "unions": [
    {
      "name": "authorization_details",
      "plural": "authorization_detailses",
      "types": [
        {
          "type": "authorization_details_decline",
          "attributes": []
        },
        {
          "type": "authorization_details_success",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator",
      "description": "Represents all possible responses from an authorization attempt"
    },
    {
      "name": "deminimus",
      "plural": "deminimuses",
      "types": [
        {
          "type": "deminimus_simple",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "document",
      "plural": "documents",
      "types": [
        {
          "type": "catalog_item_document",
          "attributes": []
        },
        {
          "type": "harmonization_document",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "expandable_item_function",
      "plural": "expandable_item_functions",
      "types": [
        {
          "type": "item_function",
          "attributes": []
        },
        {
          "type": "item_function_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator",
      "description": "An item function can be represented with just it's Id, or the entire model"
    },
    {
      "name": "expandable_organization",
      "plural": "expandable_organizations",
      "types": [
        {
          "type": "organization",
          "attributes": []
        },
        {
          "type": "organization_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "expandable_subcatalog",
      "plural": "expandable_subcatalogs",
      "types": [
        {
          "type": "subcatalog",
          "attributes": []
        },
        {
          "type": "subcatalog_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator",
      "description": "A subcatalog can be represented with just it's ID, or the entire model"
    },
    {
      "name": "expandable_user",
      "plural": "expandable_users",
      "types": [
        {
          "type": "user",
          "attributes": []
        },
        {
          "type": "user_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "inventory_strategy",
      "plural": "inventory_strategies",
      "types": [
        {
          "type": "inventory_backorder",
          "attributes": [],
          "description": "Enables backorders, setting an optional number of units that we allow for backorder. For example, a backorder w/ quantity 10 will enable selling until the actual inventory quantity is -10."
        },
        {
          "type": "inventory_stock",
          "attributes": [],
          "description": "Treats inventory as available as long as the actual inventory quantity is > the specified quantity. A common use case is to set quantity to zero to indicate availability as long as there is at least 1 unit available."
        },
        {
          "type": "inventory_unlimited",
          "attributes": [],
          "description": "Items affected with rules pursuing an unlimited strategy will always be available"
        }
      ],
      "attributes": [],
      "discriminator": "discriminator",
      "description": "Types of rules used to apply on inventory to calculate available quantity"
    },
    {
      "name": "ratecard_fee",
      "plural": "ratecard_fees",
      "types": [
        {
          "type": "ddp",
          "attributes": []
        },
        {
          "type": "fuel_surcharge",
          "attributes": []
        },
        {
          "type": "oversized_shipment",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "tier_rule_outcome",
      "plural": "tier_rule_outcomes",
      "types": [
        {
          "type": "amount_margin",
          "attributes": [],
          "description": "Add a certain amount on the actual base cost"
        },
        {
          "type": "at_cost",
          "attributes": []
        },
        {
          "type": "flat_rate",
          "attributes": []
        },
        {
          "type": "free_shipping",
          "attributes": []
        },
        {
          "type": "percent_margin",
          "attributes": [],
          "description": "Add a certain percentage of the actual base cost"
        }
      ],
      "attributes": [],
      "discriminator": "discriminator",
      "description": "Possible outcome types from a tier rule"
    }
  ],
  "models": [
    {
      "name": "address",
      "plural": "addresses",
      "fields": [
        {
          "name": "text",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Full text version of address"
        },
        {
          "name": "streets",
          "type": "[string]",
          "required": false,
          "attributes": [],
          "description": "Array for street line 1, street line 2, etc., in order"
        },
        {
          "name": "city",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "province",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "postal",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "country",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "USA"
        },
        {
          "name": "latitude",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "longitude",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Defines structured fields for address to be used in user/form input. Either text or the structured input needs to be present."
    },
    {
      "name": "amount_margin",
      "plural": "amount_margins",
      "fields": [
        {
          "name": "addition",
          "type": "price",
          "required": true,
          "attributes": [],
          "description": "Additional cost to be added to actual cost to get quote amount to show to customer"
        }
      ],
      "attributes": [],
      "description": "Rule outcome where shipping surfaced in quote is actual cost plus a predefined margin price"
    },
    {
      "name": "at_cost",
      "plural": "at_costs",
      "fields": [
        {
          "name": "ignore",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Rule outcome where shipping surfaced in quote is actual cost of the service"
    },
    {
      "name": "attribute",
      "plural": "attributes",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "options",
          "type": "options",
          "required": true,
          "attributes": []
        },
        {
          "name": "label",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "An attribute can be configured to be used in different ways throughout Flow. A common example is to identify a meaningful attribute (e.g. brand) that can then be displayed throughout the Flow console."
    },
    {
      "name": "attribute_form",
      "plural": "attribute_forms",
      "fields": [
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The actual attribute key. This key should match the keys used in the item.attributes maps",
          "example": "brand"
        },
        {
          "name": "options",
          "type": "options",
          "required": true,
          "attributes": [],
          "description": "Defines the configuration for how the options are used through flow"
        },
        {
          "name": "label",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "A human readable label used for display purposes",
          "example": "Brand"
        }
      ],
      "attributes": []
    },
    {
      "name": "attribute_version",
      "plural": "attribute_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "attribute",
          "type": "attribute",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Retrieve journaled history of an attribute"
    },
    {
      "name": "authentication_form",
      "plural": "authentication_forms",
      "fields": [
        {
          "name": "email",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "password",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "authorization",
      "plural": "authorizations",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "reference",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Unique client reference number for this authorization"
        },
        {
          "name": "card",
          "type": "card_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The amount to authorize",
          "example": "120.38"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "example": "USD"
        },
        {
          "name": "customer",
          "type": "customer",
          "required": true,
          "attributes": [],
          "description": "The customer who is actually receiving the goods. Providing name and email at a minimum will significantly increase the acceptance rate and are recommended."
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": true,
          "attributes": [],
          "description": "A set of key/value pairs that you can attach to a charge object. It can be useful for storing additional information about the charge in a structured format."
        },
        {
          "name": "shipping",
          "type": "address",
          "required": false,
          "attributes": [],
          "description": "Shipping address, if relevant"
        },
        {
          "name": "ip",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The IP address of the consumer",
          "example": "96.242.151.245"
        },
        {
          "name": "cvv",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The card verification number for the payment method for which you are requesting an authorization. PCI prevents us from storing the verification value, but if you present as part of the authorization you may improve your acceptance rates."
        },
        {
          "name": "details",
          "type": "authorization_details",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "An authorization is used to check and reserve funds w/ a given payment method. No funds are actually transferred; once you have you an authorization, you can capture up to the amount of the authorization."
    },
    {
      "name": "authorization_details_decline",
      "plural": "authorization_details_declines",
      "fields": [
        {
          "name": "reason",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Reason for the decline"
        },
        {
          "name": "avs",
          "type": "avs",
          "required": false,
          "attributes": []
        },
        {
          "name": "cvv",
          "type": "cvv",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a declined authorization"
    },
    {
      "name": "authorization_details_success",
      "plural": "authorization_details_successes",
      "fields": [
        {
          "name": "avs",
          "type": "avs",
          "required": false,
          "attributes": []
        },
        {
          "name": "cvv",
          "type": "cvv",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a successful authorization"
    },
    {
      "name": "authorization_form",
      "plural": "authorization_forms",
      "fields": [
        {
          "name": "reference",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Unique client reference number for this authorization"
        },
        {
          "name": "token",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The token of the payment method to use when authorizing this transaction"
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The amount to authorize",
          "example": "120.38"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "example": "USD"
        },
        {
          "name": "customer",
          "type": "customer",
          "required": true,
          "attributes": [],
          "description": "The customer who is actually making the purchase. Providing name and email at a minimum will significantly increase the acceptance rate."
        },
        {
          "name": "cvv",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The card verification number. Note this number is never stored and thus is presented on each auth. Presenting the CVV may increase acceptance rates"
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": false,
          "attributes": [],
          "description": "A set of key/value pairs that you can attach to a charge object. It can be useful for storing additional information about the charge in a structured format."
        },
        {
          "name": "shipping",
          "type": "address",
          "required": false,
          "attributes": [],
          "description": "Shipping address, if relevant"
        },
        {
          "name": "ip",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The IP address of the consumer",
          "example": "96.242.151.245"
        }
      ],
      "attributes": [],
      "description": "An authorization is used to check and reserve funds w/ a given payment method. No funds are actually transferred; once you have you an authorization, you can capture up to the amount of the authorization."
    },
    {
      "name": "authorization_reference",
      "plural": "authorization_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "authorization_version",
      "plural": "authorization_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "authorization",
          "type": "authorization",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "available_service",
      "plural": "available_services",
      "fields": [
        {
          "name": "service",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Carrier service level ID",
          "example": "ups-ground"
        }
      ],
      "attributes": [],
      "description": "Representation of a service level available at a center, including misc attributes. Only ID for now, more attributes will be added in the future."
    },
    {
      "name": "avs",
      "plural": "avses",
      "fields": [
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "message",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents data from the address verification check"
    },
    {
      "name": "booking",
      "plural": "bookings",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "shipments",
          "type": "[shipment_reference]",
          "required": true,
          "attributes": [],
          "description": "Shipments created as a result of booking the quote options"
        }
      ],
      "attributes": [],
      "description": "Represents second step of two-step purchase of Flow services."
    },
    {
      "name": "booking_form",
      "plural": "booking_forms",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "quote",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Reference to quote being booked by the organization"
        },
        {
          "name": "options",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "Selected list of options for the quote"
        }
      ],
      "attributes": [],
      "description": "Represents second step of two-step purchase of Flow services."
    },
    {
      "name": "booking_summary",
      "plural": "booking_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        }
      ],
      "attributes": []
    },
    {
      "name": "booking_version",
      "plural": "booking_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "booking",
          "type": "booking_summary",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "capture",
      "plural": "captures",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "reference",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Unique client reference number for this capture"
        },
        {
          "name": "authorization",
          "type": "authorization_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The amount to capture in the currency of the associated authorization. If not specified, defaults to the full amount of the authorization (minus any prior captures).",
          "example": "120.38"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Required if amount is specified. The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "example": "USD"
        }
      ],
      "attributes": [],
      "description": "Capture actually transfers funds. You can capture as many times as you'd like up until the total amount of the authorization has been captured or the authorization otherwise becomes unavailable (e.g. expires)."
    },
    {
      "name": "capture_form",
      "plural": "capture_forms",
      "fields": [
        {
          "name": "reference",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Unique client reference number for this capture"
        },
        {
          "name": "authorization_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": false,
          "attributes": [],
          "description": "The amount to capture in the currency of the associated authorization. If not specified, defaults to the full amount of the authorization (minus any prior captures).",
          "example": "120.38"
        },
        {
          "name": "currency",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Required if amount is specified. The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "example": "USD"
        }
      ],
      "attributes": [],
      "description": "Capture actually transfers funds. You can capture as many times as you'd like up until the total amount of the authorization has been captured or the authorization otherwise becomes unavailable (e.g. expires)."
    },
    {
      "name": "capture_version",
      "plural": "capture_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "capture",
          "type": "capture",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "card",
      "plural": "cards",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "type",
          "type": "card_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "expiration",
          "type": "expiration",
          "required": true,
          "attributes": []
        },
        {
          "name": "last4",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Cleartext last 4 numbers of the card"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Cardholder name"
        },
        {
          "name": "address",
          "type": "address",
          "required": false,
          "attributes": [],
          "description": "Cardholder billing address"
        }
      ],
      "attributes": [],
      "description": "Card represents the metadata about a secure, tokenized card. The card 'id' is a unique, cryptographically secure token by which this card can be identified in the future."
    },
    {
      "name": "card_form",
      "plural": "card_forms",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Cleartext card number. May contain integers only or integers with dashes. If dashes are provided, we will remove them, storing only the raw number.",
          "example": "4111111111111111 or 4111-1111-1111-1111"
        },
        {
          "name": "expiration_month",
          "type": "integer",
          "required": true,
          "attributes": [],
          "description": "The month of expiration expressed as a number. 1 = January, 12 = December",
          "minimum": 1,
          "maximum": 12,
          "example": "4"
        },
        {
          "name": "expiration_year",
          "type": "integer",
          "required": true,
          "attributes": [],
          "description": "The 4 digit expiration year",
          "example": "2016"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Cardholder name."
        },
        {
          "name": "address",
          "type": "address",
          "required": false,
          "attributes": [],
          "description": "Cardholder billing address"
        }
      ],
      "attributes": []
    },
    {
      "name": "card_reference",
      "plural": "card_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "card_version",
      "plural": "card_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "card",
          "type": "card",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "carrier",
      "plural": "carriers",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "DHL, Fedex, etc."
        },
        {
          "name": "facilities",
          "type": "[shipping_address]",
          "required": true,
          "attributes": [],
          "description": "List of facilities available for consolidation"
        },
        {
          "name": "visibility",
          "type": "visibility",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Partner that actually take a shipment between places (ex: FedEx, DHL, SF Express)"
    },
    {
      "name": "carrier_account",
      "plural": "carrier_accounts",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "carrier",
          "type": "carrier",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "User-friendly name to reference the carrier_account"
        }
      ],
      "attributes": [],
      "description": "carrier_account an organization has with a carrier. A carrier can have multiple carrier_accounts with a single carrier. This represents the many-to-many relationship between organizations and carriers."
    },
    {
      "name": "carrier_account_form",
      "plural": "carrier_account_forms",
      "fields": [
        {
          "name": "carrier",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "carrier_account_reference",
      "plural": "carrier_account_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "carrier_account_summary",
      "plural": "carrier_account_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "carrier",
          "type": "carrier_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "User-friendly name to reference the carrier_account"
        }
      ],
      "attributes": []
    },
    {
      "name": "carrier_account_version",
      "plural": "carrier_account_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "carrier_account",
          "type": "carrier_account_summary",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "carrier_form",
      "plural": "carrier_forms",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Name of the carrier",
          "minimum": 3
        },
        {
          "name": "facilities",
          "type": "[shipping_address]",
          "required": false,
          "attributes": [],
          "description": "List of facilities available for consolidation"
        },
        {
          "name": "visibility",
          "type": "visibility",
          "required": false,
          "attributes": [],
          "description": "Public vs private carrier"
        }
      ],
      "attributes": [],
      "description": "Partner that actually take a shipment between places (ex: FedEx, DHL, SF Express)"
    },
    {
      "name": "carrier_reference",
      "plural": "carrier_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "carrier_version",
      "plural": "carrier_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "carrier",
          "type": "carrier",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "catalog",
      "plural": "catalogs",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "catalog_item_document",
      "plural": "catalog_item_documents",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "categories",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "minimum": 0
        },
        {
          "name": "experiences",
          "type": "[experience_summary]",
          "required": true,
          "attributes": [],
          "minimum": 0
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": true,
          "attributes": [],
          "minimum": 0
        }
      ],
      "attributes": []
    },
    {
      "name": "catalog_statistics",
      "plural": "catalog_statisticses",
      "fields": [
        {
          "name": "items",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Total number of catalog items available from master catalog"
        },
        {
          "name": "categories",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Distinct number of catalog item categories"
        }
      ],
      "attributes": [],
      "description": "Statistics covering product catalog item information, including total catalog item count, number of distinct categories, etc."
    },
    {
      "name": "catalog_version",
      "plural": "catalog_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "catalog",
          "type": "catalog",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "category_summary",
      "plural": "category_summaries",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The category, if known. If there is no category name, this indicates that the items in this bucket do not belong to any categories."
        },
        {
          "name": "count",
          "type": "long",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "center",
      "plural": "centers",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "address",
          "type": "shipping_address",
          "required": true,
          "attributes": []
        },
        {
          "name": "packaging",
          "type": "[packaging]",
          "required": true,
          "attributes": [],
          "description": "Available types of packaging for shipment at this center"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Long name of the facility. ex: Fosdick CT, Quiet Logistics Andover"
        },
        {
          "name": "services",
          "type": "[available_service]",
          "required": true,
          "attributes": [],
          "description": "List of carrier service levels available at this center"
        },
        {
          "name": "schedule",
          "type": "schedule",
          "required": true,
          "attributes": [],
          "description": "Schedule of the origin center where shipment is originating. Contains normal operating hours, holiday periods, and cutoff."
        },
        {
          "name": "timezone",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a facility capable of fulfilling a shipment"
    },
    {
      "name": "center_form",
      "plural": "center_forms",
      "fields": [
        {
          "name": "address",
          "type": "shipping_address",
          "required": true,
          "attributes": []
        },
        {
          "name": "packaging",
          "type": "[packaging]",
          "required": true,
          "attributes": [],
          "description": "Available types of packaging for shipment at this center"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Organization-provided name for the center",
          "minimum": 3
        },
        {
          "name": "services",
          "type": "[available_service]",
          "required": true,
          "attributes": [],
          "description": "List of carrier service levels available at this center"
        },
        {
          "name": "schedule",
          "type": "schedule",
          "required": true,
          "attributes": [],
          "description": "Schedule of the origin center where shipment is originating. Contains normal operating hours, holiday periods, and cutoff."
        },
        {
          "name": "timezone",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "center_reference",
      "plural": "center_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "center_version",
      "plural": "center_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "center",
          "type": "center",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "cleartext",
      "plural": "cleartexts",
      "fields": [
        {
          "name": "value",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The actual cleartext value of the token"
        }
      ],
      "attributes": [],
      "description": "The actual value of the API token. This is modeled as a separate resource as it is fetched only on demand."
    },
    {
      "name": "contact",
      "plural": "contacts",
      "fields": [
        {
          "name": "name",
          "type": "name",
          "required": true,
          "attributes": []
        },
        {
          "name": "email",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "phone",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Defines structured fields for a contact person. Typically used for specifying contact person for an account, shipment, or organization representative"
    },
    {
      "name": "conversion",
      "plural": "conversions",
      "fields": [
        {
          "name": "base",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The base iso_4217_3 currency code as defined in http://reference.api.flow.io/currencies",
          "example": "usd"
        },
        {
          "name": "target",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The target iso_4217_3 currency code as defined in http://reference.api.flow.io/currencies",
          "example": "can"
        },
        {
          "name": "rate",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The conversion rate from the base to target currency."
        }
      ],
      "attributes": [],
      "description": "Describes conversion information from a base currency to a target currency."
    },
    {
      "name": "country",
      "plural": "countries",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "United States of America"
        },
        {
          "name": "iso_3166_2",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 3166 2-character country code. See https://api.flow.io/reference/countries",
          "example": "US"
        },
        {
          "name": "iso_3166_3",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 3166 3-character country code. See https://api.flow.io/reference/countries",
          "example": "USA"
        },
        {
          "name": "languages",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "A list of the languages spoken in this country",
          "minimum": 0
        },
        {
          "name": "measurement_system",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "metric or imperial"
        },
        {
          "name": "default_currency",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "ISO 4217 3-character currency code. See https://api.flow.io/reference/currencies",
          "example": "USD"
        }
      ],
      "attributes": []
    },
    {
      "name": "currency",
      "plural": "currencies",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "US Dollar"
        },
        {
          "name": "iso_4217_3",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "USD"
        },
        {
          "name": "number_decimals",
          "type": "integer",
          "required": true,
          "attributes": [],
          "description": "The number of decimal places used by the given currency. For example, USD has 2 decimals while JPY has 0.",
          "minimum": 0
        }
      ],
      "attributes": [],
      "description": "ISO 4217 3-character currency code. See https://api.flow.io/reference/currencies"
    },
    {
      "name": "customer",
      "plural": "customers",
      "fields": [
        {
          "name": "name",
          "type": "name",
          "required": true,
          "attributes": []
        },
        {
          "name": "number",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "phone",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Customer phone number. Useful for both fraud and order delivery."
        },
        {
          "name": "email",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Customer email address. Useful for fraud."
        }
      ],
      "attributes": [],
      "description": "A customer represents the actual person purchasing from you. This information is needed primarily to support logistics (delivery to this person), fraud management (verification of who the person is), and reporting. We also recommend including your customer number whenever possible as doing so will allow Flow to link up transactions for this customer making customer service easier."
    },
    {
      "name": "cvv",
      "plural": "cvvs",
      "fields": [
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "message",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents data from the card verification number check"
    },
    {
      "name": "datetime_range",
      "plural": "datetime_ranges",
      "fields": [
        {
          "name": "from",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "to",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "ddp",
      "plural": "ddps",
      "fields": [
        {
          "name": "amount",
          "type": "double",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "delivery",
      "plural": "deliveries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "items",
          "type": "[item_summary]",
          "required": true,
          "attributes": []
        },
        {
          "name": "options",
          "type": "[delivery_option]",
          "required": true,
          "attributes": [],
          "minimum": 1
        }
      ],
      "attributes": [],
      "description": "Represents a collection of items, the available delivery option tier for that collection of items, and metadata about those options"
    },
    {
      "name": "delivery_form",
      "plural": "delivery_forms",
      "fields": [
        {
          "name": "quote",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "items",
          "type": "[item_summary]",
          "required": true,
          "attributes": []
        },
        {
          "name": "destination",
          "type": "shipping_address",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a collection of items, the available delivery option tier for that collection of items, and metadata about those options"
    },
    {
      "name": "delivery_option",
      "plural": "delivery_options",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "cost",
          "type": "price",
          "required": true,
          "attributes": [],
          "description": "Actual shipping cost to be charged to the merchant by Flow"
        },
        {
          "name": "delivered_duty",
          "type": "delivered_duty",
          "required": true,
          "attributes": []
        },
        {
          "name": "price",
          "type": "price",
          "required": true,
          "attributes": [],
          "description": "Price of shipping to be used for the end-customer selecting this option. Can be actual cost, free shipping, etc."
        },
        {
          "name": "service",
          "type": "service_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "tier",
          "type": "tier_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "window",
          "type": "datetime_range",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a way to fulfill a delivery, including an estimates for the date range and cost"
    },
    {
      "name": "delivery_option_form",
      "plural": "delivery_option_forms",
      "fields": [
        {
          "name": "delivery",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "items",
          "type": "[item_summary]",
          "required": true,
          "attributes": []
        },
        {
          "name": "destination",
          "type": "shipping_address",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a way to fulfill a delivery, including an estimates for the date range and cost"
    },
    {
      "name": "delivery_option_reference",
      "plural": "delivery_option_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "delivery_option_summary",
      "plural": "delivery_option_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "cost",
          "type": "price",
          "required": true,
          "attributes": [],
          "description": "Actual shipping cost to be charged to the merchant by Flow"
        },
        {
          "name": "delivered_duty",
          "type": "delivered_duty",
          "required": true,
          "attributes": []
        },
        {
          "name": "price",
          "type": "price",
          "required": true,
          "attributes": [],
          "description": "Price of shipping to be used for the end-customer selecting this option. Can be actual cost, free shipping, etc."
        },
        {
          "name": "service",
          "type": "service_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "tier",
          "type": "tier_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "window",
          "type": "datetime_range",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "delivery_option_version",
      "plural": "delivery_option_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "delivery_option",
          "type": "delivery_option_summary",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "delivery_summary",
      "plural": "delivery_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "items",
          "type": "[item_summary]",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "delivery_version",
      "plural": "delivery_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "delivery",
          "type": "delivery_summary",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "delivery_window",
      "plural": "delivery_windows",
      "fields": [
        {
          "name": "from",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "to",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "deminimus_simple",
      "plural": "deminimus_simples",
      "fields": [
        {
          "name": "value",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The value below which no tax or duty is collected"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO-4217 3 character currency code in which the value is calculated"
        },
        {
          "name": "components",
          "type": "[levy_component]",
          "required": true,
          "attributes": [],
          "description": "The components which are used to determine the value. Note that these components may be different from the components for the tax or duty itself"
        },
        {
          "name": "minimum",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "If the value of the deminimus is less than the minimum, no tax or duty is due",
          "minimum": 0
        }
      ],
      "attributes": []
    },
    {
      "name": "dimension",
      "plural": "dimensions",
      "fields": [
        {
          "name": "depth",
          "type": "measurement",
          "required": false,
          "attributes": []
        },
        {
          "name": "diameter",
          "type": "measurement",
          "required": false,
          "attributes": []
        },
        {
          "name": "length",
          "type": "measurement",
          "required": false,
          "attributes": []
        },
        {
          "name": "weight",
          "type": "measurement",
          "required": false,
          "attributes": []
        },
        {
          "name": "width",
          "type": "measurement",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "dimensions",
      "plural": "dimensionses",
      "fields": [
        {
          "name": "product",
          "type": "dimension",
          "required": false,
          "attributes": []
        },
        {
          "name": "packaging",
          "type": "dimension",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "duration",
      "plural": "durations",
      "fields": [
        {
          "name": "unit",
          "type": "unit_of_time",
          "required": true,
          "attributes": []
        },
        {
          "name": "value",
          "type": "long",
          "required": true,
          "attributes": [],
          "minimum": 0
        }
      ],
      "attributes": [],
      "description": "Represents a duration of time."
    },
    {
      "name": "duty",
      "plural": "duties",
      "fields": [
        {
          "name": "rate",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The combined duty rate",
          "minimum": 0,
          "example": ".35"
        },
        {
          "name": "components",
          "type": "[levy_component]",
          "required": true,
          "attributes": [],
          "description": "The components to which duty is applied.",
          "minimum": 1
        },
        {
          "name": "deminimus",
          "type": "deminimus",
          "required": false,
          "attributes": [],
          "description": "Describes the duty deminimus if there is one for this destination"
        }
      ],
      "attributes": [],
      "description": "Represents a simple model of duties that apply to a given item / trade lane."
    },
    {
      "name": "email_verification",
      "plural": "email_verifications",
      "fields": [
        {
          "name": "email",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents the successful response of an email verification token. We return the email address in this case to allow the UI to display which email address was verified."
    },
    {
      "name": "error",
      "plural": "errors",
      "fields": [
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Machine readable code for this specific error message"
        },
        {
          "name": "message",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Description of the error"
        }
      ],
      "attributes": [],
      "description": "Represents an error of some sort (e.g. invalid input). Each error will contain a code and a specific message describing the failure."
    },
    {
      "name": "estimated_window",
      "plural": "estimated_windows",
      "fields": [
        {
          "name": "from",
          "type": "long",
          "required": true,
          "attributes": []
        },
        {
          "name": "to",
          "type": "long",
          "required": true,
          "attributes": []
        },
        {
          "name": "unit",
          "type": "unit_of_time",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Range of time given a from and to number and the unit. For example: 1-4 hours or 4-7 days"
    },
    {
      "name": "exception",
      "plural": "exceptions",
      "fields": [
        {
          "name": "type",
          "type": "exception_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "datetime_range",
          "type": "datetime_range",
          "required": true,
          "attributes": [],
          "description": "Range for the holiday. For single-day holidays, from and to should just be the same.",
          "example": "2016/12/24 12:00 am to 2016/12/25 11:59 pm"
        }
      ],
      "attributes": [],
      "description": "Represents an exception to the schedule of a center."
    },
    {
      "name": "experience",
      "plural": "experiences",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "delivered_duty",
          "type": "delivered_duty",
          "required": true,
          "attributes": [],
          "description": "Determines if a given experience should be DDP, DDU, or customer choice. If DDP, note that in some cases if a customer is shipping to a country where DDP is not available, information may still come back as DDU"
        },
        {
          "name": "region",
          "type": "region_reference",
          "required": true,
          "attributes": [],
          "description": "Reference to region as defined in https://api.flow.io/reference/regions",
          "example": "can or eurozone"
        },
        {
          "name": "country",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "When otherwise not known, the default country to use for this experience. One example would be an experience setup for Europe - when you request landed cost, if there is no geolocation information available, we will use this country as the basis for landed cost. ISO 3166 3 currency code as defined in https://api.flow.io/reference/countries",
          "example": "CAN"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "This currency defines the base currency for all pricing related features - e.g. pricing functions. ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "example": "CAD"
        },
        {
          "name": "language",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The default language to use for when displaying products, e.g. to display product information in this language by default. ISO 639 2 language code as defined in https://api.flow.io/reference/languages",
          "example": "en"
        },
        {
          "name": "measurement_system",
          "type": "measurement_system",
          "required": true,
          "attributes": []
        },
        {
          "name": "subcatalog",
          "type": "subcatalog_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "position",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Position of this experience relative to other experiences. Lower position indicates experience should be considered first. Main use is to resolve incoming geolocation data (e.g. ip, country) to pick an experience. We do this by walking through the list of experiences to find the first one that matches the user's geography.",
          "minimum": 0
        }
      ],
      "attributes": [],
      "description": "Experiences define a local experience for a given geographic region"
    },
    {
      "name": "experience_form",
      "plural": "experience_forms",
      "fields": [
        {
          "name": "region_id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The actual geographic area to which this experience is targeted. Value is the region Id as defined in https://api.flow.io/reference/regions - To create a 'default' experience, set region_id to 'world'",
          "minimum": 3,
          "example": "can or eurozone or world"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Name for the experience"
        },
        {
          "name": "delivered_duty",
          "type": "delivered_duty",
          "required": false,
          "attributes": [],
          "description": "Determines if a given experience should be DDP, DDU, or customer choice. If DDP, note that in some cases if a customer is shipping to a country where DDP is not available, information may still come back as DDU. If not provided, Flow will set a base default based on the country"
        },
        {
          "name": "country",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "When otherwise not known, the default country to use for this experience. One example would be an experience setup for Europe - when you request landed cost, if there is no geolocation information available, we will use this country as the basis for landed cost. ISO 3166 3 currency code as defined in https://api.flow.io/reference/countries",
          "example": "CAN"
        },
        {
          "name": "currency",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The default currency for this experience which will define the currency of the pricing for this experience as well as the default currency displayed when no other information is available. Value is an ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "minimum": 3,
          "maximum": 3,
          "example": "CAD"
        },
        {
          "name": "language",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The default language in which to display information for this experience, when no other information is present. Value is an ISO 639 2 language code as defined in https://api.flow.io/reference/languages",
          "example": "en"
        },
        {
          "name": "key",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The key to use for this experience. If not provided, we will generate a unique key based on the experience name."
        },
        {
          "name": "measurement_system",
          "type": "measurement_system",
          "required": false,
          "attributes": []
        },
        {
          "name": "subcatalog_id",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The Id of the subcatalog that will define the specific list of products to offer in this experience. If not specified, a new subcatalog will be created."
        },
        {
          "name": "position",
          "type": "long",
          "required": false,
          "attributes": [],
          "description": "Position of this experience relative to other experiences. Lower position indicates experience should be considered first. Main use is to resolve incoming geolocation data (e.g. ip, country) to pick an experience. We do this by walking through the list of experiences to find the first one that matches the user's geography. If not specified, then defaults to a: if region is not world, the last non world experience or b: If region is world, the end of the list.",
          "minimum": 0
        }
      ],
      "attributes": [],
      "description": "Experiences define a local experience for a given geographic region"
    },
    {
      "name": "experience_reference",
      "plural": "experience_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "experience_summary",
      "plural": "experience_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "currency",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "example": "USD"
        },
        {
          "name": "country",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The ISO 3166-3 code for the destination country. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "USA"
        }
      ],
      "attributes": [],
      "description": "Some important fields related to experiences used in various APIs"
    },
    {
      "name": "experience_version",
      "plural": "experience_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "experience",
          "type": "experience",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "expiration",
      "plural": "expirations",
      "fields": [
        {
          "name": "month",
          "type": "integer",
          "required": true,
          "attributes": [],
          "description": "The month of expiration expressed as a number. 1 = January, 12 = December",
          "minimum": 1,
          "maximum": 12,
          "example": "4"
        },
        {
          "name": "year",
          "type": "integer",
          "required": true,
          "attributes": [],
          "description": "The 4 digit expiration year",
          "example": "2016"
        }
      ],
      "attributes": [],
      "description": "The month and year at which a card expires"
    },
    {
      "name": "flat_rate",
      "plural": "flat_rates",
      "fields": [
        {
          "name": "price",
          "type": "price",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Rule outcome where shipping surfaced in quote is pre-defined flat rate"
    },
    {
      "name": "flow_item_index_metadata",
      "plural": "flow_item_index_metadata",
      "fields": [
        {
          "name": "status",
          "type": "subcatalog_item_status",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "free_shipping",
      "plural": "free_shippings",
      "fields": [
        {
          "name": "ignore",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Rule outcome where shipping surfaced in quote is free"
    },
    {
      "name": "fuel_surcharge",
      "plural": "fuel_surcharges",
      "fields": [
        {
          "name": "amount",
          "type": "double",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "fulfillment_experience_reference",
      "plural": "fulfillment_experience_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "example": "USD"
        }
      ],
      "attributes": []
    },
    {
      "name": "harmonization_document",
      "plural": "harmonization_documents",
      "fields": [
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "categories",
          "type": "[category_summary]",
          "required": true,
          "attributes": [],
          "minimum": 1
        },
        {
          "name": "origin",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "ISO 3166 3-character code for country of origin. See https://api.flow.io/reference/countries",
          "example": "USA"
        }
      ],
      "attributes": []
    },
    {
      "name": "harmonization_settings",
      "plural": "harmonization_settings",
      "fields": [
        {
          "name": "duty_strategy",
          "type": "levy_strategy",
          "required": true,
          "attributes": [],
          "description": "Documents what will happen if we are unable to get an actual duty rate for this item, i.e. there will be estimation of some sort",
          "default": "maximum"
        },
        {
          "name": "tax_strategy",
          "type": "levy_strategy",
          "required": true,
          "attributes": [],
          "description": "Documents what will happen if we are unable to get an actual duty rate for this item, i.e. there will be estimation of some sort",
          "default": "maximum"
        }
      ],
      "attributes": [],
      "description": "Organization level settings."
    },
    {
      "name": "harmonization_settings_form",
      "plural": "harmonization_settings_forms",
      "fields": [
        {
          "name": "duty_strategy",
          "type": "levy_strategy",
          "required": false,
          "attributes": []
        },
        {
          "name": "tax_strategy",
          "type": "levy_strategy",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "harmonized_item",
      "plural": "harmonized_items",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Description of the item that is being classified."
        },
        {
          "name": "categories",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "default": "[]"
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": true,
          "attributes": [],
          "default": "{}"
        }
      ],
      "attributes": [],
      "description": "A harmonized item stores explicit information about this item for the purposes of harmonization / classification. The harmonization process begins by creating a harmonized item; this kicks off the internal processes. Once assigned, codes will be available via the hs6 and hs10 resources"
    },
    {
      "name": "harmonized_item_duty",
      "plural": "harmonized_item_duties",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "item",
          "type": "harmonized_item_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "origin",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166 3 character code for the country of origin. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "CHN"
        },
        {
          "name": "destination",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166 3 character code for the destination country. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "CAN"
        },
        {
          "name": "rate",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The actual duty rate, expressed as a decimal (e.g. 10% is represented as .1 not 10)",
          "minimum": 0,
          "example": ".15"
        }
      ],
      "attributes": [],
      "description": "Used to specifically set an item's duty rate for a given trade lane."
    },
    {
      "name": "harmonized_item_duty_form",
      "plural": "harmonized_item_duty_forms",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "origin",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166 3 character code for the country of origin. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "CHN"
        },
        {
          "name": "destination",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166 3 character code for the destination country. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "CAN"
        },
        {
          "name": "rate",
          "type": "decimal",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "harmonized_item_duty_version",
      "plural": "harmonized_item_duty_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "harmonized_item_duty",
          "type": "harmonized_item_duty",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "harmonized_item_form",
      "plural": "harmonized_item_forms",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "categories",
          "type": "[string]",
          "required": false,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "harmonized_item_put_form",
      "plural": "harmonized_item_put_forms",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "categories",
          "type": "[string]",
          "required": false,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "harmonized_item_reference",
      "plural": "harmonized_item_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        }
      ],
      "attributes": []
    },
    {
      "name": "harmonized_item_version",
      "plural": "harmonized_item_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "harmonized_item",
          "type": "harmonized_item",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "harmonized_landed_cost",
      "plural": "harmonized_landed_costs",
      "fields": [
        {
          "name": "address",
          "type": "address",
          "required": true,
          "attributes": [],
          "description": "The destination address"
        },
        {
          "name": "items",
          "type": "[harmonized_landed_cost_item]",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Summary of landed cost data (taxes and duties) for 1 or more items going to a single destination country. Records are unique based on (item.number, country of origin)."
    },
    {
      "name": "harmonized_landed_cost_form",
      "plural": "harmonized_landed_cost_forms",
      "fields": [
        {
          "name": "address",
          "type": "address",
          "required": true,
          "attributes": [],
          "description": "The destination address. At a minimum, country code is required, but more precise information will lead to more precise rates."
        },
        {
          "name": "item_numbers",
          "type": "[string]",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Allows calculation of duty and tax for multiple items in one API call for items going to a specific destination country"
    },
    {
      "name": "harmonized_landed_cost_item",
      "plural": "harmonized_landed_cost_items",
      "fields": [
        {
          "name": "item",
          "type": "harmonized_item_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "duty",
          "type": "duty",
          "required": true,
          "attributes": []
        },
        {
          "name": "tax",
          "type": "tax",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Duty and tax information for a given item. Note that the internal implementation supports multiple countries of origin."
    },
    {
      "name": "healthcheck",
      "plural": "healthchecks",
      "fields": [
        {
          "name": "status",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "healthy"
        }
      ],
      "attributes": []
    },
    {
      "name": "hs10",
      "plural": "hs10",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "item",
          "type": "harmonized_item_reference",
          "required": true,
          "attributes": [],
          "description": "The item to which this code is assigned"
        },
        {
          "name": "origin",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166 3 character code for the country of origin"
        },
        {
          "name": "destination",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166 3 character code for the destination country"
        },
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The assigned HS-10 code",
          "minimum": 10
        }
      ],
      "attributes": [],
      "description": "The (Harmonized System) HS-10 code assigned to an item with a given origin/destination pair."
    },
    {
      "name": "hs10_version",
      "plural": "hs10_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "hs10",
          "type": "hs10",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "hs6",
      "plural": "hs6",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "item",
          "type": "harmonized_item_reference",
          "required": true,
          "attributes": [],
          "description": "The item to which this code is assigned"
        },
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The assigned HS-6 code",
          "minimum": 6,
          "maximum": 6
        }
      ],
      "attributes": [],
      "description": "The (Harmonized System) HS-6 code assigned to an item."
    },
    {
      "name": "hs6_version",
      "plural": "hs6_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "hs6",
          "type": "hs6",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "image",
      "plural": "images",
      "fields": [
        {
          "name": "url",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The full URL to the image",
          "example": "https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png"
        },
        {
          "name": "tags",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "Tags can be used to identify the type of image being sent",
          "default": "[]"
        }
      ],
      "attributes": [],
      "description": "The URL to an image, with optional tags. Flow Commerce primarily uses images to enhance the administrative tools (e.g. showing an item image in console)"
    },
    {
      "name": "image_form",
      "plural": "image_forms",
      "fields": [
        {
          "name": "url",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The full URL to the image",
          "example": "https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png"
        },
        {
          "name": "tags",
          "type": "[string]",
          "required": false,
          "attributes": [],
          "description": "Optional tags that can keep track of which image this is"
        }
      ],
      "attributes": [],
      "description": "Image form defines the data needed to create an image"
    },
    {
      "name": "inventory_backorder",
      "plural": "inventory_backorders",
      "fields": [
        {
          "name": "quantity",
          "type": "long",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Enables backorders, setting an optional number of units that we allow for backorder. For example, a backorder w/ quantity 10 will enable selling until the actual inventory quantity is -10."
    },
    {
      "name": "inventory_center_reference",
      "plural": "inventory_center_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "inventory_item_reference",
      "plural": "inventory_item_references",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        }
      ],
      "attributes": []
    },
    {
      "name": "inventory_rule",
      "plural": "inventory_rules",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "position",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Order in which rule applicability will be checked"
        },
        {
          "name": "query",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Query to be used to apply this rule. Only '*' is available for now, which will apply to all cases",
          "example": "*"
        },
        {
          "name": "strategy",
          "type": "inventory_strategy",
          "required": true,
          "attributes": [],
          "description": "Type of inventory strategy to be used for this rule",
          "example": "in_stock, backorder"
        }
      ],
      "attributes": [],
      "description": "Ordered list of rules to apply, from first to last, to get available quantity. This is unique per organization"
    },
    {
      "name": "inventory_rule_form",
      "plural": "inventory_rule_forms",
      "fields": [
        {
          "name": "position",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Order in which rule applicability will be checked"
        },
        {
          "name": "query",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Query to be used to apply this rule. Only '*' is available for now, which will apply to all cases",
          "example": "*"
        },
        {
          "name": "strategy",
          "type": "inventory_strategy",
          "required": true,
          "attributes": [],
          "description": "Type of inventory strategy to be used for this rule",
          "example": "in_stock, backorder"
        }
      ],
      "attributes": []
    },
    {
      "name": "inventory_rule_version",
      "plural": "inventory_rule_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "inventory_rule",
          "type": "inventory_rule",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "inventory_snapshot",
      "plural": "inventory_snapshots",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "available",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Actual available quantity for an item at a given center"
        },
        {
          "name": "center",
          "type": "inventory_center_reference",
          "required": true,
          "attributes": [],
          "description": "Location capable of fulfilling a shipment for item in inventory"
        },
        {
          "name": "item",
          "type": "inventory_item_reference",
          "required": true,
          "attributes": [],
          "description": "Client item being stored in inventory"
        },
        {
          "name": "quantity",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Running total of inventory update quantities provided"
        }
      ],
      "attributes": [],
      "description": "Inventory snapshot reflects the current quantity and available number of units for a given center / item"
    },
    {
      "name": "inventory_snapshot_version",
      "plural": "inventory_snapshot_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "inventory_snapshot",
          "type": "inventory_snapshot",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "inventory_stock",
      "plural": "inventory_stocks",
      "fields": [
        {
          "name": "quantity",
          "type": "long",
          "required": true,
          "attributes": [],
          "minimum": 0
        }
      ],
      "attributes": [],
      "description": "Treats inventory as available as long as the actual inventory quantity is > the specified quantity. A common use case is to set quantity to zero to indicate availability as long as there is at least 1 unit available."
    },
    {
      "name": "inventory_unlimited",
      "plural": "inventory_unlimiteds",
      "fields": [
        {
          "name": "quantity",
          "type": "string",
          "required": true,
          "attributes": [],
          "default": "unlimited"
        }
      ],
      "attributes": [],
      "description": "Items affected with rules pursuing an unlimited strategy will always be available"
    },
    {
      "name": "inventory_update",
      "plural": "inventory_updates",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "idempotency_key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "center",
          "type": "inventory_center_reference",
          "required": true,
          "attributes": [],
          "description": "Location capable of fulfilling a shipment for item in inventory"
        },
        {
          "name": "item",
          "type": "inventory_item_reference",
          "required": true,
          "attributes": [],
          "description": "Client item number being stored in inventory"
        },
        {
          "name": "notes",
          "type": "object",
          "required": true,
          "attributes": []
        },
        {
          "name": "quantity",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Amount of the update made"
        },
        {
          "name": "type",
          "type": "update_type",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a single update on inventory quantity"
    },
    {
      "name": "inventory_update_form",
      "plural": "inventory_update_forms",
      "fields": [
        {
          "name": "center",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Center capable of fulfilling a shipment for item in inventory"
        },
        {
          "name": "idempotency_key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "item_number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Summary about the item being kept in inventory"
        },
        {
          "name": "quantity",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Amount of the update to be made"
        },
        {
          "name": "type",
          "type": "update_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "notes",
          "type": "object",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Form used to create an update on inventory. If inventory for center/item has not been previously created, a new row is created for the center/item tuple."
    },
    {
      "name": "inventory_update_version",
      "plural": "inventory_update_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "inventory_update",
          "type": "inventory_update",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "invitation",
      "plural": "invitations",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "organization",
          "type": "expandable_organization",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "email",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The email address to which we send this invitation"
        },
        {
          "name": "name",
          "type": "name",
          "required": true,
          "attributes": []
        },
        {
          "name": "role",
          "type": "role",
          "required": true,
          "attributes": []
        },
        {
          "name": "expiration",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The date / time on which this token expires. Current default is for tokens to live for 1 week"
        }
      ],
      "attributes": [],
      "description": "An invitation via email to a user to join this organization. The user will then walk through a user login/registration process and will immediately become a member of the organization."
    },
    {
      "name": "invitation_accepts_form",
      "plural": "invitation_accepts_forms",
      "fields": [
        {
          "name": "user_id",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "invitation_form",
      "plural": "invitation_forms",
      "fields": [
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "email",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "name",
          "required": false,
          "attributes": []
        },
        {
          "name": "role",
          "type": "role",
          "required": true,
          "attributes": [],
          "default": "member"
        }
      ],
      "attributes": []
    },
    {
      "name": "invitation_version",
      "plural": "invitation_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "invitation",
          "type": "invitation",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "item",
      "plural": "items",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "locale",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "en_US"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "price",
          "type": "price",
          "required": true,
          "attributes": []
        },
        {
          "name": "categories",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "default": "[]"
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": true,
          "attributes": [],
          "default": "{}"
        },
        {
          "name": "dimensions",
          "type": "dimensions",
          "required": true,
          "attributes": []
        },
        {
          "name": "images",
          "type": "[image]",
          "required": true,
          "attributes": [],
          "default": "[]"
        },
        {
          "name": "local",
          "type": "local",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "The Flow item defines a specific item that can be purchased by a consumer. For many clients, this will map to a Sku."
    },
    {
      "name": "item_form",
      "plural": "item_forms",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "locale",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The locale in which the content of this item is written.",
          "example": "en_US"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The customer friendly name of the actual item in the catalog.",
          "example": "Drawstring linen pants"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "example": "usd"
        },
        {
          "name": "price",
          "type": "double",
          "required": true,
          "attributes": [],
          "description": "The actual price of the item as offered to a customer. This price must be in the currency specified for this item."
        },
        {
          "name": "categories",
          "type": "[string]",
          "required": false,
          "attributes": [],
          "description": "A list of categories associated with this item."
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "If provided, the item description is used to improve classification."
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": false,
          "attributes": [],
          "description": "Attributes represent all other product data that you have regarding this item. Common attributes include 'country_of_origin', 'color', 'size', 'material', etc. We recommend including as many attributes as possible, even if you are not currently planning to use them."
        },
        {
          "name": "dimensions",
          "type": "dimensions",
          "required": false,
          "attributes": [],
          "description": "If provided, dimensions are used to drive more accurate shipping estimates."
        },
        {
          "name": "images",
          "type": "[image_form]",
          "required": false,
          "attributes": [],
          "description": "If provided, the item images will be used to enhance the user experience in Flow's online tools."
        }
      ],
      "attributes": [],
      "description": "The item form defines the data required to create an item."
    },
    {
      "name": "item_function",
      "plural": "item_functions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Unique, url friendly key identifying this function"
        },
        {
          "name": "description",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Details of what the item function actually does"
        },
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Item Functions are javascript code used to calculate the localized price of an additional item. Each function can be associated with an optional query identifying the products to which the function applies. Flow selects the first function matching an item, then uses that function to calculate local prices whenever any data relevant to the item changes (e.g. on update in master catalog, on change in relevant exchange rate, etc.). Item functions are immutable once created."
    },
    {
      "name": "item_function_post_form",
      "plural": "item_function_post_forms",
      "fields": [
        {
          "name": "description",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Details of what the item function actually does"
        },
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "key",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Unique key to identify this function. If not specified, generated server side as the lowercase, hex encoded, Sha-256 of the source code itself"
        }
      ],
      "attributes": [],
      "description": "Item Functions are javascript code used to calculate the localized price of an additional item. Each function can be associated with an optional query identifying the products to which the function applies. Flow selects the first function matching an item, then uses that function to calculate local prices whenever any data relevant to the item changes (e.g. on update in master catalog, on change in relevant exchange rate, etc.). Item functions are immutable once created."
    },
    {
      "name": "item_function_put_form",
      "plural": "item_function_put_forms",
      "fields": [
        {
          "name": "description",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Details of what the item function actually does"
        },
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Item Functions are javascript code used to calculate the localized price of an additional item. Each function can be associated with an optional query identifying the products to which the function applies. Flow selects the first function matching an item, then uses that function to calculate local prices whenever any data relevant to the item changes (e.g. on update in master catalog, on change in relevant exchange rate, etc.). Item functions are immutable once created."
    },
    {
      "name": "item_function_reference",
      "plural": "item_function_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "item_function_version",
      "plural": "item_function_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "item_function",
          "type": "item_function",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "item_margin",
      "plural": "item_margins",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "q",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "margin",
          "type": "margin",
          "required": true,
          "attributes": []
        },
        {
          "name": "position",
          "type": "long",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "A list of margin to apply to items based on query."
    },
    {
      "name": "item_margin_form",
      "plural": "item_margin_forms",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "margin",
          "type": "margin",
          "required": true,
          "attributes": []
        },
        {
          "name": "q",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Defaults to matching all items (i.e. '*')"
        },
        {
          "name": "position",
          "type": "long",
          "required": false,
          "attributes": [],
          "description": "Defaults to end of list"
        }
      ],
      "attributes": [],
      "description": "A list of margin to apply to items based on query."
    },
    {
      "name": "item_margin_version",
      "plural": "item_margin_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "item_margin",
          "type": "item_margin",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "item_price_details",
      "plural": "item_price_detailses",
      "fields": [
        {
          "name": "base",
          "type": "price",
          "required": true,
          "attributes": [],
          "description": "The item's base price from the master catalog"
        },
        {
          "name": "local",
          "type": "price",
          "required": true,
          "attributes": [],
          "description": "The item's price in the currency of the experience. If the currency differs, your contracted FX rate with flow is used to convert the base price to the local price."
        },
        {
          "name": "currency_margin",
          "type": "price",
          "required": true,
          "attributes": [],
          "description": "If you have configured FX margin, this will be the total amount of that margin as applied to the conversion from the base to local price."
        },
        {
          "name": "item_margin",
          "type": "price",
          "required": true,
          "attributes": [],
          "description": "The amount of margin from the experience's settings"
        },
        {
          "name": "vat",
          "type": "price",
          "required": true,
          "attributes": [],
          "description": "The total amount of VAT applied. VAT is applied to the item price and optionally to the duty/shipping prices based on the destination country."
        },
        {
          "name": "duty",
          "type": "price",
          "required": true,
          "attributes": [],
          "description": "The total amount of DUTY applied. Duty is applied to the item price and optionally to the shipping prices based on the destination country, and also will take into account deminimus (thus amount may be zero if deminimus applies)."
        },
        {
          "name": "shipping",
          "type": "price",
          "required": true,
          "attributes": [],
          "description": "The total shipping amount"
        },
        {
          "name": "rounding",
          "type": "price",
          "required": true,
          "attributes": [],
          "description": "The amount required to meet the rounding requirements from the experience's settings. For example, if an item price is 121.50, and the rounding setting is up to the nearest '1.00', rounding would return .50 here."
        },
        {
          "name": "total",
          "type": "price",
          "required": true,
          "attributes": [],
          "description": "The total price (local + currency margin + item margin + vat + duty + shipping + rounding)"
        }
      ],
      "attributes": [],
      "description": "Detailed information for the pricing of a given item within an experience"
    },
    {
      "name": "item_statistics",
      "plural": "item_statisticses",
      "fields": [
        {
          "name": "items",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Total number of catalog items available from master catalog"
        },
        {
          "name": "categories",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Distinct number of catalog item categories"
        }
      ],
      "attributes": [],
      "description": "Statistics covering product catalog item information, including total catalog item count, number of distinct categories, etc."
    },
    {
      "name": "item_summary",
      "plural": "item_summaries",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "quantity",
          "type": "long",
          "required": true,
          "attributes": [],
          "minimum": 1
        }
      ],
      "attributes": [],
      "description": "Summary of product line item"
    },
    {
      "name": "item_version",
      "plural": "item_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "item",
          "type": "item",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "label",
      "plural": "labels",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "tracking",
          "type": "tracking_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "status",
          "type": "tracking_status",
          "required": true,
          "attributes": []
        },
        {
          "name": "carrier",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "tracking_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "delivery_estimate",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a specific label being tracked as part of the tracking bucket"
    },
    {
      "name": "label_event",
      "plural": "label_events",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "label",
          "type": "label_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "address",
          "type": "address",
          "required": true,
          "attributes": []
        },
        {
          "name": "status",
          "type": "tracking_status",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "label_event_form",
      "plural": "label_event_forms",
      "fields": [
        {
          "name": "label_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "status",
          "type": "tracking_status",
          "required": true,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "address",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "label_event_summary",
      "plural": "label_event_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "status",
          "type": "tracking_status",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "label_event_version",
      "plural": "label_event_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "label_event",
          "type": "label_event_summary",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "label_form",
      "plural": "label_forms",
      "fields": [
        {
          "name": "tracking_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "status",
          "type": "tracking_status",
          "required": true,
          "attributes": [],
          "default": "pending"
        },
        {
          "name": "carrier",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "tracking_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "delivery_estimate",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": [],
          "description": "Defaults to now() if not provided"
        }
      ],
      "attributes": [],
      "description": "Represents a specific label being tracked as part of the tracking bucket"
    },
    {
      "name": "label_summary",
      "plural": "label_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "tracking",
          "type": "tracking_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "status",
          "type": "tracking_status",
          "required": true,
          "attributes": []
        },
        {
          "name": "carrier",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "tracking_number",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "label_version",
      "plural": "label_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "label",
          "type": "label_summary",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "lane",
      "plural": "lanes",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "service",
          "type": "service",
          "required": true,
          "attributes": []
        },
        {
          "name": "origin",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Origin country for a shipment. The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries."
        },
        {
          "name": "destination",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Destination country for a shipment. The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries"
        },
        {
          "name": "window",
          "type": "estimated_window",
          "required": true,
          "attributes": [],
          "description": "Minimum to maximum amount of time a typical shipment would take",
          "example": "1 to 3 days"
        }
      ],
      "attributes": [],
      "description": "Available origin/destination mapping and available metadata for lanes of a carrier Service. e.g. UPS Ground only US-US, UPS Intl only US-Intl, etc"
    },
    {
      "name": "lane_form",
      "plural": "lane_forms",
      "fields": [
        {
          "name": "service",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Carrier service level associated with this lane"
        },
        {
          "name": "origin_country",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Origin country for a shipment. The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "USA"
        },
        {
          "name": "destination_country",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Destination country for a shipment. The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "USA"
        },
        {
          "name": "window",
          "type": "estimated_window",
          "required": true,
          "attributes": [],
          "description": "Min and max window of delivery for this lane"
        }
      ],
      "attributes": []
    },
    {
      "name": "lane_summary",
      "plural": "lane_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "service",
          "type": "service_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "origin",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Origin country for a shipment. The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries."
        },
        {
          "name": "destination",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Destination country for a shipment. The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries"
        },
        {
          "name": "window",
          "type": "estimated_window",
          "required": true,
          "attributes": [],
          "description": "Minimum to maximum amount of time a typical shipment would take",
          "example": "1 to 3 days"
        }
      ],
      "attributes": []
    },
    {
      "name": "lane_version",
      "plural": "lane_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "lane",
          "type": "lane_summary",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "language",
      "plural": "languages",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "English"
        },
        {
          "name": "iso_639_2",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "en"
        }
      ],
      "attributes": [],
      "description": "ISO 639 2-character language code. See https://api.flow.io/reference/languages"
    },
    {
      "name": "local",
      "plural": "locals",
      "fields": [
        {
          "name": "prices",
          "type": "[localized_price]",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "localized_price",
      "plural": "localized_prices",
      "fields": [
        {
          "name": "key",
          "type": "localized_price_key",
          "required": true,
          "attributes": []
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "amount",
          "type": "double",
          "required": true,
          "attributes": []
        },
        {
          "name": "label",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "margin",
      "plural": "margins",
      "fields": [
        {
          "name": "type",
          "type": "margin_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "value",
          "type": "decimal",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "measurement",
      "plural": "measurements",
      "fields": [
        {
          "name": "value",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "12.23"
        },
        {
          "name": "units",
          "type": "unit_of_measurement",
          "required": true,
          "attributes": [],
          "example": "inch"
        }
      ],
      "attributes": []
    },
    {
      "name": "membership",
      "plural": "memberships",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "organization",
          "type": "expandable_organization",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "user",
          "type": "expandable_user",
          "required": true,
          "attributes": []
        },
        {
          "name": "role",
          "type": "role",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents the users that are part of this organization. Primary purpose is to manage which users have access to the organization's data and to provide a simple user interface to assign roles and permissions to each member of the organization"
    },
    {
      "name": "membership_form",
      "plural": "membership_forms",
      "fields": [
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The id of the organization"
        },
        {
          "name": "user",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The id of the user to add to this organization"
        },
        {
          "name": "role",
          "type": "role",
          "required": true,
          "attributes": [],
          "default": "member"
        }
      ],
      "attributes": [],
      "description": "Top level resource to create a membership."
    },
    {
      "name": "membership_put_form",
      "plural": "membership_put_forms",
      "fields": [
        {
          "name": "role",
          "type": "role",
          "required": true,
          "attributes": [],
          "default": "member"
        }
      ],
      "attributes": [],
      "description": "Top level resource to create a membership."
    },
    {
      "name": "membership_version",
      "plural": "membership_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "membership",
          "type": "membership",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "name",
      "plural": "names",
      "fields": [
        {
          "name": "first",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "last",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "name_form",
      "plural": "name_forms",
      "fields": [
        {
          "name": "first",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "last",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "options",
      "plural": "optionses",
      "fields": [
        {
          "name": "required",
          "type": "boolean",
          "required": true,
          "attributes": [],
          "description": "If true, when you create or update items in Flow, we will validate that data presented contains an attribute with this key.",
          "default": "false",
          "example": "brand"
        },
        {
          "name": "show_in_catalog",
          "type": "boolean",
          "required": true,
          "attributes": [],
          "description": "Flag indicating that a feature is applicable to catalog and can be used in Console",
          "default": "false"
        },
        {
          "name": "show_in_harmonization",
          "type": "boolean",
          "required": true,
          "attributes": [],
          "description": "Flag indicating that a feature is applicable to harmoniztion and can be used in Console",
          "default": "false"
        }
      ],
      "attributes": [],
      "description": "Flags to indicate whether a feature is enabled/disabled on a particular model (e.g. show/do not show attribute as a column in harmonization table view of items)"
    },
    {
      "name": "order",
      "plural": "orders",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "customer",
          "type": "customer",
          "required": true,
          "attributes": [],
          "description": "The customer who is actually making the purchase"
        },
        {
          "name": "expires_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The date and time on which this order will expire unless booked. Used only when the order status is 'open'. New orders will expire 1 hour after creation."
        },
        {
          "name": "destination",
          "type": "address",
          "required": true,
          "attributes": []
        },
        {
          "name": "deliveries",
          "type": "[delivery]",
          "required": true,
          "attributes": [],
          "minimum": 1
        },
        {
          "name": "selections",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "The currently selected delivery option ids. These IDs represent the shipping tiers that the customer has chosen (e.g. standard or express) for each delivery. The shipping price is then based on these selections (and included in the prices array). You can update an order before it has been booked to change the delivery options, getting back accurate pricing for the order.",
          "minimum": 1
        },
        {
          "name": "prices",
          "type": "[localized_price]",
          "required": true,
          "attributes": []
        },
        {
          "name": "total",
          "type": "localized_price",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "An order represents all of the information about a particular line item, including pricing, currency rates, delivery options, etc. All information in an order is guaranteed by Flow - if an order is booked before its expiration. The intended use case is to create an order as a consumer enters checkout, then to book that order in order processing."
    },
    {
      "name": "order_booking",
      "plural": "order_bookings",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "order",
          "type": "order_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "created_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents an order that has been booked. Booked orders can no longer be deleted as they represent transactions in the real world."
    },
    {
      "name": "order_form",
      "plural": "order_forms",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "customer",
          "type": "customer",
          "required": true,
          "attributes": [],
          "description": "The customer who actually is making the purchase"
        },
        {
          "name": "destination",
          "type": "address",
          "required": true,
          "attributes": []
        },
        {
          "name": "items",
          "type": "[item_summary]",
          "required": true,
          "attributes": [],
          "minimum": 1
        }
      ],
      "attributes": [],
      "description": "The order form is used to create an open order, providing the details on pricing and delivery options for destination and items/quantities specified"
    },
    {
      "name": "order_put_form",
      "plural": "order_put_forms",
      "fields": [
        {
          "name": "options",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "Selected list of delivery options for this quote. The original order will contain one or more deliveries. Each delivery will contain one or more shipping options (e.g. standard or express). We need to know which shipping options the user selected in order to provide accurate, local shipping pricing.",
          "minimum": 1
        }
      ],
      "attributes": [],
      "description": "Updates the selections on an order."
    },
    {
      "name": "order_reference",
      "plural": "order_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "order_version",
      "plural": "order_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "order",
          "type": "order",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "organization",
      "plural": "organizations",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "environment",
          "type": "environment",
          "required": true,
          "attributes": []
        },
        {
          "name": "parent",
          "type": "organization_reference",
          "required": false,
          "attributes": [],
          "description": "When creating an organization in the test environment, it is linked to your production organization. This allows you to have as many test organizations as you like."
        }
      ],
      "attributes": [],
      "description": "Represents a single organization in the system, and what environment it is currently operating in."
    },
    {
      "name": "organization_authorization",
      "plural": "organization_authorizations",
      "fields": [
        {
          "name": "role",
          "type": "role",
          "required": true,
          "attributes": []
        },
        {
          "name": "environment",
          "type": "environment",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Defines the data used for broad authorization of user access to org level data"
    },
    {
      "name": "organization_currency_setting",
      "plural": "organization_currency_settings",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "base",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The base currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
        },
        {
          "name": "target",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The target currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
        },
        {
          "name": "margin",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "A percent of the base currency value added to the base currency before conversion."
        }
      ],
      "attributes": [],
      "description": "Represents organization-specific currency conversion adjustments."
    },
    {
      "name": "organization_currency_setting_form",
      "plural": "organization_currency_setting_forms",
      "fields": [
        {
          "name": "base",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The base currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
        },
        {
          "name": "target",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The target currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
        },
        {
          "name": "margin",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "A percent of the base currency value added to the base currency before conversion."
        }
      ],
      "attributes": [],
      "description": "Represents the parts of an organization setting that can be updated."
    },
    {
      "name": "organization_currency_setting_version",
      "plural": "organization_currency_setting_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization_currency_setting",
          "type": "organization_currency_setting",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "organization_form",
      "plural": "organization_forms",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Defaults to a URL safe and unique version of the name",
          "minimum": 3
        },
        {
          "name": "name",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Defaults to the id",
          "minimum": 3
        },
        {
          "name": "environment",
          "type": "environment",
          "required": true,
          "attributes": [],
          "default": "production"
        },
        {
          "name": "parent_id",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "When creating an organization in the test environment, you must specify your production organization id."
        }
      ],
      "attributes": [],
      "description": "Either id or name is required."
    },
    {
      "name": "organization_put_form",
      "plural": "organization_put_forms",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Defaults to the id",
          "minimum": 3
        },
        {
          "name": "environment",
          "type": "environment",
          "required": false,
          "attributes": [],
          "description": "If updating, defaults to the current environment. If creating, defaults to production"
        },
        {
          "name": "parent_id",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "When creating an organization in the test environment, you must specify your production organization id."
        }
      ],
      "attributes": [],
      "description": "Data required to upsert an organization."
    },
    {
      "name": "organization_reference",
      "plural": "organization_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "organization_summary",
      "plural": "organization_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "organization_version",
      "plural": "organization_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "organization",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "oversized_shipment",
      "plural": "oversized_shipments",
      "fields": [
        {
          "name": "weight_threshold",
          "type": "double",
          "required": true,
          "attributes": []
        },
        {
          "name": "weight_unit",
          "type": "unit_of_measurement",
          "required": true,
          "attributes": []
        },
        {
          "name": "percentage",
          "type": "double",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "packaging",
      "plural": "packagings",
      "fields": [
        {
          "name": "dimensions",
          "type": "dimensions",
          "required": true,
          "attributes": [],
          "minimum": 1
        },
        {
          "name": "name",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "User-friendly name for the package. Defaults to concatenation of dimension values. e.g. box-12x4x30"
        },
        {
          "name": "number",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        }
      ],
      "attributes": [],
      "description": "Represents packaging available to ship items"
    },
    {
      "name": "password_change_form",
      "plural": "password_change_forms",
      "fields": [
        {
          "name": "current",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The current valid account password"
        },
        {
          "name": "new",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The new password"
        }
      ],
      "attributes": []
    },
    {
      "name": "password_reset_form",
      "plural": "password_reset_forms",
      "fields": [
        {
          "name": "token",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The token for the password reset request"
        },
        {
          "name": "password",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The new password"
        }
      ],
      "attributes": []
    },
    {
      "name": "password_reset_request_form",
      "plural": "password_reset_request_forms",
      "fields": [
        {
          "name": "email",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "percent_margin",
      "plural": "percent_margins",
      "fields": [
        {
          "name": "percentage",
          "type": "double",
          "required": true,
          "attributes": [],
          "description": "Percentage of the cost to be added to actual cost to get quote amount to show to customer"
        }
      ],
      "attributes": [],
      "description": "Rule outcome where shipping surfaced in quote is actual cost plus a predefined margin percentage"
    },
    {
      "name": "price",
      "plural": "prices",
      "fields": [
        {
          "name": "amount",
          "type": "double",
          "required": true,
          "attributes": []
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "example": "usd"
        },
        {
          "name": "label",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents an amount-currency pair for a basic price"
    },
    {
      "name": "price_equation",
      "plural": "price_equations",
      "fields": [
        {
          "name": "base_price",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The base price of the product."
        },
        {
          "name": "conversion",
          "type": "conversion",
          "required": true,
          "attributes": [],
          "description": "Contains information necessary to convert between currencies."
        },
        {
          "name": "fixed_margin",
          "type": "margin",
          "required": true,
          "attributes": [],
          "description": "A fixed margin used to adjust the cost of the product by a given value."
        },
        {
          "name": "percent_margin",
          "type": "margin",
          "required": true,
          "attributes": [],
          "description": "A relative margin used to adjust the cost of the product by a given percentage."
        },
        {
          "name": "insurance",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The insurance information associated with the product."
        },
        {
          "name": "freight",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The freight information associated with the product."
        },
        {
          "name": "duty",
          "type": "duty",
          "required": true,
          "attributes": [],
          "description": "The duty rate applicable to the product."
        },
        {
          "name": "tax",
          "type": "tax",
          "required": true,
          "attributes": [],
          "description": "The tax rate applicable to the product."
        },
        {
          "name": "rounding",
          "type": "rounding",
          "required": false,
          "attributes": [],
          "description": "Contains information necessary to round the price of the product."
        }
      ],
      "attributes": []
    },
    {
      "name": "price_form",
      "plural": "price_forms",
      "fields": [
        {
          "name": "amount",
          "type": "double",
          "required": true,
          "attributes": []
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "example": "usd"
        }
      ],
      "attributes": [],
      "description": "Amount-currency paid for a basic price to be used in model forms, before a price label is created. Label in the main price model is created by the implementing api."
    },
    {
      "name": "pricing",
      "plural": "pricings",
      "fields": [
        {
          "name": "vat",
          "type": "pricing_levy_setting",
          "required": true,
          "attributes": [],
          "description": "Determines how VAT is treated within this experience - whether it is included in the item price, displayed as a stand alone line item, or ignored - and only used in checkout (see the orders resource)"
        },
        {
          "name": "duty",
          "type": "pricing_levy_setting",
          "required": true,
          "attributes": [],
          "description": "Determines how Duty is treated within this experience - whether it is included in the item price, displayed as a stand alone line item, or ignored - and only used in checkout (see the orders resource)"
        },
        {
          "name": "rounding",
          "type": "rounding",
          "required": false,
          "attributes": [],
          "description": "If specified, we will round prices in this experience"
        }
      ],
      "attributes": [],
      "description": "Pricing determines how the item price is calculated when items are requests via the experience."
    },
    {
      "name": "query",
      "plural": "queries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "q",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "query_type",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a typed query to indicate which items to include or exclude in a subcatalog"
    },
    {
      "name": "query_form",
      "plural": "query_forms",
      "fields": [
        {
          "name": "q",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Query string used to search for items"
        },
        {
          "name": "type",
          "type": "query_type",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Defines a query specifying items to be included or excluded in a subcatalog"
    },
    {
      "name": "quote",
      "plural": "quotes",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "destination",
          "type": "shipping_address",
          "required": true,
          "attributes": []
        },
        {
          "name": "deliveries",
          "type": "[delivery]",
          "required": true,
          "attributes": []
        },
        {
          "name": "selections",
          "type": "[delivery_option_reference]",
          "required": true,
          "attributes": [],
          "description": "Selected options for the quote. This is used to prepare accurate fully-landed costs of an order and can also be used to pre-select a delivery option on a typical checkout page. By default, the option(s) shown here are part of the default tier of an experience. If no default tier has been designated for the tier group, the default selection would be the first option in the list."
        }
      ],
      "attributes": [],
      "description": "Represents a collection of deliveries and available options for fulfillment of that delivery"
    },
    {
      "name": "quote_form",
      "plural": "quote_forms",
      "fields": [
        {
          "name": "destination",
          "type": "shipping_address",
          "required": true,
          "attributes": []
        },
        {
          "name": "experience",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Experience to use for the region of this quote"
        },
        {
          "name": "items",
          "type": "[item_summary]",
          "required": true,
          "attributes": [],
          "minimum": 1
        }
      ],
      "attributes": []
    },
    {
      "name": "quote_summary",
      "plural": "quote_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "destination",
          "type": "shipping_address",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "quote_version",
      "plural": "quote_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "quote",
          "type": "quote_summary",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "rate",
      "plural": "rates",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "base",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The base currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
        },
        {
          "name": "target",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The target currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
        },
        {
          "name": "effective_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The time at which this rate is effective."
        },
        {
          "name": "value",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The actual conversion rate from the base currency to target currency including any applicable margins."
        }
      ],
      "attributes": [],
      "description": "Represents an organization-specific currency conversion rate at a point in time."
    },
    {
      "name": "rate_form",
      "plural": "rate_forms",
      "fields": [
        {
          "name": "base",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The base currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
        },
        {
          "name": "target",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The target currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
        },
        {
          "name": "effective_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The time at which this rate is effective."
        }
      ],
      "attributes": [],
      "description": "Represents the parts of an organization rate that can be updated."
    },
    {
      "name": "rate_version",
      "plural": "rate_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "rate",
          "type": "rate",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "ratecard",
      "plural": "ratecards",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "effective_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "Timestamp when ratecard should become effective in the future."
        },
        {
          "name": "origination_zones",
          "type": "[zone]",
          "required": true,
          "attributes": [],
          "description": "Valid list of origination zones for this ratecard",
          "minimum": 1
        },
        {
          "name": "service",
          "type": "ratecard_service_reference",
          "required": true,
          "attributes": [],
          "description": "Carrier service level. See https://docs.flow.io/services.html",
          "example": "dhl-express-worldwide"
        },
        {
          "name": "published_at",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": [],
          "description": "Timestamp when the ratecard was published and would be used to generate rates. Until this field is filled out, then ratecard is still in draft mode and cannot be used to generate cost estimates."
        }
      ],
      "attributes": [],
      "description": "Snapshot of all lanes and rows across all service levels of an organization"
    },
    {
      "name": "ratecard_estimate",
      "plural": "ratecard_estimates",
      "fields": [
        {
          "name": "service",
          "type": "ratecard_service_reference",
          "required": true,
          "attributes": [],
          "description": "Carrier service used for this estimate",
          "example": "dhl-express-worldwide"
        },
        {
          "name": "shipment_window",
          "type": "shipment_window",
          "required": true,
          "attributes": [],
          "description": "Represents min/max days transit time for a shipment in this estimate"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The base iso_4217_3 currency code as defined in http://reference.api.flow.io/currencies",
          "example": "USD"
        },
        {
          "name": "amount",
          "type": "double",
          "required": true,
          "attributes": [],
          "description": "Base amount for this shipment based on rates on the appropriate lane on the rate card"
        },
        {
          "name": "fees",
          "type": "[ratecard_fee]",
          "required": true,
          "attributes": [],
          "description": "Fees applicable for this estimate"
        },
        {
          "name": "total",
          "type": "double",
          "required": true,
          "attributes": [],
          "description": "Total of the amount plus any applicable fees"
        }
      ],
      "attributes": [],
      "description": "Represents a summary of a cost estimate based on rate card data for an origin/destination and weight, either gravitational or dimensional"
    },
    {
      "name": "ratecard_form",
      "plural": "ratecard_forms",
      "fields": [
        {
          "name": "effective_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The date and time where rates in this lane will take effect and produce shipping estimates."
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "origination_zones",
          "type": "[zone]",
          "required": true,
          "attributes": [],
          "description": "Valid list of origination zones for this ratecard",
          "minimum": 1
        },
        {
          "name": "service",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Carrier service level associated with this"
        }
      ],
      "attributes": []
    },
    {
      "name": "ratecard_lane",
      "plural": "ratecard_lanes",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The base iso_4217_3 currency code as defined in http://reference.api.flow.io/currencies",
          "example": "USD"
        },
        {
          "name": "delivered_duty",
          "type": "delivered_duty",
          "required": true,
          "attributes": []
        },
        {
          "name": "shipment_window",
          "type": "shipment_window",
          "required": true,
          "attributes": []
        },
        {
          "name": "destination",
          "type": "zone",
          "required": true,
          "attributes": []
        },
        {
          "name": "dim_factor",
          "type": "double",
          "required": true,
          "attributes": [],
          "description": "Factor used to compute dimensional weight. Contact your Flow or specific carrier's account representative."
        },
        {
          "name": "fees",
          "type": "[ratecard_fee]",
          "required": true,
          "attributes": []
        },
        {
          "name": "origin",
          "type": "zone",
          "required": true,
          "attributes": []
        },
        {
          "name": "service",
          "type": "ratecard_service_reference",
          "required": true,
          "attributes": [],
          "description": "Carrier service level. See https://docs.flow.io/services.html",
          "example": "dhl-express-worldwide"
        },
        {
          "name": "rates",
          "type": "[ratecard_rate]",
          "required": true,
          "attributes": [],
          "description": "Line item rows on the rate card. Shows a list of weight thresholds and corresponding costs."
        },
        {
          "name": "rounding",
          "type": "rounding",
          "required": true,
          "attributes": []
        },
        {
          "name": "weight_unit",
          "type": "unit_of_measurement",
          "required": true,
          "attributes": [],
          "description": "Type of unit measurement used to calculate gravitational weight",
          "example": "gram, pound"
        },
        {
          "name": "distance_unit",
          "type": "unit_of_measurement",
          "required": true,
          "attributes": [],
          "description": "Type of unit measurement used to calculate dimensional weight",
          "example": "inch, feet"
        }
      ],
      "attributes": [],
      "description": "Describe list of rates applicable for a lane on the ratecard - defined by origin and destination zone"
    },
    {
      "name": "ratecard_lane_form",
      "plural": "ratecard_lane_forms",
      "fields": [
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The base iso_4217_3 currency code as defined in http://reference.api.flow.io/currencies",
          "example": "USD"
        },
        {
          "name": "destination",
          "type": "zone",
          "required": true,
          "attributes": []
        },
        {
          "name": "shipment_window",
          "type": "shipment_window",
          "required": true,
          "attributes": []
        },
        {
          "name": "delivered_duty",
          "type": "delivered_duty",
          "required": true,
          "attributes": []
        },
        {
          "name": "dim_factor",
          "type": "double",
          "required": true,
          "attributes": [],
          "description": "Factor used to compute dimensional weight. Contact your Flow or specific carrier's account representative."
        },
        {
          "name": "fees",
          "type": "[ratecard_fee]",
          "required": true,
          "attributes": []
        },
        {
          "name": "origin",
          "type": "zone",
          "required": true,
          "attributes": []
        },
        {
          "name": "rounding",
          "type": "rounding",
          "required": true,
          "attributes": []
        },
        {
          "name": "rates",
          "type": "[ratecard_rate_form]",
          "required": true,
          "attributes": [],
          "description": "Line item rows on the rate card. Shows a list of weight thresholds and corresponding costs."
        },
        {
          "name": "weight_unit",
          "type": "unit_of_measurement",
          "required": true,
          "attributes": [],
          "description": "Type of unit measurement used to calculate gravitational weight",
          "example": "gram, pound"
        },
        {
          "name": "distance_unit",
          "type": "unit_of_measurement",
          "required": true,
          "attributes": [],
          "description": "Type of unit measurement used to calculate dimensional weight",
          "example": "inch, feet"
        }
      ],
      "attributes": []
    },
    {
      "name": "ratecard_lane_version",
      "plural": "ratecard_lane_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "ratecard_lane",
          "type": "ratecard_lane",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "ratecard_rate",
      "plural": "ratecard_rates",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "amount",
          "type": "double",
          "required": true,
          "attributes": [],
          "description": "Contractual amount for this rate"
        },
        {
          "name": "weight",
          "type": "double",
          "required": true,
          "attributes": [],
          "description": "Minimum weight threshold for this rate"
        }
      ],
      "attributes": [],
      "description": "Specific line item in a ratecard lane with information on a weight threshold and corresponding amount to charge"
    },
    {
      "name": "ratecard_rate_form",
      "plural": "ratecard_rate_forms",
      "fields": [
        {
          "name": "amount",
          "type": "double",
          "required": true,
          "attributes": [],
          "description": "Contractual amount for this rate"
        },
        {
          "name": "weight",
          "type": "double",
          "required": true,
          "attributes": [],
          "description": "Minimum weight threshold for this rate"
        }
      ],
      "attributes": []
    },
    {
      "name": "ratecard_rate_version",
      "plural": "ratecard_rate_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "ratecard_rate",
          "type": "ratecard_rate",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "ratecard_service_reference",
      "plural": "ratecard_service_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "ratecard_version",
      "plural": "ratecard_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "ratecard",
          "type": "ratecard",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "refund",
      "plural": "refunds",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "reference",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Unique client reference number for this refund"
        },
        {
          "name": "capture",
          "type": "capture",
          "required": true,
          "attributes": []
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The amount to refund in the currency of the associated capture",
          "example": "120.38"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "example": "USD"
        }
      ],
      "attributes": [],
      "description": "Refunds are used to issue refunds against a prior capture."
    },
    {
      "name": "refund_form",
      "plural": "refund_forms",
      "fields": [
        {
          "name": "capture_id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ID of the capture against which to issue the refund."
        },
        {
          "name": "reference",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Unique client reference number for this refund"
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": false,
          "attributes": [],
          "description": "The amount to refund, in the currency of the associated capture. Defaults to the value of the capture minus any prior refunds.",
          "example": "120.38"
        },
        {
          "name": "currency",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The ISO 4217-3 code for the currency. Required if amount is specified. Case insensitive. Note you will get an error if the currency does not match the related authrization's currency. See https://api.flow.io/reference/currencies",
          "example": "USD"
        }
      ],
      "attributes": [],
      "description": "Refund actually transfers funds. You can refund as many times as you'd like up until the total amount of the capture has been refunded."
    },
    {
      "name": "refund_version",
      "plural": "refund_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "refund",
          "type": "refund",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "region",
      "plural": "regions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "United States of America"
        },
        {
          "name": "countries",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "A list of the countries in this region",
          "minimum": 1
        },
        {
          "name": "currencies",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "A list of the currencies in this region",
          "minimum": 0
        },
        {
          "name": "languages",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "A list of the languages spoken in this region",
          "minimum": 0
        },
        {
          "name": "measurement_systems",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "A list of the measurement systems in use in this region (metric or imperial)",
          "minimum": 0
        }
      ],
      "attributes": [],
      "description": "A region represents a geographic area of the world. Regions can be countries, continents or other political areas (like the Eurozone)."
    },
    {
      "name": "region_reference",
      "plural": "region_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "rounding",
      "plural": "roundings",
      "fields": [
        {
          "name": "type",
          "type": "rounding_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "method",
          "type": "rounding_method",
          "required": true,
          "attributes": []
        },
        {
          "name": "value",
          "type": "decimal",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "schedule",
      "plural": "schedules",
      "fields": [
        {
          "name": "calendar",
          "type": "calendar",
          "required": false,
          "attributes": [],
          "description": "Operating calendar used by origin center for shipment, if avialable. If not provided, assume they are never open.",
          "example": "Weekdays, 7 days, etc."
        },
        {
          "name": "holiday",
          "type": "holiday_calendar",
          "required": true,
          "attributes": [],
          "description": "Standard holiday set to respect for this schedule",
          "example": "US bank holidays"
        },
        {
          "name": "exception",
          "type": "[exception]",
          "required": true,
          "attributes": [],
          "description": "Holiday calendar used by origin center for shipment, if avialable.",
          "example": "Memorial Day, Independence Day, etc."
        },
        {
          "name": "cutoff",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Daily cutoff time for shipment fulfillment at origin center, if available. 24-hour time",
          "example": "16:45"
        }
      ],
      "attributes": [],
      "description": "Represents operating calendar and holidays of a center"
    },
    {
      "name": "service",
      "plural": "services",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "carrier",
          "type": "carrier",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Specific service rendered by the carrier (fedex ground saturday, ups overnight weekend, etc)"
    },
    {
      "name": "service_form",
      "plural": "service_forms",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Name of the Service",
          "minimum": 3
        },
        {
          "name": "carrier",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Flow ID of carrier using this Service."
        }
      ],
      "attributes": [],
      "description": "Specific service rendered by the carrier (fedex ground saturday, ups overnight weekend, etc)"
    },
    {
      "name": "service_reference",
      "plural": "service_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "service_summary",
      "plural": "service_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "carrier",
          "type": "carrier_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "service_version",
      "plural": "service_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "service",
          "type": "service_summary",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "shipment",
      "plural": "shipments",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "commercial_invoice",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "S3 URL containing generated PDF commercial invoice required for international shipments"
        },
        {
          "name": "destination",
          "type": "shipping_address",
          "required": true,
          "attributes": [],
          "description": "Final destination of this shipment"
        },
        {
          "name": "items",
          "type": "[item_summary]",
          "required": true,
          "attributes": [],
          "description": "Items contained in this shipment"
        },
        {
          "name": "shipment_labels",
          "type": "[shipment_label]",
          "required": true,
          "attributes": [],
          "description": "List of one or more carrier-generated shipping label(s) associated with this shipment"
        },
        {
          "name": "tracking_number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Flow-generated tracking number for use in Flow tracking service. Starts with F70."
        }
      ],
      "attributes": [],
      "description": "Represents a subset of items from an order grouped into a single physical shipment. Flow provides a generated tracking number to track this shipment across multiple possible hops and carriers."
    },
    {
      "name": "shipment_form",
      "plural": "shipment_forms",
      "fields": [
        {
          "name": "destination",
          "type": "shipping_address",
          "required": true,
          "attributes": []
        },
        {
          "name": "items",
          "type": "[item_summary]",
          "required": true,
          "attributes": []
        },
        {
          "name": "shipment_labels",
          "type": "[shipment_label_form]",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a subset of items from an order grouped into a single physical shipment."
    },
    {
      "name": "shipment_label",
      "plural": "shipment_labels",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "service",
          "type": "service_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "tracking_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "window",
          "type": "datetime_range",
          "required": false,
          "attributes": []
        },
        {
          "name": "pdf",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Pre-signed S3 URL containing PDF copy of the shipping label. This is generated asynchronously and may not initially be available."
        },
        {
          "name": "zpl",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Pre-signed S3 URL containing ZPL copy of the shipping label. This is generated asynchronously and may not initially be available."
        }
      ],
      "attributes": [],
      "description": "Top-level information on shipment tracking shipment_label and number"
    },
    {
      "name": "shipment_label_form",
      "plural": "shipment_label_forms",
      "fields": [
        {
          "name": "service",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Service associated with this shipment_label."
        },
        {
          "name": "tracking_number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Carrier-issued reference number used to track a shipment."
        },
        {
          "name": "window",
          "type": "datetime_range",
          "required": false,
          "attributes": [],
          "description": "Carrier-provided information on actual delivery date range."
        },
        {
          "name": "data",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Actual zpl contents of the shipment_label to be generated, if available."
        },
        {
          "name": "shipment",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Shipment ID of the shipment_label, if shipment_label is generated after initial shipment is created"
        }
      ],
      "attributes": [],
      "description": "Top-level information on shipment tracking shipment_label and number"
    },
    {
      "name": "shipment_label_reference",
      "plural": "shipment_label_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "shipment_label_summary",
      "plural": "shipment_label_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "service",
          "type": "service_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "tracking_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "window",
          "type": "datetime_range",
          "required": false,
          "attributes": []
        },
        {
          "name": "pdf",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Pre-signed S3 URL containing PDF copy of the shipping label. This is generated asynchronously and may not initially be available."
        },
        {
          "name": "zpl",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Pre-signed S3 URL containing ZPL copy of the shipping label. This is generated asynchronously and may not initially be available."
        }
      ],
      "attributes": []
    },
    {
      "name": "shipment_label_version",
      "plural": "shipment_label_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "shipment_label",
          "type": "shipment_label_summary",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "shipment_reference",
      "plural": "shipment_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "shipment_summary",
      "plural": "shipment_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "commercial_invoice",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "S3 URL containing generated PDF commercial invoice required for international shipments"
        },
        {
          "name": "destination",
          "type": "shipping_address",
          "required": true,
          "attributes": [],
          "description": "Final destination of this shipment"
        },
        {
          "name": "items",
          "type": "[item_summary]",
          "required": true,
          "attributes": [],
          "description": "Items contained in this shipment"
        },
        {
          "name": "tracking_number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Flow-generated tracking number for use in Flow tracking service. Starts with F70."
        }
      ],
      "attributes": []
    },
    {
      "name": "shipment_version",
      "plural": "shipment_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "shipment",
          "type": "shipment_summary",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "shipment_window",
      "plural": "shipment_windows",
      "fields": [
        {
          "name": "from",
          "type": "long",
          "required": true,
          "attributes": []
        },
        {
          "name": "to",
          "type": "long",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "shipping_address",
      "plural": "shipping_addresses",
      "fields": [
        {
          "name": "contact",
          "type": "contact",
          "required": true,
          "attributes": [],
          "description": "Contact information of entity at the address"
        },
        {
          "name": "location",
          "type": "address",
          "required": true,
          "attributes": [],
          "description": "Attributes of the physical location"
        }
      ],
      "attributes": []
    },
    {
      "name": "spot_rate",
      "plural": "spot_rates",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "effective_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "base",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The base currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
        },
        {
          "name": "target",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The target currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
        },
        {
          "name": "value",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The value of the mid market (interbank) rate."
        }
      ],
      "attributes": []
    },
    {
      "name": "spot_rate_form",
      "plural": "spot_rate_forms",
      "fields": [
        {
          "name": "effective_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "base",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The base currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
        },
        {
          "name": "target",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The target currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
        },
        {
          "name": "value",
          "type": "decimal",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "spot_rate_version",
      "plural": "spot_rate_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "spot_rate",
          "type": "spot_rate",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "subcatalog",
      "plural": "subcatalogs",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "catalog",
          "type": "catalog",
          "required": true,
          "attributes": []
        },
        {
          "name": "settings",
          "type": "subcatalog_settings",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "A configuration with custom query to select a subset of master catalog items for a localized experience"
    },
    {
      "name": "subcatalog_form",
      "plural": "subcatalog_forms",
      "fields": [
        {
          "name": "settings",
          "type": "subcatalog_settings_form",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "subcatalog_function",
      "plural": "subcatalog_functions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "item_function",
          "type": "item_function",
          "required": true,
          "attributes": []
        },
        {
          "name": "q",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Apply this pricing function to the items that match this query"
        },
        {
          "name": "position",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Functions are ordered. Lower position numbers indicate function that should be applied earlier.",
          "minimum": 0
        }
      ],
      "attributes": []
    },
    {
      "name": "subcatalog_function_form",
      "plural": "subcatalog_function_forms",
      "fields": [
        {
          "name": "item_function_id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The Id of the item function to associate with this subcatalog"
        },
        {
          "name": "q",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Optionally apply this pricing function only to the items that match this query. If not specified, the pricing function will apply to all items."
        },
        {
          "name": "position",
          "type": "long",
          "required": false,
          "attributes": [],
          "description": "Functions are ordered. Lower position numbers indicate function that should be applied earlier. Defaults to last in list.",
          "minimum": 0
        }
      ],
      "attributes": []
    },
    {
      "name": "subcatalog_function_version",
      "plural": "subcatalog_function_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "subcatalog_function",
          "type": "subcatalog_function",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "subcatalog_item",
      "plural": "subcatalog_items",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "item",
          "type": "item",
          "required": true,
          "attributes": []
        },
        {
          "name": "item_function",
          "type": "expandable_item_function",
          "required": false,
          "attributes": []
        },
        {
          "name": "item_status",
          "type": "subcatalog_item_status",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents information specific to an item in a given subcatalog"
    },
    {
      "name": "subcatalog_reference",
      "plural": "subcatalog_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "subcatalog_settings",
      "plural": "subcatalog_settings",
      "fields": [
        {
          "name": "update_policy",
          "type": "update_policy",
          "required": true,
          "attributes": [],
          "default": "auto"
        }
      ],
      "attributes": []
    },
    {
      "name": "subcatalog_settings_form",
      "plural": "subcatalog_settings_forms",
      "fields": [
        {
          "name": "update_policy",
          "type": "update_policy",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "subcatalog_statistics",
      "plural": "subcatalog_statisticses",
      "fields": [
        {
          "name": "excluded",
          "type": "item_statistics",
          "required": true,
          "attributes": [],
          "description": "Number of items that are currently excluded in this subcatalog"
        },
        {
          "name": "included",
          "type": "item_statistics",
          "required": true,
          "attributes": [],
          "description": "Total number of catalog items available from master catalog"
        },
        {
          "name": "restricted",
          "type": "item_statistics",
          "required": true,
          "attributes": [],
          "description": "Number of items that are currently restricted in this subcatalog"
        },
        {
          "name": "queue",
          "type": "item_statistics",
          "required": true,
          "attributes": [],
          "description": "Number of items that are currently queued to be added or updated to this subcatalog"
        },
        {
          "name": "catalog",
          "type": "catalog_statistics",
          "required": true,
          "attributes": [],
          "description": "The parent catalog's statistics. Provided here to make summary data easy to compute (e.g. what % of items are in this subcatalog)"
        }
      ],
      "attributes": [],
      "description": "Statistics related to the items in this subcatalog, including item count, number of distinct categories, etc."
    },
    {
      "name": "subcatalog_version",
      "plural": "subcatalog_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "subcatalog",
          "type": "subcatalog",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "suggestion",
      "plural": "suggestions",
      "fields": [
        {
          "name": "label",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The suggestion to display to user"
        },
        {
          "name": "count",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "The number of results for the label"
        }
      ],
      "attributes": []
    },
    {
      "name": "tax",
      "plural": "taxes",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The name of the taxes being applied",
          "example": "VAT, GST + PST, HST"
        },
        {
          "name": "rate",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The combined tax rate",
          "minimum": 0,
          "example": ".35"
        },
        {
          "name": "components",
          "type": "[levy_component]",
          "required": true,
          "attributes": [],
          "description": "The components to which tax is applied.",
          "minimum": 1
        },
        {
          "name": "deminimus",
          "type": "deminimus",
          "required": false,
          "attributes": [],
          "description": "Describes the tax deminimus if there is one for this destination"
        }
      ],
      "attributes": [],
      "description": "Represents a simple model of taxes that apply to a given item / destination."
    },
    {
      "name": "tier",
      "plural": "tiers",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "experience",
          "type": "fulfillment_experience_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "integration",
          "type": "shipment_integration_type",
          "required": true,
          "attributes": [],
          "description": "Type of shipping integration used for this tier."
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "rules",
          "type": "[tier_rule]",
          "required": true,
          "attributes": [],
          "description": "Ordered set of rules for this tier"
        },
        {
          "name": "services",
          "type": "[service]",
          "required": true,
          "attributes": [],
          "description": "Services assocaited with this tier"
        },
        {
          "name": "strategy",
          "type": "tier_strategy",
          "required": true,
          "attributes": [],
          "description": "If multiple available return outcomes for a single tier, strategy picks the top one based on cost or timing."
        },
        {
          "name": "visibility",
          "type": "visibility",
          "required": true,
          "attributes": [],
          "description": "Public or Private. Private ones appear as inactive/disabled to the public"
        }
      ],
      "attributes": [],
      "description": "Service shipping tier available in this tier gorup. e.g. Standard tier, Express tier, Economy tier"
    },
    {
      "name": "tier_default",
      "plural": "tier_defaults",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "default_tier",
          "type": "tier_reference",
          "required": true,
          "attributes": [],
          "description": "Default tier used to populate default quote selections"
        },
        {
          "name": "experience",
          "type": "fulfillment_experience_reference",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Grouping of shipping tiers by experience to provide logical default functionality."
    },
    {
      "name": "tier_default_form",
      "plural": "tier_default_forms",
      "fields": [
        {
          "name": "default_tier",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Default tier ID used to populate default quote selections"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "experience",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Form to set the defualt tier for a given experience"
    },
    {
      "name": "tier_default_version",
      "plural": "tier_default_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "tier_default",
          "type": "tier_default",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "tier_form",
      "plural": "tier_forms",
      "fields": [
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Currency to use for the tier, should be coming from Experience API"
        },
        {
          "name": "experience",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Experience-related data from Experience API needed by shipping tiers"
        },
        {
          "name": "integration",
          "type": "shipment_integration_type",
          "required": true,
          "attributes": [],
          "description": "Type of shipping integration used for this tier."
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "rules",
          "type": "[tier_rule_form]",
          "required": true,
          "attributes": [],
          "description": "Ordered set of rules for this tier"
        },
        {
          "name": "services",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "Services associated with this tier"
        },
        {
          "name": "strategy",
          "type": "tier_strategy",
          "required": true,
          "attributes": [],
          "description": "If multiple available return outcomes for a single tier, strategy picks the top one based on cost or timing."
        },
        {
          "name": "visibility",
          "type": "visibility",
          "required": true,
          "attributes": [],
          "description": "Public or Private. Private ones appear as inactive/disabled to the public"
        }
      ],
      "attributes": [],
      "description": "Service shipping tier available in this tier gorup. e.g. Standard tier, Express tier, Economy tier"
    },
    {
      "name": "tier_reference",
      "plural": "tier_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "tier_rule",
      "plural": "tier_rules",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "position",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Execution position of this rule relative to other rules in the tier. Lower position numbers indicate rules that should be executed earlier.",
          "minimum": 0
        },
        {
          "name": "query",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Search API query",
          "example": "greater_than_or_equal:20USD less_than_or_equal:30USD"
        },
        {
          "name": "outcome",
          "type": "tier_rule_outcome",
          "required": true,
          "attributes": [],
          "description": "Resulting cost function applied if query is met. e.g. service cost, free shipping, flat rate"
        }
      ],
      "attributes": [],
      "description": "System to filter incoming quote for a shipment request based on a query and output corresponding outcomes."
    },
    {
      "name": "tier_rule_form",
      "plural": "tier_rule_forms",
      "fields": [
        {
          "name": "position",
          "type": "long",
          "required": false,
          "attributes": [],
          "description": "Execution position of this rule relative to other rules in the tier. Lower position numbers indicate rules that should be executed earlier. If not specified, we automatically set the position to be last.",
          "minimum": 0
        },
        {
          "name": "query",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "outcome",
          "type": "tier_rule_outcome",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "tier_rule_version",
      "plural": "tier_rule_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "tier_rule",
          "type": "tier_rule",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "tier_summary",
      "plural": "tier_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "experience",
          "type": "fulfillment_experience_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "integration",
          "type": "shipment_integration_type",
          "required": true,
          "attributes": [],
          "description": "Type of shipping integration used for this tier."
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "services",
          "type": "[service_reference]",
          "required": true,
          "attributes": [],
          "description": "Services assocaited with this tier"
        },
        {
          "name": "strategy",
          "type": "tier_strategy",
          "required": true,
          "attributes": [],
          "description": "If multiple available return outcomes for a single tier, strategy picks the top one based on cost or timing."
        },
        {
          "name": "visibility",
          "type": "visibility",
          "required": true,
          "attributes": [],
          "description": "Public or Private. Private ones appear as inactive/disabled to the public"
        }
      ],
      "attributes": []
    },
    {
      "name": "tier_version",
      "plural": "tier_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "tier",
          "type": "tier_summary",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "timezone",
      "plural": "timezones",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "America/New_York"
        },
        {
          "name": "description",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "Coordinated Universal Time"
        },
        {
          "name": "offset",
          "type": "integer",
          "required": true,
          "attributes": [],
          "description": "Minutes offset from GMT",
          "example": "-180, 60"
        }
      ],
      "attributes": [],
      "description": "Time zone data is provided by the public IANA time zone database. See http://www.iana.org/time-zones"
    },
    {
      "name": "token",
      "plural": "tokens",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "user",
          "type": "user_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "partial",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The partial API token",
          "example": "a21TK-XXXXX-lJ38i"
        },
        {
          "name": "created_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The date/time on which this token was created"
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "All of the metadata associated with a given token."
    },
    {
      "name": "token_authentication_form",
      "plural": "token_authentication_forms",
      "fields": [
        {
          "name": "token",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The actual token with which to authenticate"
        }
      ],
      "attributes": [],
      "description": "Used to authenticate a given token."
    },
    {
      "name": "token_form",
      "plural": "token_forms",
      "fields": [
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Used to create a new token for the user authorized by the request. You can only create an API token for your own account."
    },
    {
      "name": "token_reference",
      "plural": "token_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "user",
          "type": "user_reference",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Summary data for a given token"
    },
    {
      "name": "token_version",
      "plural": "token_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "token",
          "type": "token",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "tracking",
      "plural": "trackings",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "status",
          "type": "tracking_status",
          "required": true,
          "attributes": []
        },
        {
          "name": "metadata",
          "type": "object",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Top level tracking information which contains labels. In cases where shipments are re-labeled, you will see multiple labels for each tracking allowing simple access to see where a shipment is - with which carrier and with the local tracking number"
    },
    {
      "name": "tracking_form",
      "plural": "tracking_forms",
      "fields": [
        {
          "name": "status",
          "type": "tracking_status",
          "required": false,
          "attributes": []
        },
        {
          "name": "metadata",
          "type": "object",
          "required": false,
          "attributes": [],
          "description": "Additional reference metadata",
          "example": "{\"order_id\": 123456}"
        }
      ],
      "attributes": [],
      "description": "Top level tracking information which contains labels. In cases where shipments are re-labeled, you will see multiple labels for each tracking allowing simple access to see where a shipment is - with which carrier and with the local tracking number"
    },
    {
      "name": "tracking_summary",
      "plural": "tracking_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "status",
          "type": "tracking_status",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "tracking_version",
      "plural": "tracking_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "tracking",
          "type": "tracking_summary",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "user",
      "plural": "users",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "email",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "If known, the user's primary email address. While in most common cases, we expect users to have email addresses, there are edge cases where it is useful to allow a user to NOT have an email address. For example, users interacting solely from mobile devices, guest user accounts, initial onboarding where email is not known, etc. We think by starting off with an optional primary email address we can support these use cases with very little implementation cost."
        },
        {
          "name": "name",
          "type": "name",
          "required": true,
          "attributes": [],
          "description": "The user's name."
        }
      ],
      "attributes": [],
      "description": "Represents a single user in the system"
    },
    {
      "name": "user_form",
      "plural": "user_forms",
      "fields": [
        {
          "name": "email",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "password",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "name",
          "type": "name_form",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "user_put_form",
      "plural": "user_put_forms",
      "fields": [
        {
          "name": "email",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "name",
          "type": "name_form",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "user_reference",
      "plural": "user_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "user_summary",
      "plural": "user_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "email",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "user_version",
      "plural": "user_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "user",
          "type": "user",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "validation",
      "plural": "validations",
      "fields": [
        {
          "name": "status",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Textual description of whether or not token is valid"
        }
      ],
      "attributes": [],
      "description": "Model used to report whether or not a given token is valid"
    },
    {
      "name": "validation_form",
      "plural": "validation_forms",
      "fields": [
        {
          "name": "token",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The actual token that you are validating"
        }
      ],
      "attributes": [],
      "description": "Defines the payload of a request to validate a token, with primary goal of preventing the token from being included in an HTTP GET."
    },
    {
      "name": "zone",
      "plural": "zones",
      "fields": [
        {
          "name": "province",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "country",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "USA"
        }
      ],
      "attributes": []
    }
  ],
  "resources": [
    {
      "type": "attribute",
      "plural": "attributes",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/attributes",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "key"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[attribute]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "sort_parameter_default"
                ]
              }
            }
          ],
          "description": "Search attributes. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/attributes",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "attribute",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Add attribute",
          "body": {
            "type": "attribute_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/attributes/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "attribute",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific attribute."
        },
        {
          "method": "PUT",
          "path": "/:organization/attributes/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "attribute",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "attribute",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create or update an attribute with the specified key.",
          "body": {
            "type": "attribute_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/attributes/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete an attribute with the specified key."
        },
        {
          "method": "GET",
          "path": "/:organization/attributes/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[attribute_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "path": "/:organization/attributes",
      "description": "An attribute can be configured to be used in different ways throughout Flow. A common example is to identify a meaningful attribute (e.g. brand) that can then be displayed throughout the Flow console."
    },
    {
      "type": "catalog",
      "plural": "catalogs",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/catalog",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "catalog",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific catalog."
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/statistics",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "catalog_statistics",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Get statistics for this organization's catalog."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "path": "/:organization"
    },
    {
      "type": "experience",
      "plural": "experiences",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/experiences",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "name",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "region",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "currency",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "subcatalog",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[experience]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "position"
                  }
                ]
              }
            }
          ],
          "description": "Search experiences. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/experiences",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "experience",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Add experience",
          "body": {
            "type": "experience_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/experiences/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "experience",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific experience."
        },
        {
          "method": "PUT",
          "path": "/:organization/experiences/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "experience",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "experience",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update experience with the specified key, creating if it does not exist.",
          "body": {
            "type": "experience_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/experiences/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete the experience with this key"
        },
        {
          "method": "GET",
          "path": "/:organization/experiences/:key/items/:number/price",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item_price_details",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns detailed information on the pricing of this item within this experience"
        },
        {
          "method": "GET",
          "path": "/:organization/experiences/:key/margins",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[item_margin]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/experiences/:key/margins",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item_margin",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "item_margin_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/experiences/:key/margins/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item_margin",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/experiences/:key/margins/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item_margin",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "item_margin_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/experiences/:key/margins/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/experiences/:key/margins/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[item_margin_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "GET",
          "path": "/:organization/experiences/:key/pricing",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "pricing",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Get the pricing settings for this experience"
        },
        {
          "method": "PUT",
          "path": "/:organization/experiences/:key/pricing",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "pricing",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update the pricing settings for this experience",
          "body": {
            "type": "pricing",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/experiences/items",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "experience",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If specified, we will render the items in the context of the experience with this key."
            },
            {
              "name": "country",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If specified, we will select the experience matching this country. ISO 3166 3 currency code as defined in https://api.flow.io/reference/countries",
              "example": "CAN"
            },
            {
              "name": "ip",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If specified, we will geolocate the user by this IP address, and if successful, select the experience matching the country of the IP address."
            },
            {
              "name": "currency",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Iso 4217 3 currency code as defined in https://api.flow.io/reference/currencies If specified, translate the pricing to this currency. Translation occurs using the current spot rate for this currency from the base currency in the experience."
            },
            {
              "name": "language",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages If specified, translate content to this language (where available)",
              "example": "en"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[item]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "number"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "non-crud",
              "value": {}
            }
          ],
          "description": "Returns localized information about 1 or more items. The items will be localized based on the experience selected by the query parameters in the order of experience, then country, then ip address."
        },
        {
          "method": "GET",
          "path": "/:organization/experiences/items/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "experience",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If specified, we will render the items in the context of the experience with this key."
            },
            {
              "name": "country",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "ip",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "currency",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "language",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages",
              "example": "en"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Returns information about this item localized based on the query parameters"
        },
        {
          "method": "GET",
          "path": "/:organization/experiences/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[experience_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "path": "/:organization/experiences",
      "description": "Experiences define a local experience for a given geographic region"
    },
    {
      "type": "item",
      "plural": "items",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/catalog/items",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Find items with this number. Case insensitive. Exact match",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[item]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "number"
                  }
                ]
              }
            }
          ],
          "description": "Search items. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/catalog/items",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "item",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Add catalog item(s)",
          "body": {
            "type": "item_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/items/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific item."
        },
        {
          "method": "PUT",
          "path": "/:organization/catalog/items/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "item",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update item with the specified number, creating if it does not exist.",
          "body": {
            "type": "item_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/catalog/items/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete the item with this number"
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/items/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to items with any one of these numbers.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[item_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "path": "/:organization/catalog/items",
      "description": "The Flow item defines a specific item that can be purchased by a consumer. For many clients, this will map to a Sku."
    },
    {
      "type": "order",
      "plural": "orders",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/orders",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[order]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Search orders. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/orders",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "experience",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If specified, we will render the items in the context of the experience with this key."
            },
            {
              "name": "country",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If specified, we will select the experience matching this country. ISO 3166 3 currency code as defined in https://api.flow.io/reference/countries",
              "example": "CAN"
            },
            {
              "name": "ip",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If specified, we will geolocate the user by this IP address, and if successful, select the experience matching the country of the IP address."
            },
            {
              "name": "currency",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Iso 4217 3 currency code as defined in https://api.flow.io/reference/currencies If specified, translate the pricing to this currency. Translation occurs using the current spot rate for this currency from the base currency in the experience."
            },
            {
              "name": "language",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages If specified, translate content to this language (where available)",
              "example": "en"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "order",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create an order, using the localized information from the experience selected by the query parameters. Note the order must be booked (see bookings) before its expiration",
          "body": {
            "type": "order_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/orders/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "order",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific order."
        },
        {
          "method": "PUT",
          "path": "/:organization/orders/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "order",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update an order.",
          "body": {
            "type": "order_put_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/orders/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Delete an order. Note that only orders that have not yet been booked may be deleted."
        },
        {
          "method": "PUT",
          "path": "/:organization/orders/:number/bookings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "order_booking",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "order_booking",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Books an order. You will get a validation error if the order has already expired (and a new quote could not be automatically recreated for a lower or same price). This method is idempotent - booking an order a second time has no effect."
        },
        {
          "method": "GET",
          "path": "/:organization/orders/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[order_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each order, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "path": "/:organization/orders",
      "description": "An order represents all of the information about a particular line item, including pricing, currency rates, delivery options, etc. All information in an order is guaranteed by Flow - if an order is booked before its expiration. The intended use case is to create an order as a consumer enters checkout, then to book that order in order processing."
    },
    {
      "type": "subcatalog",
      "plural": "subcatalogs",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[subcatalog]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Search subcatalogs. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/catalog/subcatalogs",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "subcatalog",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Add subcatalog",
          "body": {
            "type": "subcatalog_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "subcatalog",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific subcatalog."
        },
        {
          "method": "PUT",
          "path": "/:organization/catalog/subcatalogs/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "subcatalog",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "subcatalog",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update subcatalog with the specified id, creating if it does not exist.",
          "body": {
            "type": "subcatalog_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/catalog/subcatalogs/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete the subcatalog with this id"
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:id/settings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "subcatalog_settings",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific subcatalog's settings."
        },
        {
          "method": "PUT",
          "path": "/:organization/catalog/subcatalogs/:id/settings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "subcatalog_settings",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update subcatalog settings for the specified subcatalog.",
          "body": {
            "type": "subcatalog_settings_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/exclusions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[item]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  }
                ]
              }
            },
            {
              "name": "non-crud",
              "value": {}
            }
          ],
          "description": "Search exclusions. Always paginated."
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/exclusions/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific exclusion by catalog item number."
        },
        {
          "method": "PUT",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/exclusions/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "item",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Add exclusion"
        },
        {
          "method": "DELETE",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/exclusions/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete an exclusion with this catalog item number"
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/functions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[subcatalog_function]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Gets the ordered list of item functions for this subcatalog"
        },
        {
          "method": "POST",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/functions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "subcatalog_function",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Associates a function with this subcatalog",
          "body": {
            "type": "subcatalog_function_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/functions/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "subcatalog_function",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "DELETE",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/functions/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Deletes the subcatalog item function - note that this removes the association between the function and subcatalog / does not actually delete the function itself."
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/functions/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[subcatalog_function_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/inclusions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[item]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  }
                ]
              }
            },
            {
              "name": "non-crud",
              "value": {}
            }
          ],
          "description": "Search inclusions. Always paginated."
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/inclusions/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific inclusion by catalog item number."
        },
        {
          "method": "PUT",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/inclusions/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "item",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Add inclusion"
        },
        {
          "method": "DELETE",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/inclusions/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete an inclusion with this catalog item number"
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/queries",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "type",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[query]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "type"
                  }
                ]
              }
            },
            {
              "name": "non-crud",
              "value": {}
            }
          ],
          "description": "Search queries. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/queries",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "query",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Add query",
          "body": {
            "type": "query_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/queries/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "query",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific query."
        },
        {
          "method": "DELETE",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/queries/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete a query with this id"
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/statistics",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "subcatalog_statistics",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Get statistics for the specified subcatalog"
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[subcatalog_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "path": "/:organization/catalog/subcatalogs",
      "description": "A configuration with custom query to select a subset of master catalog items for a localized experience"
    },
    {
      "type": "subcatalog_item",
      "plural": "subcatalog_items",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/items",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "item_function"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[subcatalog_item]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Search subcatalog items. Always paginated."
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/items/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "subcatalog_item",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about specific subcatalog items."
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/items/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to items with any one of these numbers.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[subcatalog_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "path": "/:organization/catalog/subcatalogs/:subcatalog_id/items",
      "description": "Represents information specific to an item in a given subcatalog"
    },
    {
      "type": "item_function",
      "plural": "item_functions",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/item-functions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[item_function]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Search item functions. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/item-functions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "item_function",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create item function",
          "body": {
            "type": "item_function_post_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/item-functions/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item_function",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific item function."
        },
        {
          "method": "PUT",
          "path": "/:organization/item-functions/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item_function",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "item_function",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Upsert item function",
          "body": {
            "type": "item_function_put_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/item-functions/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete the item function with this key"
        },
        {
          "method": "GET",
          "path": "/:organization/item-functions/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[item_function_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "pricing"
          }
        }
      ],
      "path": "/:organization/item-functions",
      "description": "Item Functions are javascript code used to calculate the localized price of an additional item. Each function can be associated with an optional query identifying the products to which the function applies. Flow selects the first function matching an item, then uses that function to calculate local prices whenever any data relevant to the item changes (e.g. on update in master catalog, on change in relevant exchange rate, etc.). Item functions are immutable once created."
    },
    {
      "type": "organization_currency_setting",
      "plural": "organization_currency_settings",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/currency/settings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "base",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter by the (case-insensitive) base currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
            },
            {
              "name": "target",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter by the (case-insensitive) target currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[organization_currency_setting]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "base"
                  },
                  {
                    "value": "target"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Search organization currency settings. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/currency/settings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "organization_currency_setting",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create organization currency settings.",
          "body": {
            "type": "organization_currency_setting_form",
            "attributes": []
          }
        },
        {
          "method": "PUT",
          "path": "/:organization/currency/settings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "organization_currency_setting",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "organization_currency_setting",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create organization currency settings, or update if they already exist.",
          "body": {
            "type": "organization_currency_setting_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/currency/settings/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[organization_currency_setting_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "base"
                  },
                  {
                    "value": "target"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "pricing"
          }
        }
      ],
      "path": "/:organization/currency/settings",
      "description": "Represents organization-specific currency conversion adjustments."
    },
    {
      "type": "rate",
      "plural": "rates",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/currency/rates",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "base",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more (case-insensitive) base currency ISO 4217 3-character codes, as defined in https://api.flow.io/reference/currencies"
            },
            {
              "name": "target",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter by the (case-insensitive) target currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[rate]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "base"
                  },
                  {
                    "value": "target"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Search organization currency conversion rates. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/currency/rates",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "rate",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a currency conversion rate for an organization.",
          "body": {
            "type": "rate_form",
            "attributes": []
          }
        },
        {
          "method": "PUT",
          "path": "/:organization/currency/rates",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "rate",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "rate",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a currency conversion rate for an organization, or update the rate if it already exists.",
          "body": {
            "type": "rate_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/currency/rates/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "base",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter by the (case-insensitive) base currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
            },
            {
              "name": "target",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter by the (case-insensitive) target currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[rate_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "base"
                  },
                  {
                    "value": "target"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "pricing"
          }
        }
      ],
      "path": "/:organization/currency/rates",
      "description": "Represents an organization-specific currency conversion rate at a point in time."
    },
    {
      "type": "spot_rate",
      "plural": "spot_rates",
      "operations": [
        {
          "method": "GET",
          "path": "/spot_rates",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "base",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter by the (case-insensitive) base currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
            },
            {
              "name": "target",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter by the (case-insensitive) target currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[spot_rate]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "base"
                  },
                  {
                    "value": "target"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Search spot rates. Always paginated."
        },
        {
          "method": "GET",
          "path": "/spot_rates/versions",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[spot_rate_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "base"
                  },
                  {
                    "value": "target"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "pricing"
          }
        }
      ],
      "path": "/spot_rates"
    },
    {
      "type": "duty",
      "plural": "duties",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/harmonization/duties/:origin",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "origin",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "The ISO 3166 3 character code for country of origin",
              "minimum": 3,
              "maximum": 3,
              "example": "chn"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Query",
              "required": true
            },
            {
              "name": "address",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "22 Hudson Pl, Hoboken NJ 07030 USA"
            },
            {
              "name": "ip",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "latitude",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "longitude",
              "type": "string",
              "location": "Query",
              "required": false
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "duty",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "Common error would be that we were unable to resolve the destination using the provided parameters (e.g. address, latitude, longitude or ip address)"
            }
          ],
          "attributes": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "landed cost"
          }
        }
      ],
      "path": "/:organization/harmonization/duties/:origin"
    },
    {
      "type": "harmonization_settings",
      "plural": "harmonization_settings",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/harmonization/settings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "harmonization_settings",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/harmonization/settings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "harmonization_settings",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "harmonization_settings_form",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "landed cost"
          }
        }
      ],
      "path": "/:organization/harmonization/settings",
      "description": "Organization level settings."
    },
    {
      "type": "harmonized_item",
      "plural": "harmonized_items",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/harmonization/items",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[harmonized_item]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/harmonization/items",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "harmonized_item",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "harmonized_item_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/harmonization/items/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "harmonized_item",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/harmonization/items/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "harmonized_item",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "harmonized_item",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create or update an item to harmonize",
          "body": {
            "type": "harmonized_item_put_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/harmonization/items/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/harmonization/items/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "item_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to items with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[harmonized_item_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "item_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "landed cost"
          }
        }
      ],
      "path": "/:organization/harmonization/items",
      "description": "A harmonized item stores explicit information about this item for the purposes of harmonization / classification. The harmonization process begins by creating a harmonized item; this kicks off the internal processes. Once assigned, codes will be available via the hs6 and hs10 resources"
    },
    {
      "type": "harmonized_item_duty",
      "plural": "harmonized_item_duties",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/harmonization/item-duties",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "origin",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "The ISO 3166 3 character country code of the country of origin"
            },
            {
              "name": "destination",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "The ISO 3166 3 character country code of the destination country"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[harmonized_item_duty]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "origin"
                  },
                  {
                    "value": "destination"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/harmonization/item-duties",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "harmonized_item_duty",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "harmonized_item_duty_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/harmonization/item-duties/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "harmonized_item_duty",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "DELETE",
          "path": "/:organization/harmonization/item-duties/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/harmonization/item-duties/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "harmonized_item_duty_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to item duties with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[harmonized_item_duty_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "harmonized_item_duty_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "landed cost"
          }
        }
      ],
      "path": "/:organization/harmonization/item-duties",
      "description": "Used to specifically set an item's duty rate for a given trade lane."
    },
    {
      "type": "harmonized_landed_cost",
      "plural": "harmonized_landed_costs",
      "operations": [
        {
          "method": "POST",
          "path": "/:organization/harmonization/landed-costs",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "harmonized_landed_cost",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Single operation that provides harmonization landed costs (i.e. duties and taxes) for 1 or more items. This method is designed to enable a single call from applications that need it (like checkout) to get all data for a collection of items",
          "body": {
            "type": "harmonized_landed_cost_form",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "landed cost"
          }
        }
      ],
      "path": "/:organization/harmonization/landed-costs",
      "description": "Summary of landed cost data (taxes and duties) for 1 or more items going to a single destination country. Records are unique based on (item.number, country of origin)."
    },
    {
      "type": "hs10",
      "plural": "hs10",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/harmonization/hs10",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "item_number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "origin",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "The ISO 3166 3 character country code of the destination country"
            },
            {
              "name": "destination",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "The ISO 3166 3 character country code of the destination country"
            },
            {
              "name": "code",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter to records matching this HS-10 code"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[hs10]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "item_number"
                  },
                  {
                    "value": "origin"
                  },
                  {
                    "value": "destination"
                  },
                  {
                    "value": "code"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "GET",
          "path": "/:organization/harmonization/hs10/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "hs10_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to HS-10s with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[hs10_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "hs10_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "landed cost"
          }
        }
      ],
      "path": "/:organization/harmonization/hs10",
      "description": "API to fetch HS-10 codes assigned to your items. Note that if your item has been classified multiple times or its classification has changed, this API will provide you with the most recent harmonization code for that item. That is, each code is unique across your item number, country of origin and destination."
    },
    {
      "type": "hs6",
      "plural": "hs6",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/harmonization/hs6",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "item_number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "code",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter to records matching this HS-6 code"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[hs6]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "item_number"
                  },
                  {
                    "value": "code"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "GET",
          "path": "/:organization/harmonization/hs6/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "hs6_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to HS-6s with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[hs6_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "hs6_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "landed cost"
          }
        }
      ],
      "path": "/:organization/harmonization/hs6",
      "description": "API to fetch HS-6 codes assigned to your items. Note that if your item has been classified multiple times or its classification has changed, this API will provide you with the most recent harmonization code for that item."
    },
    {
      "type": "tax",
      "plural": "taxes",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/harmonization/taxes",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "address",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "22 Hudson Pl, Hoboken NJ 07030 USA"
            },
            {
              "name": "ip",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "latitude",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "longitude",
              "type": "string",
              "location": "Query",
              "required": false
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "tax",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "Common error would be that we were unable to resolve the destination using the provided parameters (e.g. address, latitude, longitude or ip address)"
            }
          ],
          "attributes": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "landed cost"
          }
        }
      ],
      "path": "/:organization/harmonization/taxes"
    },
    {
      "type": "authorization",
      "plural": "authorizations",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/authorizations",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "reference",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[authorization]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "reference"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/authorizations",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "authorization",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a new authorization.",
          "body": {
            "type": "authorization_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/authorizations/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "authorization",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific authorization."
        },
        {
          "method": "DELETE",
          "path": "/:organization/authorizations/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Deletes a given authorization. This method will return a 422 if funds have already been captured."
        },
        {
          "method": "GET",
          "path": "/:organization/authorizations/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "authorization_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to authorizations with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[authorization_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "authorization_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "payment"
          }
        }
      ],
      "path": "/:organization/authorizations",
      "description": "An authorization is used to check and reserve funds w/ a given payment method. No funds are actually transferred; once you have you an authorization, you can capture up to the amount of the authorization."
    },
    {
      "type": "capture",
      "plural": "captures",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/captures",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "reference",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "authorization_id",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "authorization_reference",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[capture]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "reference"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/captures",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "capture",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a new capture.",
          "body": {
            "type": "capture_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/captures/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "capture",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific capture."
        },
        {
          "method": "GET",
          "path": "/:organization/captures/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "capture_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to captures with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[capture_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "capture_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "payment"
          }
        }
      ],
      "path": "/:organization/captures",
      "description": "Capture actually transfers funds. You can capture as many times as you'd like up until the total amount of the authorization has been captured or the authorization otherwise becomes unavailable (e.g. expires)."
    },
    {
      "type": "card",
      "plural": "cards",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/cards",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[card]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "sort_parameter_default"
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/cards",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "card",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a new card.",
          "body": {
            "type": "card_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/cards/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "card",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific card."
        },
        {
          "method": "DELETE",
          "path": "/:organization/cards/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Deletes the card with the specified ID."
        },
        {
          "method": "POST",
          "path": "/:organization/cards/:id/updates",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "card",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Updates are implemented as copy on write. This method is a convenience method that will transactionally DELETE the card with the specified ID, then CREATE a new card with the data from this request. Note that this means the returned credit card token will be DIFFERENT from the one used in the request.",
          "body": {
            "type": "card_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/cards/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "card_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to cards with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[card_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "card_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "payment"
          }
        }
      ],
      "path": "/:organization/cards",
      "description": "Card represents the metadata about a secure, tokenized card. The card 'id' is a unique, cryptographically secure token by which this card can be identified in the future."
    },
    {
      "type": "refund",
      "plural": "refunds",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/refunds",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "reference",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "authorization_id",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "authorization_reference",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "capture_id",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "capture_reference",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[refund]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "reference"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/refunds",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "refund",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a new refund.",
          "body": {
            "type": "refund_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/refunds/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "refund",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific refund."
        },
        {
          "method": "GET",
          "path": "/:organization/refunds/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "refund_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to refunds with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[refund_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "refund_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "payment"
          }
        }
      ],
      "path": "/:organization/refunds",
      "description": "Refunds are used to issue refunds against a prior capture."
    },
    {
      "type": "booking",
      "plural": "bookings",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/bookings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[booking]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/bookings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "booking",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "booking_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/bookings/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "booking",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/bookings/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "booking",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[booking_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "booking"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/bookings",
      "description": "Represents second step of two-step purchase of Flow services."
    },
    {
      "type": "carrier",
      "plural": "carriers",
      "operations": [
        {
          "method": "GET",
          "path": "/carriers",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[carrier]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/carriers",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "carrier",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "carrier_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/carriers/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "carrier",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/carriers/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "carrier",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "carrier",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "carrier_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/carriers/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "[error]",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/carriers/versions",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "carrier",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[carrier_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "carrier"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/carriers",
      "description": "Partner that actually take a shipment between places (ex: FedEx, DHL, SF Express)"
    },
    {
      "type": "carrier_account",
      "plural": "carrier_accounts",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/carrier_accounts",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "name",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[carrier_account]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/carrier_accounts",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "carrier_account",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "carrier_account_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/carrier_accounts/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "carrier_account",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/carrier_accounts/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "carrier_account",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "carrier_account",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "carrier_account_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/carrier_accounts/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/carrier_accounts/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "carrier_account",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[carrier_account_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "carrier_account"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/carrier_accounts",
      "description": "carrier_account an organization has with a carrier. A carrier can have multiple carrier_accounts with a single carrier. This represents the many-to-many relationship between organizations and carriers."
    },
    {
      "type": "center",
      "plural": "centers",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/centers",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[center]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/centers",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "center",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "center_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/centers/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "center",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/centers/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "center",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "center",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "center_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/centers/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/centers/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "center",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[center_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "center"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/centers",
      "description": "Represents a facility capable of fulfilling a shipment"
    },
    {
      "type": "delivery_window",
      "plural": "delivery_windows",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/delivery-windows/summary",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier",
              "example": "some-org-key"
            },
            {
              "name": "strategy",
              "type": "strategy",
              "location": "Query",
              "required": true,
              "default": "range",
              "example": "range,from,to"
            },
            {
              "name": "center",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "ctr-20150101-101"
            },
            {
              "name": "origin",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "22 Hudson Pl, Hoboken NJ 07030 USA"
            },
            {
              "name": "destination",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "22 Hudson Pl, Hoboken NJ 07030 USA"
            },
            {
              "name": "ip",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "68.192.179.190"
            },
            {
              "name": "latitude",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "40.76955"
            },
            {
              "name": "longitude",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "-74.02042"
            },
            {
              "name": "service",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "ups-ground, dhl-express-worldwide"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "delivery_window",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "Unable to resolve delivery window based on parameter entries"
            }
          ],
          "attributes": [],
          "description": "Endpoint to request a delivery window. Requires some knowledge of origin (based on organization, center, or specified address string) and destination (based on ip, lat/long, or address string). Other attributes allow us to narrow down delivery windows even more such as service level to be used and timestamp of expected shipment date."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/delivery-windows"
    },
    {
      "type": "inventory_rule",
      "plural": "inventory_rules",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/inventory_rules",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[inventory_rule]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/inventory_rules",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "inventory_rule",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "inventory_rule_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/inventory_rules/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[inventory_rule_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/inventory_rules",
      "description": "Ordered list of rules to apply, from first to last, to get available quantity. This is unique per organization"
    },
    {
      "type": "inventory_snapshot",
      "plural": "inventory_snapshots",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/inventory_snapshots",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "center",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "item_number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[inventory_snapshot]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "center"
                  },
                  {
                    "value": "item_number"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "GET",
          "path": "/:organization/inventory_snapshots/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "inventory_snapshot",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/inventory_snapshots/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "inventory_snapshot",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[inventory_snapshot_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "inventory_snapshot"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/inventory_snapshots",
      "description": "Inventory snapshot reflects the current quantity and available number of units for a given center / item"
    },
    {
      "type": "inventory_update",
      "plural": "inventory_updates",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/inventory_updates",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "center",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "item_number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[inventory_update]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "center"
                  },
                  {
                    "value": "item_number"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/inventory_updates",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "inventory_update",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "inventory_update_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/inventory_updates/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "inventory_update",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/inventory_updates/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "inventory_update",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[inventory_update_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "inventory_update"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/inventory_updates",
      "description": "Represents a single update on inventory quantity"
    },
    {
      "type": "label",
      "plural": "labels",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/labels",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "tracking_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[label]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "tracking_id"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/labels",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "label",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "label_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/labels/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "label",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/labels/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "label_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[label_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "label_id"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/labels",
      "description": "Represents a specific label being tracked as part of the tracking bucket"
    },
    {
      "type": "label_event",
      "plural": "label_events",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/label_events",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "tracking_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "label_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[label_event]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "tracking_id"
                  },
                  {
                    "value": "label_id"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "GET",
          "path": "/:organization/label_events/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "label_event",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/label_events/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "label_event_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[label_event_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "label_event_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/label_events"
    },
    {
      "type": "lane",
      "plural": "lanes",
      "operations": [
        {
          "method": "GET",
          "path": "/lanes",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "origin",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "destination",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[lane]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/lanes",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "lane",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "lane_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/lanes/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "lane",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/lanes/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "lane",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "lane",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "lane_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/lanes/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/lanes/versions",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "lane",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[lane_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "lane"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/lanes",
      "description": "Available origin/destination mapping and available metadata for lanes of a carrier Service. e.g. UPS Ground only US-US, UPS Intl only US-Intl, etc"
    },
    {
      "type": "quote",
      "plural": "quotes",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/quotes",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[quote]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            }
          ],
          "description": "Search quotes. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/quotes",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "quote",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "quote_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/quotes/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "quote",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/quotes/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "quote",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[quote_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "quote"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/quotes",
      "description": "Represents a collection of deliveries and available options for fulfillment of that delivery"
    },
    {
      "type": "ratecard",
      "plural": "ratecards",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/ratecards",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "service",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[ratecard]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "service"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/ratecards",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "ratecard",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "ratecard_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/ratecards/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "ratecard",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/ratecards/:id/publish",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "ratecard",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "ratecard",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/ratecards/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[ratecard_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/ratecards",
      "description": "Snapshot of all lanes and rows across all service levels of an organization"
    },
    {
      "type": "ratecard_estimate",
      "plural": "ratecard_estimates",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/ratecard_estimates",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "origin",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
              "example": "USA"
            },
            {
              "name": "destination",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
              "example": "CHN"
            },
            {
              "name": "weight_unit",
              "type": "unit_of_measurement",
              "location": "Query",
              "required": false,
              "description": "Type of unit measurement used to calculate gravitational weight",
              "example": "pound, kilogram"
            },
            {
              "name": "distance_unit",
              "type": "unit_of_measurement",
              "location": "Query",
              "required": false,
              "description": "Type of unit measurement used to calculate dimensional weight",
              "example": "inch, centimeter"
            },
            {
              "name": "service",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Carrier service level to use",
              "example": "ups-ground, dhl-express-worldwide"
            },
            {
              "name": "weight",
              "type": "double",
              "location": "Query",
              "required": false,
              "description": "Part of gravitational weight calculation"
            },
            {
              "name": "length",
              "type": "double",
              "location": "Query",
              "required": false,
              "description": "Part of dimensional weight calculation"
            },
            {
              "name": "width",
              "type": "double",
              "location": "Query",
              "required": false,
              "description": "Part of dimensional weight calculation"
            },
            {
              "name": "depth",
              "type": "double",
              "location": "Query",
              "required": false,
              "description": "Part of dimensional weight calculation"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[ratecard_estimate]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "total"
                  }
                ]
              }
            },
            {
              "name": "non-crud",
              "value": {}
            }
          ],
          "description": "Endpoint to get shipment cost estimates based on applicable rate cards. An origin and destination address must be provided. Final amounts are based on either gravitational weight or dimensional weight. When estimating based off gravitational weight, the weight field must be set. When estimating based off dimensional weight, then length/width/depth must be set. For either one, the appropriate unit of measurement must be given."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/ratecard_estimates",
      "description": "Represents a summary of a cost estimate based on rate card data for an origin/destination and weight, either gravitational or dimensional"
    },
    {
      "type": "ratecard_lane",
      "plural": "ratecard_lanes",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/ratecards/:ratecard_id/lanes",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "ratecard_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "origin",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "destination",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[ratecard_lane]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "destination"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/ratecards/:ratecard_id/lanes",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "ratecard_id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "ratecard_lane",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "ratecard_lane_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/ratecards/:ratecard_id/lanes/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "ratecard_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "ratecard_lane",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/ratecards/:ratecard_id/lanes/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "ratecard_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "ratecard_lane",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "ratecard_lane",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "ratecard_lane_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/ratecards/:ratecard_id/lanes/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "ratecard_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[ratecard_lane_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/ratecards/:ratecard_id/lanes",
      "description": "Describe list of rates applicable for a lane on the ratecard - defined by origin and destination zone"
    },
    {
      "type": "ratecard_rate",
      "plural": "ratecard_rates",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/ratecards/:ratecard_id/lanes/:lane_id/rates",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "ratecard_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "lane_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "weight",
              "type": "[double]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[ratecard_rate]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "weight"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/ratecards/:ratecard_id/lanes/:lane_id/rates",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "ratecard_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "lane_id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "ratecard_rate",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "ratecard_rate_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/ratecards/:ratecard_id/lanes/:lane_id/rates/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "ratecard_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "lane_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "ratecard_rate",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/ratecards/:ratecard_id/lanes/:lane_id/rates/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "ratecard_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "lane_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "ratecard_rate",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "ratecard_rate",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "ratecard_lane_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/ratecards/:ratecard_id/lanes/:lane_id/rates/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "ratecard_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "lane_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[ratecard_rate_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/ratecards/:ratecard_id/lanes/:lane_id/rates",
      "description": "Specific line item in a ratecard lane with information on a weight threshold and corresponding amount to charge"
    },
    {
      "type": "service",
      "plural": "services",
      "operations": [
        {
          "method": "GET",
          "path": "/services",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[service]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/services",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "service",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "service_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/services/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "service",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/services/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "service",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "service",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "service_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/services/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/services/versions",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "service",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[service_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "service"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/services",
      "description": "Specific service rendered by the carrier (fedex ground saturday, ups overnight weekend, etc)"
    },
    {
      "type": "shipment",
      "plural": "shipments",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/shipments",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[shipment]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/shipments",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "shipment",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "shipment_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/shipments/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "shipment",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/shipments/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[shipment_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/shipments",
      "description": "Represents a subset of items from an order grouped into a single physical shipment. Flow provides a generated tracking number to track this shipment across multiple possible hops and carriers."
    },
    {
      "type": "shipment_label",
      "plural": "shipment_labels",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/shipments/:tracking_number/labels",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "tracking_number",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[shipment_label]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/shipments/:tracking_number/labels",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "tracking_number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "shipment_label",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "shipment_label_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/shipments/:tracking_number/labels/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "tracking_number",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[shipment_label_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/shipments/:tracking_number/labels",
      "description": "Top-level information on shipment tracking shipment_label and number"
    },
    {
      "type": "tier",
      "plural": "tiers",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/tiers",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "experience",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[tier]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/tiers",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "tier",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "tier_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/tiers/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "tier",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/tiers/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "tier",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "tier",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "tier_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/tiers/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/tiers/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "tier",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[tier_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "tier"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/tiers",
      "description": "Service shipping tier available in this tier gorup. e.g. Standard tier, Express tier, Economy tier"
    },
    {
      "type": "tier_default",
      "plural": "tier_defaults",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/tier_defaults",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "experience",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[tier_default]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "experience"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/tier_defaults",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "tier_default",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "tier_default_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/tier_defaults/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "tier_default",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/tier_defaults/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "tier_default",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[tier_default_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "tier_default"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/tier_defaults",
      "description": "Grouping of shipping tiers by experience to provide logical default functionality."
    },
    {
      "type": "tier_rule",
      "plural": "tier_rules",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/tiers/:tier_id/rules",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "tier_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[tier_rule]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/tiers/:tier_id/rules",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "tier_id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "tier_rule",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "tier_rule_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/tiers/:tier_id/rules/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "tier_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "tier_rule",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/tiers/:tier_id/rules/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "tier_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "tier_rule",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "tier_rule",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "tier_rule_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/tiers/:tier_id/rules/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "tier_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/tiers/:tier_id/rules/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "tier_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "tier_rule",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[tier_rule_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "tier_rule"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/tiers/:tier_id/rules",
      "description": "System to filter incoming quote for a shipment request based on a query and output corresponding outcomes."
    },
    {
      "type": "tracking",
      "plural": "trackings",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/trackings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[tracking]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/trackings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "tracking",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "tracking_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/trackings/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "tracking",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/trackings/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "tracking_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[tracking_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "tracking_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/trackings",
      "description": "Top level tracking information which contains labels. In cases where shipments are re-labeled, you will see multiple labels for each tracking allowing simple access to see where a shipment is - with which carrier and with the local tracking number"
    },
    {
      "type": "address",
      "plural": "addresses",
      "operations": [
        {
          "method": "GET",
          "path": "/addresses",
          "parameters": [
            {
              "name": "address",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "22 Hudson Pl, Hoboken NJ 07030 USA"
            },
            {
              "name": "ip",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "96.242.151.245"
            },
            {
              "name": "latitude",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "longitude",
              "type": "string",
              "location": "Query",
              "required": false
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[address]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Geolocates the request based on the provided parameters, returning a list of potential matching addresses."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "geolocation"
          }
        }
      ],
      "path": "/addresses"
    },
    {
      "type": "country",
      "plural": "countries",
      "operations": [
        {
          "method": "GET",
          "path": "/reference/countries",
          "parameters": [
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Free text search for a single matching country. Can be the 2 or 3 character code or the name of the country. Case insensitive"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[country]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [],
          "description": "Returns a list of countries."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "reference"
          }
        }
      ],
      "path": "/reference/countries"
    },
    {
      "type": "currency",
      "plural": "currencies",
      "operations": [
        {
          "method": "GET",
          "path": "/reference/currencies",
          "parameters": [
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Free text search for a single matching currency. Can be the code or the name of the currency. Case insensitive"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[currency]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [],
          "description": "Returns a list of currencies."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "reference"
          }
        }
      ],
      "path": "/reference/currencies",
      "description": "ISO 4217 3-character currency code. See https://api.flow.io/reference/currencies"
    },
    {
      "type": "language",
      "plural": "languages",
      "operations": [
        {
          "method": "GET",
          "path": "/reference/languages",
          "parameters": [
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Free text search for a single matching language. Can be the code or the name of the language. Case insensitive"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[language]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [],
          "description": "Returns a list of languages."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "reference"
          }
        }
      ],
      "path": "/reference/languages",
      "description": "ISO 639 2-character language code. See https://api.flow.io/reference/languages"
    },
    {
      "type": "region",
      "plural": "regions",
      "operations": [
        {
          "method": "GET",
          "path": "/reference/regions",
          "parameters": [
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Free text search on name for a single matching region. Case insensitive"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[region]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [],
          "description": "Returns a list of regions."
        },
        {
          "method": "GET",
          "path": "/reference/regions/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "region",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns the region with the specifed id."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "reference"
          }
        }
      ],
      "path": "/reference/regions",
      "description": "A region represents a geographic area of the world. Regions can be countries, continents or other political areas (like the Eurozone)."
    },
    {
      "type": "timezone",
      "plural": "timezones",
      "operations": [
        {
          "method": "GET",
          "path": "/reference/timezones",
          "parameters": [
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Free text search on name for a single matching timezone. Case insensitive"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[timezone]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [],
          "description": "Returns a list of timezones."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "reference"
          }
        }
      ],
      "path": "/reference/timezones",
      "description": "Time zone data is provided by the public IANA time zone database. See http://www.iana.org/time-zones"
    },
    {
      "type": "document",
      "plural": "documents",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/search/catalog",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "gucci category:handbag price:10"
            },
            {
              "name": "experience",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "attributes",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[catalog_item_document]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "name",
                    "default": true
                  },
                  {
                    "value": "categories"
                  },
                  {
                    "value": "experience"
                  }
                ]
              }
            }
          ],
          "description": "Returns items based on search criteria"
        },
        {
          "method": "GET",
          "path": "/:organization/search/harmonization",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "gucci category:handbag price:10"
            },
            {
              "name": "destination",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "ISO 3166 3-character country code. See https://api.flow.io/reference/countries",
              "example": "USA"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[harmonization_document]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "code"
                  },
                  {
                    "value": "categories"
                  },
                  {
                    "value": "origin"
                  }
                ]
              }
            }
          ],
          "description": "Returns harmonization information based on search criteria"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/search"
    },
    {
      "type": "email_verification",
      "plural": "email_verifications",
      "operations": [
        {
          "method": "POST",
          "path": "/users/emails/verifications/:token",
          "parameters": [
            {
              "name": "token",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "The unique token sent to the user to verify their email address"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "email_verification",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/users/emails/verifications",
      "description": "Represents the successful response of an email verification token. We return the email address in this case to allow the UI to display which email address was verified."
    },
    {
      "type": "healthcheck",
      "plural": "healthchecks",
      "operations": [
        {
          "method": "GET",
          "path": "/_internal_/healthcheck",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "healthcheck",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/_internal_"
    },
    {
      "type": "invitation",
      "plural": "invitations",
      "operations": [
        {
          "method": "GET",
          "path": "/invitations",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "organization",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find invitations for this organization"
            },
            {
              "name": "email",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find invitations for this email"
            },
            {
              "name": "token",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find invitation for this token"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "organization"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[invitation]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "organization"
                  },
                  {
                    "value": "email"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Search invitations. Always paginated."
        },
        {
          "method": "POST",
          "path": "/invitations",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "invitation",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a new invitation.",
          "body": {
            "type": "invitation_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/invitations/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "organization"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "invitation",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific invitation."
        },
        {
          "method": "DELETE",
          "path": "/invitations/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/invitations/tokens/:token",
          "parameters": [
            {
              "name": "token",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "organization"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "invitation",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Lookup an invitation by its token."
        },
        {
          "method": "PUT",
          "path": "/invitations/tokens/:token",
          "parameters": [
            {
              "name": "token",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "membership",
              "description": "Indicates user was previously a member of the organization"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "membership",
              "description": "The new membership record for this user/organization"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Accepts the invitation w/ the specified token, creating a membership record for this user within this organization. Invitations are one time use only - you will get a validation error if the invitation has previously been accepted.",
          "body": {
            "type": "invitation_accepts_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/invitations/versions",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "invitation",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to versions for invitations with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[invitation_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "invitation"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/invitations",
      "description": "An invitation via email to a user to join this organization. The user will then walk through a user login/registration process and will immediately become a member of the organization."
    },
    {
      "type": "membership",
      "plural": "memberships",
      "operations": [
        {
          "method": "GET",
          "path": "/memberships",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "user",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find memberships for this user id",
              "maximum": 100
            },
            {
              "name": "organization",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find memberships for this organization id",
              "maximum": 100
            },
            {
              "name": "role",
              "type": "[role]",
              "location": "Query",
              "required": false,
              "description": "Find memberships with these roles",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 2,
              "example": "organization, user"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[membership]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "user"
                  },
                  {
                    "value": "organization"
                  },
                  {
                    "value": "role"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Search memberships. Always paginated."
        },
        {
          "method": "POST",
          "path": "/memberships",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "membership",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a new membership.",
          "body": {
            "type": "membership_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/memberships/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "organization"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "membership",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific membership."
        },
        {
          "method": "PUT",
          "path": "/memberships/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "membership",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Change the role for a specific membership record. If the user already has the specified role within the organization, does nothing.",
          "body": {
            "type": "membership_put_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/memberships/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/memberships/versions",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "membership",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter membership changes with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "user",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter membership changes for this user id",
              "maximum": 100
            },
            {
              "name": "organization",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter membership changes for this organization id",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[membership_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "membership"
                  },
                  {
                    "value": "user"
                  },
                  {
                    "value": "organization"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/memberships",
      "description": "Represents the users that are part of this organization. Primary purpose is to manage which users have access to the organization's data and to provide a simple user interface to assign roles and permissions to each member of the organization"
    },
    {
      "type": "organization",
      "plural": "organizations",
      "operations": [
        {
          "method": "GET",
          "path": "/organizations",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "name",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find organizations with this name. Case insensitive. Exact match."
            },
            {
              "name": "environment",
              "type": "environment",
              "location": "Query",
              "required": false,
              "description": "Find organizations with this environment"
            },
            {
              "name": "parent",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find organizations that belong to this specified parent organization id. Case insensitive. Exact match."
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[organization]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Search organizations. Always paginated."
        },
        {
          "method": "POST",
          "path": "/organizations",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "organization",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a new organization.",
          "body": {
            "type": "organization_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/organizations/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "organization",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific organization."
        },
        {
          "method": "PUT",
          "path": "/organizations/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "organization",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "organization",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update or create an organization with the specified id.",
          "body": {
            "type": "organization_put_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/organizations/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete the organization with this id"
        },
        {
          "method": "GET",
          "path": "/organizations/versions",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "organization",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to organizations with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[organization_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "organization"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/organizations"
    },
    {
      "type": "organization_authorization",
      "plural": "organization_authorizations",
      "operations": [
        {
          "method": "GET",
          "path": "/organization-authorizations/:organization",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "organization_authorization",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [],
          "description": "For the authorized user, if the specified organization exists, and the user is an active member of this organization, returns the authorization data used throughout APIs at Flow, including the user's role in that organization and the organization environment. Otherwise, returns 401 - this indicates either the org does not exist or the user does not have access to the org."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/organization-authorizations",
      "description": "Defines the data used for broad authorization of user access to org level data"
    },
    {
      "type": "password_reset_form",
      "plural": "password_reset_forms",
      "operations": [
        {
          "method": "POST",
          "path": "/users/passwords",
          "parameters": [
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "user"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "expandable_user",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "password_reset_form",
            "attributes": []
          }
        },
        {
          "method": "POST",
          "path": "/users/passwords/resets",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "password_reset_request_form",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/users/passwords"
    },
    {
      "type": "suggestion",
      "plural": "suggestions",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/suggestion/catalog",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "gucci category:handbag price:10"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-count"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[suggestion]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "count"
                  },
                  {
                    "value": "label"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "sort_parameter_default"
                ]
              }
            }
          ],
          "description": "Returns search suggestions for catalog items"
        },
        {
          "method": "GET",
          "path": "/:organization/suggestion/harmonization",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "gucci category:handbag price:10"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[suggestion]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "count"
                  },
                  {
                    "value": "label"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "sort_parameter_default"
                ]
              }
            }
          ],
          "description": "Returns search suggestions for harmonization data"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/suggestion"
    },
    {
      "type": "token",
      "plural": "tokens",
      "operations": [
        {
          "method": "GET",
          "path": "/tokens",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "token",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter by this token"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[token]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "description"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Get all tokens that you are authorized to view. Note that the cleartext token value is never sent. To view the API token itself, see the resource path /:id/cleartext"
        },
        {
          "method": "POST",
          "path": "/tokens",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "token",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a new token for the requesting user",
          "body": {
            "type": "token_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/tokens/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "token",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Get metadata for the token with this ID"
        },
        {
          "method": "DELETE",
          "path": "/tokens/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/tokens/:id/cleartext",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "cleartext",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Retrieves the token with the actual string token in cleartext"
        },
        {
          "method": "POST",
          "path": "/tokens/authentications",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "token_reference",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Preferred method to validate a token, obtaining user information if the token is valid (or a 404 if the token does not exist). We use an HTTP POST with a form body to enusre that the token itself is not logged in the request logs.",
          "body": {
            "type": "token_authentication_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/tokens/versions",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "token_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to tokens with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[token_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "token_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/tokens",
      "description": "All of the metadata associated with a given token."
    },
    {
      "type": "user",
      "plural": "users",
      "operations": [
        {
          "method": "GET",
          "path": "/users",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "email",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find users with this email address. Case insensitive. Exact match"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[user]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "email"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Search users. Always paginated."
        },
        {
          "method": "POST",
          "path": "/users",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "user",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a new user.",
          "body": {
            "type": "user_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/users/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "user",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific user."
        },
        {
          "method": "PUT",
          "path": "/users/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "user",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update a user.",
          "body": {
            "type": "user_put_form",
            "attributes": []
          }
        },
        {
          "method": "PATCH",
          "path": "/users/:id/passwords",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update the password for a user.",
          "body": {
            "type": "password_change_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/users/:id/passwords",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Deletes a password for the given user."
        },
        {
          "method": "POST",
          "path": "/users/authenticate",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "user",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Authenticates a user by email / password.",
          "body": {
            "type": "authentication_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/users/versions",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "user_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to users with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[user_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "user_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/users"
    },
    {
      "type": "validation",
      "plural": "validations",
      "operations": [
        {
          "method": "POST",
          "path": "/token-validations",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "validation",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "[error]",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "validation_form",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/token-validations",
      "description": "Validations test whether or not a given API token is valid"
    }
  ],
  "attributes": [],
  "base_url": "https://api.flow.io",
  "description": "The Flow Commerce REST API provides full access to the global ecommerce platform."
}