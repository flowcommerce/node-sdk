{
  "headers": [],
  "models": [
    {
      "plural": "account_orders_export_types",
      "name": "account_orders_export_type",
      "attributes": [],
      "fields": [
        {
          "name": "statement_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "transaction_summary_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "transaction_created_from",
          "annotations": [],
          "attributes": [],
          "type": "date-iso8601",
          "required": false
        },
        {
          "name": "transaction_created_to",
          "annotations": [],
          "attributes": [],
          "type": "date-iso8601",
          "required": false
        },
        {
          "name": "transaction_created_on_or_after",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "transaction_created_after",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "transaction_created_on_or_before",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "transaction_created_before",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "transaction_posted_from",
          "annotations": [],
          "attributes": [],
          "type": "date-iso8601",
          "required": false
        },
        {
          "name": "transaction_posted_to",
          "annotations": [],
          "attributes": [],
          "type": "date-iso8601",
          "required": false
        },
        {
          "name": "transaction_posted_on_or_after",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "transaction_posted_after",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "transaction_posted_on_or_before",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "transaction_posted_before",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        }
      ]
    },
    {
      "plural": "account_transactions_export_types",
      "name": "account_transactions_export_type",
      "attributes": [],
      "fields": [
        {
          "name": "statement_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "transaction_summary_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "created_from",
          "annotations": [],
          "attributes": [],
          "type": "date-iso8601",
          "required": false
        },
        {
          "name": "created_to",
          "annotations": [],
          "attributes": [],
          "type": "date-iso8601",
          "required": false
        },
        {
          "name": "created_on_or_after",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "created_after",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "created_on_or_before",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "created_before",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "posted_from",
          "annotations": [],
          "attributes": [],
          "type": "date-iso8601",
          "required": false
        },
        {
          "name": "posted_to",
          "annotations": [],
          "attributes": [],
          "type": "date-iso8601",
          "required": false
        },
        {
          "name": "posted_on_or_after",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "posted_after",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "posted_on_or_before",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "posted_before",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        }
      ]
    },
    {
      "plural": "ach_authorization_forms",
      "name": "ach_authorization_form",
      "description": "Used for initiating an ACH (Automated Clearing House) bank transfer.",
      "attributes": [],
      "fields": [
        {
          "name": "account_owner_name",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The bank account holder name.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "account_number",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The US bank account number from which the payment will be debited. The bank account number must be between 4 and 17 digits.",
          "maximum": 17,
          "attributes": [],
          "type": "string",
          "minimum": 4,
          "required": true
        },
        {
          "name": "routing_number",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The ABA routing transit number.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "billing_address",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Billing address",
          "attributes": [],
          "type": "billing_address",
          "required": true
        },
        {
          "name": "order_number",
          "annotations": [],
          "description": "Client order number for which to authorize payment.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "The amount to authorize. If an order number is provided, it cannot exceed the order total.",
          "attributes": [],
          "type": "decimal",
          "required": true,
          "example": "120.38"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        },
        {
          "name": "key",
          "annotations": [],
          "description": "Your unique identifier for this transaction, which if provided is used to implement idempotency. If not provided, we will assign.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "A set of key/value pairs that you can attach to an authorization object",
          "attributes": [],
          "type": "map[string]",
          "required": false
        },
        {
          "name": "ip",
          "annotations": [
            "personal_data"
          ],
          "description": "The IP address of the consumer",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "96.242.151.245"
        }
      ]
    },
    {
      "plural": "addresses",
      "name": "address",
      "description": "Defines structured fields for address to be used in user/form input. Either text or the structured input needs to be present.",
      "attributes": [],
      "fields": [
        {
          "name": "text",
          "annotations": [
            "personal_data"
          ],
          "description": "Full text version of address",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "streets",
          "annotations": [
            "personal_data"
          ],
          "description": "Array for street line 1, street line 2, etc., in order",
          "attributes": [],
          "type": "[string]",
          "required": false
        },
        {
          "name": "street_number",
          "annotations": [
            "personal_data"
          ],
          "description": "The specific street number, if available.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "city",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "province",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "postal",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "country",
          "annotations": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "CAN"
        },
        {
          "name": "latitude",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "longitude",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "address_configurations",
      "name": "address_configuration",
      "attributes": [],
      "fields": [
        {
          "name": "country",
          "annotations": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "IRL"
        },
        {
          "name": "field_validation",
          "annotations": [],
          "attributes": [],
          "type": "address_field_validation",
          "required": true
        },
        {
          "default": "[]",
          "name": "provinces",
          "annotations": [],
          "attributes": [],
          "type": "[address_configuration_province]",
          "required": true
        }
      ]
    },
    {
      "plural": "address_configuration_provinces",
      "name": "address_configuration_province",
      "attributes": [],
      "fields": [
        {
          "name": "value",
          "annotations": [],
          "description": "This will either be the name of the province (e.g. Ontario) or the code (e.g. ON) based on the organization configuration",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "ON"
        },
        {
          "name": "name",
          "annotations": [],
          "description": "The name of the province",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "Ontario"
        },
        {
          "name": "translations",
          "annotations": [],
          "description": "This will contain translation details for the province",
          "attributes": [],
          "type": "[address_configuration_province_translation]",
          "required": false
        }
      ]
    },
    {
      "plural": "address_configuration_province_translations",
      "name": "address_configuration_province_translation",
      "attributes": [],
      "fields": [
        {
          "name": "locale",
          "annotations": [],
          "attributes": [],
          "type": "address_configuration_province_translation_locale",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "Ontario"
        }
      ]
    },
    {
      "plural": "address_configuration_province_translation_locales",
      "name": "address_configuration_province_translation_locale",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "en-US"
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "English - United States"
        },
        {
          "name": "language",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "en"
        }
      ]
    },
    {
      "plural": "address_field_validations",
      "name": "address_field_validation",
      "attributes": [],
      "fields": [
        {
          "default": "[]",
          "name": "first_name",
          "annotations": [],
          "attributes": [],
          "type": "[field_validation_rule]",
          "required": true
        },
        {
          "default": "[]",
          "name": "last_name",
          "annotations": [],
          "attributes": [],
          "type": "[field_validation_rule]",
          "required": true
        },
        {
          "default": "[]",
          "name": "street_1",
          "annotations": [],
          "attributes": [],
          "type": "[field_validation_rule]",
          "required": true
        },
        {
          "default": "[]",
          "name": "street_2",
          "annotations": [],
          "attributes": [],
          "type": "[field_validation_rule]",
          "required": true
        },
        {
          "default": "[]",
          "name": "city",
          "annotations": [],
          "attributes": [],
          "type": "[field_validation_rule]",
          "required": true
        },
        {
          "default": "[]",
          "name": "province",
          "annotations": [],
          "attributes": [],
          "type": "[field_validation_rule]",
          "required": true
        },
        {
          "default": "[]",
          "name": "postal",
          "annotations": [],
          "attributes": [],
          "type": "[field_validation_rule]",
          "required": true
        },
        {
          "default": "[]",
          "name": "phone",
          "annotations": [],
          "attributes": [],
          "type": "[field_validation_rule]",
          "required": true
        }
      ]
    },
    {
      "plural": "address_suggestions",
      "name": "address_suggestion",
      "description": "A suggested address (usually providing more accurate information). This object contains both the suggested address as well as metadata on which fields are actually different",
      "attributes": [],
      "fields": [
        {
          "name": "address",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The suggested address",
          "attributes": [],
          "type": "address",
          "required": true
        },
        {
          "name": "streets",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "True if the streets are updated; false otherwise",
          "attributes": [],
          "type": "boolean",
          "required": true
        },
        {
          "name": "city",
          "annotations": [],
          "description": "True if the city is updated; false otherwise",
          "attributes": [],
          "type": "boolean",
          "required": true
        },
        {
          "name": "province",
          "annotations": [],
          "description": "True if the province is updated; false otherwise",
          "attributes": [],
          "type": "boolean",
          "required": true
        },
        {
          "name": "postal",
          "annotations": [],
          "description": "True if the postal is updated; false otherwise",
          "attributes": [],
          "type": "boolean",
          "required": true
        },
        {
          "name": "country",
          "annotations": [],
          "description": "True if the country is updated; false otherwise",
          "attributes": [],
          "type": "boolean",
          "required": true
        }
      ]
    },
    {
      "plural": "address_verifications",
      "name": "address_verification",
      "description": "Address verification returns information on whether or not an address is valid and deliverable - meaning carriers will accept this address. Also returns suggestions for address correction, including data to highlight specific fields to correct.",
      "attributes": [],
      "fields": [
        {
          "name": "address",
          "annotations": [],
          "description": "The address we are verifying",
          "attributes": [],
          "type": "address",
          "required": true
        },
        {
          "name": "valid",
          "annotations": [],
          "description": "True if the address is valid; false otherwise",
          "attributes": [],
          "type": "boolean",
          "required": true
        },
        {
          "default": "[]",
          "name": "suggestions",
          "annotations": [],
          "description": "Where available, we return a list of suggestions for verified addresses. Each suggestion contains both the suggested address as well as the specific fields that are different",
          "attributes": [],
          "type": "[address_suggestion]",
          "required": true
        }
      ]
    },
    {
      "plural": "adjustment_reasons",
      "name": "adjustment_reason",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "adjustment_reason_key",
          "required": true
        },
        {
          "name": "label",
          "annotations": [],
          "description": "The label for the adjustment reason that can be displayed as a tooltip on the product detail page.",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "adyen_challenge_shopper_data",
      "name": "adyen_challenge_shopper_data",
      "description": "Data required to assist in challenging a customer natively.",
      "attributes": [],
      "fields": [
        {
          "name": "challenge_token",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "adyen_identify_shopper_data",
      "name": "adyen_identify_shopper_data",
      "description": "Data required to assist in identifying a customer natively.",
      "attributes": [],
      "fields": [
        {
          "name": "fingerprint_token",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "adyen_native_action_detailses",
      "name": "adyen_native_action_details",
      "description": "Provides details for how to acquire additional information from the customer natively in the browser for Adyen (e.g. 3DS2)",
      "attributes": [],
      "fields": [
        {
          "name": "origin_key",
          "annotations": [],
          "description": "An origin key is required for each domain where you are using our JavaScript libraries and from where you are initiating payments.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "data",
          "annotations": [],
          "description": "The associated authorization result action native data, if any.",
          "attributes": [],
          "type": "adyen_native_data",
          "required": false
        }
      ]
    },
    {
      "plural": "allocations",
      "name": "allocation",
      "attributes": [],
      "fields": [
        {
          "name": "order",
          "annotations": [],
          "attributes": [],
          "type": "allocation_order_summary",
          "required": true
        },
        {
          "name": "details",
          "annotations": [],
          "attributes": [],
          "type": "[allocation_detail]",
          "required": true
        }
      ],
      "deprecation": {
        "description": "Use 'allocation_v2'"
      }
    },
    {
      "plural": "allocation_deleted_v2s",
      "name": "allocation_deleted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "allocation_detail_components",
      "name": "allocation_detail_component",
      "description": "Represents any component that is not VAT or duty, such as item price, rounding, shipping, etc.",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "order_price_detail_component_key",
          "required": true
        },
        {
          "name": "total",
          "annotations": [],
          "description": "Represents the total price of this line item, which equals the price times the quantity.",
          "attributes": [],
          "type": "price_with_base",
          "required": true
        },
        {
          "name": "price",
          "annotations": [],
          "description": "Represents the price of all included detail components for one unit of this line item.",
          "attributes": [],
          "type": "price_with_base",
          "required": false
        }
      ]
    },
    {
      "plural": "allocation_levy_components",
      "name": "allocation_levy_component",
      "description": "Represents either a VAT or duty component.",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "order_price_detail_component_key",
          "required": true
        },
        {
          "name": "total",
          "annotations": [],
          "description": "Represents the total price of this line item, which equals the price times the quantity.",
          "attributes": [],
          "type": "price_with_base",
          "required": true
        },
        {
          "name": "rate",
          "annotations": [],
          "description": "The rate of the levy.",
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "description": "The name of the levy, for display purposes.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "price",
          "annotations": [],
          "description": "Represents the price of all included detail components for one unit of this line item.",
          "attributes": [],
          "type": "price_with_base",
          "required": false
        },
        {
          "default": "calculated",
          "name": "accuracy",
          "annotations": [],
          "description": "Used to flag prices that are estimated and why. Missing values will be considered calculated. An order may only be submitted if all price components are calculated.",
          "attributes": [],
          "type": "price_accuracy",
          "required": false
        },
        {
          "name": "basis",
          "annotations": [],
          "description": "The taxable/dutiable basis from which this levy component was produced. Should be equal to total / rate.",
          "attributes": [],
          "type": "money_with_base",
          "required": false
        }
      ]
    },
    {
      "plural": "allocation_line_details",
      "name": "allocation_line_detail",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "quantity",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "order_price_detail_key",
          "required": true
        },
        {
          "name": "price",
          "annotations": [],
          "description": "Represents the price of all included detail components for one unit of this line item.",
          "attributes": [],
          "type": "price_with_base",
          "required": true
        },
        {
          "name": "total",
          "annotations": [],
          "description": "Represents the total price of this line item, which equals the price times the quantity.",
          "attributes": [],
          "type": "price_with_base",
          "required": true
        },
        {
          "name": "included",
          "annotations": [],
          "description": "Contains all components that are included in this detail's total.",
          "attributes": [],
          "type": "[allocation_component]",
          "required": true
        },
        {
          "name": "not_included",
          "annotations": [],
          "description": "Contains all components that are not included in this detail's total. For example, this may contain VAT components when the VAT pricing setting is displayed or ignored.",
          "attributes": [],
          "type": "[allocation_component]",
          "required": true
        }
      ]
    },
    {
      "plural": "allocation_order_details",
      "name": "allocation_order_detail",
      "description": "Represents an order-specific detail such as shipping, insurance, or an order-level discount.",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "order_price_detail_key",
          "required": true
        },
        {
          "name": "total",
          "annotations": [],
          "attributes": [],
          "type": "price_with_base",
          "required": true
        },
        {
          "name": "included",
          "annotations": [],
          "description": "Contains all components that are included in this detail's total.",
          "attributes": [],
          "type": "[allocation_component]",
          "required": true
        },
        {
          "name": "not_included",
          "annotations": [],
          "description": "Contains all components that are not included in this detail's total. For example, this may contain VAT components when the VAT pricing setting is displayed or ignored.",
          "attributes": [],
          "type": "[allocation_component]",
          "required": true
        }
      ]
    },
    {
      "plural": "allocation_order_summaries",
      "name": "allocation_order_summary",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "submitted_at",
          "annotations": [],
          "description": "The timestamp on which the order is submitted",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        }
      ]
    },
    {
      "plural": "allocation_upserted_v2s",
      "name": "allocation_upserted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "allocation",
          "annotations": [],
          "attributes": [],
          "type": "allocation_v2",
          "required": true
        }
      ]
    },
    {
      "plural": "allocation_v2s",
      "name": "allocation_v2",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "order",
          "annotations": [],
          "attributes": [],
          "type": "allocation_order_summary",
          "required": true
        },
        {
          "name": "details",
          "annotations": [],
          "attributes": [],
          "type": "[allocation_detail]",
          "required": true
        },
        {
          "name": "total",
          "annotations": [],
          "attributes": [],
          "type": "localized_total",
          "required": true
        }
      ]
    },
    {
      "plural": "amount_margins",
      "name": "amount_margin",
      "description": "Rule outcome where shipping surfaced in quote is actual cost plus a predefined margin price",
      "attributes": [],
      "fields": [
        {
          "name": "margin",
          "annotations": [],
          "description": "Additional cost to be added to actual cost to get quote amount to show to customer",
          "attributes": [],
          "type": "price",
          "required": true
        }
      ]
    },
    {
      "plural": "amount_margin_forms",
      "name": "amount_margin_form",
      "attributes": [],
      "fields": [
        {
          "name": "margin",
          "annotations": [],
          "attributes": [],
          "type": "money",
          "required": true
        }
      ]
    },
    {
      "plural": "analytics_export_types",
      "name": "analytics_export_type",
      "attributes": [],
      "fields": [
        {
          "name": "from",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "to",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "region",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "interval",
          "annotations": [],
          "attributes": [],
          "type": "unit_of_time",
          "required": false
        }
      ]
    },
    {
      "plural": "apple_pay_merchant_validation_payloads",
      "name": "apple_pay_merchant_validation_payload",
      "attributes": [],
      "fields": [
        {
          "name": "validation_url",
          "annotations": [],
          "description": "Apple's server URL to validate the merchant and obtain a merchant session object, which will be sent back to frontend.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "display_name",
          "annotations": [],
          "description": "The display name will appear in e.g. Touch Bar. A string of 64 or fewer UTF-8 characters containing the canonical name for your store, suitable for display. Do not localize the name. Default value will be provided from database",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "at_costs",
      "name": "at_cost",
      "description": "Rule outcome where shipping surfaced in quote is actual cost of the service",
      "attributes": [],
      "fields": [
        {
          "name": "ignore",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "attributes",
      "name": "attribute",
      "description": "An attribute can be configured to be used in different ways throughout Flow. A common example is to identify a meaningful attribute (e.g. brand) that can then be displayed throughout the Flow console.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "The unique identifier for the attribute.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "description": "The key of the attribute that identifies it within a map of attributes.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "options",
          "annotations": [],
          "description": "Defines special rules for handling this attribute.",
          "attributes": [],
          "type": "options",
          "required": true
        },
        {
          "name": "label",
          "annotations": [],
          "description": "A human-readable label used for display purposes.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "intent",
          "annotations": [],
          "description": "Optionally specify the meaning of this attribute to ensure accurate processing, such as marking a price that should be localized. Note that specifying an intent may restrict what data types are legal -- for example, a price must also be of type decimal.",
          "attributes": [],
          "type": "attribute_intent",
          "required": false,
          "example": "brand"
        },
        {
          "name": "type",
          "annotations": [],
          "description": "Optionally tag attributes with their data type so they are properly validated. If omitted, we will default to string",
          "attributes": [],
          "type": "attribute_data_type",
          "required": false,
          "example": "string"
        },
        {
          "name": "position",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "minimum": 0,
          "required": false
        }
      ]
    },
    {
      "plural": "attribute_deleteds",
      "name": "attribute_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "attribute_deleted_v2s",
      "name": "attribute_deleted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "attribute_forms",
      "name": "attribute_form",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "description": "The actual attribute key. This key should match the keys used in the item.attributes maps",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "brand"
        },
        {
          "name": "options",
          "annotations": [],
          "description": "Defines the configuration for how the options are used through Flow",
          "attributes": [],
          "type": "options",
          "required": true
        },
        {
          "name": "label",
          "annotations": [],
          "description": "A human-readable label used for display purposes",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "Brand"
        },
        {
          "name": "intent",
          "annotations": [],
          "description": "Optionally specify the meaning of this attribute to ensure accurate processing, such as marking a price that should be localized. Note that specifying an intent may restrict what data types are legal -- for example, a price must also be of type decimal.",
          "attributes": [],
          "type": "attribute_intent",
          "required": false,
          "example": "brand"
        },
        {
          "name": "type",
          "annotations": [],
          "description": "Optionally tag attributes with their data type so they are properly validated. If omitted, we will default to string",
          "attributes": [],
          "type": "attribute_data_type",
          "required": false,
          "example": "string"
        },
        {
          "name": "position",
          "annotations": [],
          "description": "The position of this attribute in the set of attributes. If not specified, will default to last",
          "attributes": [],
          "type": "long",
          "minimum": 0,
          "required": false
        }
      ]
    },
    {
      "plural": "attribute_upserteds",
      "name": "attribute_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "label",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "intent",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "attribute_upserted_v2s",
      "name": "attribute_upserted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "attribute",
          "annotations": [],
          "attributes": [],
          "type": "attribute",
          "required": true
        }
      ]
    },
    {
      "plural": "attribute_versions",
      "name": "attribute_version",
      "description": "Retrieve journaled history of an attribute",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "attribute",
          "annotations": [],
          "attributes": [],
          "type": "attribute",
          "required": true
        }
      ]
    },
    {
      "plural": "authentication_forms",
      "name": "authentication_form",
      "attributes": [],
      "fields": [
        {
          "name": "email",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "password",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "authorization_copy_forms",
      "name": "authorization_copy_form",
      "description": "Creates a new authorization based on the underlying information in an existing authorization. A common use case here is to create a new auth when the existing one has expired.",
      "attributes": [],
      "fields": [
        {
          "name": "source_authorization_key",
          "annotations": [],
          "description": "The key of the source authorization that we are copying",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "The amount to authorize",
          "attributes": [],
          "type": "decimal",
          "required": true,
          "example": "120.38"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "A set of key/value pairs that you can attach to an authorization object",
          "attributes": [],
          "type": "map[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "authorization_deleted_v2s",
      "name": "authorization_deleted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "authorization_errors",
      "name": "authorization_error",
      "description": "Details for why an authorization was not created",
      "attributes": [],
      "fields": [
        {
          "name": "code",
          "annotations": [],
          "description": "Specific reason for the error",
          "attributes": [],
          "type": "authorization_decline_code",
          "required": true
        },
        {
          "name": "messages",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "avs",
          "annotations": [],
          "description": "Specific AVS information if applicable",
          "attributes": [],
          "type": "avs",
          "required": false
        },
        {
          "name": "cvv",
          "annotations": [],
          "description": "Specific CVV information if applicable",
          "attributes": [],
          "type": "cvv",
          "required": false
        }
      ]
    },
    {
      "plural": "authorization_order_references",
      "name": "authorization_order_reference",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "authorization_payloads",
      "name": "authorization_payload",
      "description": "Used to complete an inline authorization like Google Pay or Apple Pay.",
      "attributes": [],
      "fields": [
        {
          "name": "parameters",
          "annotations": [],
          "attributes": [],
          "type": "authorization_payload_parameters",
          "required": true
        }
      ]
    },
    {
      "plural": "authorization_references",
      "name": "authorization_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "order",
          "annotations": [],
          "attributes": [],
          "type": "authorization_order_reference",
          "required": false
        }
      ]
    },
    {
      "plural": "authorization_results",
      "name": "authorization_result",
      "description": "Contains the result of the authorization. If an immediate response is not available, the state will be 'pending' - this usually indicates fraud review requires additional time / verification (or a potential network issue with the issuing bank).",
      "attributes": [],
      "fields": [
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "authorization_status",
          "required": true
        },
        {
          "name": "action",
          "annotations": [],
          "attributes": [],
          "type": "authorization_result_action",
          "required": false
        },
        {
          "name": "decline_code",
          "annotations": [],
          "description": "If status is declined, will contain the details behind the decline",
          "attributes": [],
          "type": "authorization_decline_code",
          "required": false
        },
        {
          "name": "avs",
          "annotations": [],
          "attributes": [],
          "type": "avs",
          "required": false
        },
        {
          "name": "cvv",
          "annotations": [],
          "attributes": [],
          "type": "cvv",
          "required": false
        },
        {
          "name": "three_d_secure",
          "annotations": [],
          "attributes": [],
          "type": "three_d_secure",
          "required": false
        },
        {
          "name": "description",
          "annotations": [],
          "attributes": [],
          "type": "authorization_result_description",
          "required": false
        }
      ]
    },
    {
      "plural": "authorization_result_action_gets",
      "name": "authorization_result_action_get",
      "description": "Provides details for how to acquire additional information from the customer using GET (e.g. redirecting to the issuer for online payment method or 3D Secure).",
      "attributes": [],
      "fields": [
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "authorization_result_action_type",
          "required": true
        },
        {
          "name": "url",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "details",
          "annotations": [],
          "description": "The associated authorization result action details, if any.",
          "attributes": [],
          "type": "authorization_result_action_details",
          "required": false
        }
      ]
    },
    {
      "plural": "authorization_result_action_natives",
      "name": "authorization_result_action_native",
      "description": "Provides details for how to acquire additional information from the customer natively in the browser (e.g. for 3D Secure 2).",
      "attributes": [],
      "fields": [
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "authorization_result_action_type",
          "required": true
        },
        {
          "name": "authorization",
          "annotations": [],
          "attributes": [],
          "type": "authorization_reference",
          "required": true
        },
        {
          "name": "details",
          "annotations": [],
          "description": "The associated authorization result action details, if any.",
          "attributes": [],
          "type": "authorization_result_action_details",
          "required": false
        }
      ]
    },
    {
      "plural": "authorization_result_action_posts",
      "name": "authorization_result_action_post",
      "description": "Provides details for how to acquire additional information from the customer using POST (e.g. redirecting to the issuer for online payment method or 3D Secure).",
      "attributes": [],
      "fields": [
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "authorization_result_action_type",
          "required": true
        },
        {
          "name": "url",
          "annotations": [],
          "description": "The URL to use for the POST request.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "parameters",
          "annotations": [],
          "description": "Contains parameters that are required to be included as part of the request.",
          "attributes": [],
          "type": "object",
          "required": true
        }
      ]
    },
    {
      "plural": "authorization_result_action_waits",
      "name": "authorization_result_action_wait",
      "description": "Indicates that a response is not ready and that the consumer should poll (or wait) for a response.",
      "attributes": [],
      "fields": [
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "authorization_result_action_type",
          "required": true
        }
      ]
    },
    {
      "plural": "authorization_result_descriptions",
      "name": "authorization_result_description",
      "attributes": [],
      "fields": [
        {
          "name": "display",
          "annotations": [],
          "description": "The default display text, e.g. 'VISA ending in 4700' or 'Payment with PayPal'.",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "authorization_status_changeds",
      "name": "authorization_status_changed",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "The authorization id",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "authorization",
          "annotations": [],
          "attributes": [],
          "type": "authorization",
          "required": true
        }
      ]
    },
    {
      "plural": "authorization_versions",
      "name": "authorization_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "authorization",
          "annotations": [],
          "attributes": [],
          "type": "authorization",
          "required": true
        }
      ]
    },
    {
      "plural": "available_filter_structureds",
      "name": "available_filter_structured",
      "attributes": [],
      "fields": [
        {
          "name": "field",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "operators",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "format",
          "annotations": [],
          "attributes": [],
          "type": "available_filter_format",
          "required": true
        },
        {
          "name": "valid_values",
          "annotations": [],
          "description": "If specified, the list of valid string values that will be accepted",
          "attributes": [],
          "type": "[string]",
          "required": false
        },
        {
          "name": "placeholder",
          "annotations": [],
          "description": "Example placeholder text",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "available_filter_unstructureds",
      "name": "available_filter_unstructured",
      "attributes": [],
      "fields": [
        {
          "name": "placeholder",
          "annotations": [],
          "description": "Example placeholder text",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "available_promotions",
      "name": "available_promotion",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "shipping_configuration",
          "annotations": [],
          "attributes": [],
          "type": "shipping_configuration_reference",
          "required": true
        },
        {
          "name": "region",
          "annotations": [],
          "attributes": [],
          "type": "region_reference",
          "required": true
        },
        {
          "name": "promotions",
          "annotations": [],
          "attributes": [],
          "type": "[promotion]",
          "required": true
        }
      ]
    },
    {
      "plural": "available_promotions_deleteds",
      "name": "available_promotions_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "experience_key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "available_promotions_deleted_v2s",
      "name": "available_promotions_deleted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "available_promotion",
          "annotations": [],
          "attributes": [],
          "type": "available_promotion",
          "required": true
        }
      ]
    },
    {
      "plural": "available_promotions_upserteds",
      "name": "available_promotions_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "experience_key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "available_promotions",
          "annotations": [],
          "attributes": [],
          "type": "[object]",
          "required": true
        }
      ]
    },
    {
      "plural": "available_promotions_upserted_v2s",
      "name": "available_promotions_upserted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "available_promotion",
          "annotations": [],
          "attributes": [],
          "type": "available_promotion",
          "required": true
        }
      ]
    },
    {
      "plural": "available_services",
      "name": "available_service",
      "description": "Representation of a service level available at a center and the special pickup times during the week. If pickup schedules are not provided, assumption is once a day during the weekdays.",
      "attributes": [],
      "fields": [
        {
          "name": "service",
          "annotations": [],
          "description": "Carrier service level ID",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "ups-ground"
        },
        {
          "name": "scheduled_pickups",
          "annotations": [],
          "description": "Schedule day/times of carrier or affiliated line-haul pickup at this center. If not available, assume every day.",
          "attributes": [],
          "type": "[scheduled_pickup]",
          "required": false
        },
        {
          "name": "lead_days",
          "annotations": [],
          "description": "Additional lead time required for processing or freight-based domestic transit for this service from this center. This will go in to padding the final delivery windows.",
          "attributes": [],
          "type": "number_range",
          "required": false
        }
      ]
    },
    {
      "plural": "avalara_tax_csv_settings",
      "name": "avalara_tax_csv_setting",
      "attributes": [],
      "fields": [
        {
          "name": "schedule",
          "annotations": [],
          "description": "A schedule of when to generate the tax transaction report.",
          "attributes": [],
          "type": "repeat_schedule",
          "required": true
        },
        {
          "name": "timezone",
          "annotations": [],
          "description": "The timezone of the report generation schedule as defined in https://api.flow.io/reference/timezones",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "email_recipients",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "avalara_tax_settings",
      "name": "avalara_tax_setting",
      "attributes": [],
      "fields": [
        {
          "name": "company_code",
          "annotations": [],
          "description": "The Avalara company code to be used for the organizations account.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "base_currency",
          "annotations": [],
          "description": "The organizations currency used for tax calculations.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "api_key",
          "annotations": [],
          "description": "Avalara API key for access to the organizations account. If not set the Flow account will be used.",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "avses",
      "name": "avs",
      "description": "Represents the address verification results",
      "attributes": [],
      "fields": [
        {
          "name": "code",
          "annotations": [],
          "attributes": [],
          "type": "avs_code",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "description": "If available, indicates whether the cardholder's name matches.",
          "attributes": [],
          "type": "boolean",
          "required": false
        },
        {
          "name": "address",
          "annotations": [],
          "description": "If available, indicates whether the cardholder's address matches.",
          "attributes": [],
          "type": "boolean",
          "required": false
        },
        {
          "name": "postal",
          "annotations": [],
          "description": "If available, indicates whether the cardholder's postal code matches.",
          "attributes": [],
          "type": "boolean",
          "required": false
        },
        {
          "name": "description",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "b2b_credit_memos",
      "name": "b2b_credit_memo",
      "description": "The b2b credit memo represents a refund transaction between Flow and one of our clients",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "buyer",
          "annotations": [],
          "description": "Will be one of flow's entities when we are purchasing inventory.",
          "attributes": [],
          "type": "merchant_of_record_entity",
          "required": true
        },
        {
          "name": "seller",
          "annotations": [],
          "attributes": [],
          "type": "merchant_of_record_entity",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "consumer_invoice_status",
          "required": true
        },
        {
          "name": "date",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "invoice",
          "annotations": [],
          "description": "The invoice against which the refund was issued",
          "attributes": [],
          "type": "b2b_invoice_reference",
          "required": true
        },
        {
          "name": "lines",
          "annotations": [],
          "attributes": [],
          "type": "[consumer_invoice_line]",
          "required": true
        },
        {
          "name": "documents",
          "annotations": [],
          "attributes": [],
          "type": "[consumer_invoice_document]",
          "required": true
        },
        {
          "name": "attributes",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "required": true
        }
      ]
    },
    {
      "plural": "b2b_credit_memo_deleteds",
      "name": "b2b_credit_memo_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "description": "The date/time of the request",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "b2b_credit_memo",
          "annotations": [],
          "attributes": [],
          "type": "b2b_credit_memo",
          "required": true
        }
      ]
    },
    {
      "plural": "b2b_credit_memo_upserteds",
      "name": "b2b_credit_memo_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "description": "The date/time of the request",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "b2b_credit_memo",
          "annotations": [],
          "attributes": [],
          "type": "b2b_credit_memo",
          "required": true
        }
      ]
    },
    {
      "plural": "b2b_invoices",
      "name": "b2b_invoice",
      "description": "The b2b invoice represents a transaction between Flow and one of our clients (e.g. Flow purchasing inventory to resell to a consumer).",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "buyer",
          "annotations": [],
          "description": "Will be one of flow's entities when we are purchasing inventory.",
          "attributes": [],
          "type": "merchant_of_record_entity",
          "required": true
        },
        {
          "name": "seller",
          "annotations": [],
          "attributes": [],
          "type": "merchant_of_record_entity",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "consumer_invoice_status",
          "required": true
        },
        {
          "name": "date",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "order",
          "annotations": [],
          "attributes": [],
          "type": "consumer_invoice_order_summary",
          "required": true
        },
        {
          "name": "economic_title_location",
          "annotations": [],
          "description": "Defines where economic title transfer occurs",
          "attributes": [],
          "type": "economic_title_location",
          "required": true
        },
        {
          "name": "center",
          "annotations": [],
          "description": "The originating fulfillment center. Will be empty for digital goods.",
          "attributes": [],
          "type": "consumer_invoice_center_reference",
          "required": false
        },
        {
          "name": "destination",
          "annotations": [],
          "attributes": [],
          "type": "order_address",
          "required": false
        },
        {
          "name": "tax",
          "annotations": [],
          "description": "The total amount of tax for this invoice",
          "attributes": [],
          "type": "money",
          "required": true
        },
        {
          "name": "lines",
          "annotations": [],
          "attributes": [],
          "type": "[consumer_invoice_line]",
          "required": true
        },
        {
          "name": "documents",
          "annotations": [],
          "attributes": [],
          "type": "[consumer_invoice_document]",
          "required": true
        },
        {
          "name": "attributes",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "required": true
        }
      ]
    },
    {
      "plural": "b2b_invoice_deleteds",
      "name": "b2b_invoice_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "description": "The date/time of the request",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "b2b_invoice",
          "annotations": [],
          "attributes": [],
          "type": "b2b_invoice",
          "required": true
        }
      ]
    },
    {
      "plural": "b2b_invoice_references",
      "name": "b2b_invoice_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "b2b_invoice_upserteds",
      "name": "b2b_invoice_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "description": "The date/time of the request",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "b2b_invoice",
          "annotations": [],
          "attributes": [],
          "type": "b2b_invoice",
          "required": true
        }
      ]
    },
    {
      "plural": "behavior_audits",
      "name": "behavior_audit",
      "attributes": [],
      "fields": [
        {
          "name": "behavior",
          "annotations": [],
          "attributes": [],
          "type": "flow_behavior",
          "required": true
        },
        {
          "name": "authentication_techniques",
          "annotations": [],
          "attributes": [],
          "type": "[authentication_technique]",
          "required": true
        },
        {
          "name": "roles",
          "annotations": [],
          "attributes": [],
          "type": "[flow_role]",
          "required": true
        }
      ]
    },
    {
      "plural": "billing_addresses",
      "name": "billing_address",
      "attributes": [],
      "fields": [
        {
          "name": "name",
          "annotations": [
            "personal_data"
          ],
          "description": "The name of the customer associated with the billing address",
          "attributes": [],
          "type": "name",
          "required": false
        },
        {
          "name": "streets",
          "annotations": [
            "personal_data"
          ],
          "description": "Array for street line 1, street line 2, etc., in order",
          "attributes": [],
          "type": "[string]",
          "required": false
        },
        {
          "name": "city",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "province",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "postal",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "country",
          "annotations": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "CAN"
        },
        {
          "name": "company",
          "annotations": [
            "personal_data"
          ],
          "description": "Business entity or organization name of this contact",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "browse_optin_responses",
      "name": "browse_optin_responses",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "session_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "optin_responses",
          "annotations": [],
          "attributes": [],
          "type": "[optin_response]",
          "required": true
        }
      ]
    },
    {
      "plural": "browse_optin_responses_deleteds",
      "name": "browse_optin_responses_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "browse_optin_responses_upserteds",
      "name": "browse_optin_responses_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "browse_optin_responses",
          "annotations": [],
          "attributes": [],
          "type": "browse_optin_responses",
          "required": true
        }
      ]
    },
    {
      "plural": "browser_infoes",
      "name": "browser_info",
      "description": "Shopper browser info. All of these fields are required if you are using 3DS2.",
      "attributes": [],
      "fields": [
        {
          "name": "origin",
          "annotations": [],
          "description": "The URL of the page where you are loading the 3d Secure 2 Component from. The origin should not include subdirectories and a trailing slash. You can also get this by calling window.location.origin.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "language",
          "annotations": [],
          "description": "The navigator.language value of the shopper's browser (as defined in IETF BCP 47).",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "java_enabled",
          "annotations": [],
          "description": "Boolean value indicating if the shopper's browser is able to execute Java.",
          "attributes": [],
          "type": "boolean",
          "required": false
        },
        {
          "name": "color_depth",
          "annotations": [],
          "description": "The color depth of the shopper's browser in bits per pixel. This should be obtained by using the browser's screen.colorDepth property. Accepted values: 1, 4, 8, 15, 16, 24, 32 or 48 bit color depth.",
          "attributes": [],
          "type": "integer",
          "required": false
        },
        {
          "name": "screen_height",
          "annotations": [],
          "description": "The total height of the shopper's device screen in pixels.",
          "attributes": [],
          "type": "integer",
          "required": false
        },
        {
          "name": "screen_width",
          "annotations": [],
          "description": "The total width of the shopper's device screen in pixels.",
          "attributes": [],
          "type": "integer",
          "required": false
        },
        {
          "name": "time_zone_offset",
          "annotations": [],
          "description": "Time difference between UTC time and the shopper's browser local time, in minutes.",
          "attributes": [],
          "type": "integer",
          "required": false
        },
        {
          "name": "user_agent",
          "annotations": [],
          "description": "'user-agent' header value. Will be taken from request headers if not provided.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "accept",
          "annotations": [],
          "description": "'accept' header value. Will be taken from request headers if not provided.",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "captures",
      "name": "capture",
      "description": "Capture actually transfers funds. You can capture as many times as you'd like up until the total amount of the authorization has been captured or the authorization otherwise becomes unavailable (e.g. expires).",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "authorization",
          "annotations": [],
          "attributes": [],
          "type": "authorization_reference",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "The amount to capture in the currency of the associated authorization. If not specified, defaults to the full amount of the authorization (minus any prior captures).",
          "attributes": [],
          "type": "decimal",
          "required": true,
          "example": "120.38"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "Required if amount is specified. The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        },
        {
          "name": "requested",
          "annotations": [],
          "description": "The requested amount/currency of the capture when created. We record this value as it will be converted to the currency of the authorization automatically if it does not match.",
          "attributes": [],
          "type": "money",
          "required": false
        },
        {
          "name": "created_at",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "A set of key/value pairs that you can attach to a capture object",
          "attributes": [],
          "type": "map[string]",
          "required": false
        },
        {
          "default": "succeeded",
          "name": "status",
          "annotations": [],
          "description": "Indicates the status of the capture.",
          "attributes": [],
          "type": "capture_status",
          "required": false
        },
        {
          "name": "base",
          "annotations": [],
          "description": "The amount/currency of the capture in base currency. Added in Summer 2018 and always present since then.",
          "attributes": [],
          "type": "money",
          "required": false
        }
      ]
    },
    {
      "plural": "capture_deleteds",
      "name": "capture_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "capture",
          "annotations": [],
          "attributes": [],
          "type": "capture",
          "required": true
        }
      ]
    },
    {
      "plural": "capture_errors",
      "name": "capture_error",
      "attributes": [],
      "fields": [
        {
          "default": "generic_error",
          "name": "code",
          "annotations": [],
          "description": "To maintain compatibility with generic_error",
          "attributes": [],
          "type": "generic_error_code",
          "required": true
        },
        {
          "name": "messages",
          "annotations": [],
          "description": "To maintain compatibility with generic_error",
          "attributes": [],
          "type": "[string]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "decline_code",
          "annotations": [],
          "description": "Contains details related to the reason for which a capture failed.",
          "attributes": [],
          "type": "capture_decline_code",
          "required": true
        }
      ]
    },
    {
      "plural": "capture_forms",
      "name": "capture_form",
      "description": "Capture actually transfers funds. You can capture as many times as you'd like up until the total amount of the authorization has been captured or the authorization otherwise becomes unavailable (e.g. expires).",
      "attributes": [],
      "fields": [
        {
          "name": "authorization_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "description": "Your unique identifier for this transaction, which if provided is used to implement idempotency. If not provided, we will assign.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "The amount to capture in the currency of the associated authorization. If not specified, defaults to the full amount of the authorization (minus any prior captures).",
          "attributes": [],
          "type": "decimal",
          "required": false,
          "example": "120.38"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "Required if amount is specified. The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "CAD"
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "A set of key/value pairs that you can attach to a capture object",
          "attributes": [],
          "type": "map[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "capture_identifiers",
      "name": "capture_identifier",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "capture",
          "annotations": [],
          "attributes": [],
          "type": "capture_reference",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "identifier",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "primary",
          "annotations": [],
          "attributes": [],
          "type": "boolean",
          "required": true
        }
      ]
    },
    {
      "plural": "capture_identifier_deleteds",
      "name": "capture_identifier_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "identifier",
          "annotations": [],
          "attributes": [],
          "type": "capture_identifier",
          "required": true
        }
      ]
    },
    {
      "plural": "capture_identifier_upserteds",
      "name": "capture_identifier_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "identifier",
          "annotations": [],
          "attributes": [],
          "type": "capture_identifier",
          "required": true
        }
      ]
    },
    {
      "plural": "capture_references",
      "name": "capture_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "capture_upserted_v2s",
      "name": "capture_upserted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "capture",
          "annotations": [],
          "attributes": [],
          "type": "capture",
          "required": true
        }
      ]
    },
    {
      "plural": "capture_versions",
      "name": "capture_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "capture",
          "annotations": [],
          "attributes": [],
          "type": "capture",
          "required": true
        }
      ]
    },
    {
      "plural": "cards",
      "name": "card",
      "description": "Card represents the metadata about a secure, tokenized card. The card 'token' is a unique, cryptographically secure token by which this card can be identified in the future. The card token itself will either be a permanent card token (denoted by a prefix of F96) or a one time nonce (denoted by a prefix of F17). Nonces represent cards that were encrypted from public channels (like the user's browser via JavaScript) and can be used once only. If you have a nonce you can exchange it for a permanent card token via the operation POST /:organization/cards/nonces",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "token",
          "annotations": [
            "personal_data"
          ],
          "description": "Unique, cryptographically secure token by which this card can be identified in the future. This value should be kept secure in your system's as payment authorizations are created against this token.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "type",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "card_type",
          "required": true
        },
        {
          "name": "expiration",
          "annotations": [],
          "attributes": [],
          "type": "expiration",
          "required": true
        },
        {
          "name": "iin",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The issuer identification number (IIN) (formerly known as the Bank Identification Number) which are the leading digits of the card number.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "issuer",
          "annotations": [],
          "description": "Added in october 2018",
          "attributes": [],
          "type": "issuer_summary",
          "required": false
        },
        {
          "name": "last4",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Cleartext last 4 numbers of the card",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Cardholder name",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "address",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Cardholder billing address",
          "attributes": [],
          "type": "billing_address",
          "required": false
        }
      ]
    },
    {
      "plural": "card_authorizations",
      "name": "card_authorization",
      "description": "An authorization is used to check and reserve funds w/ a given payment method. No funds are actually transferred; once you have you an authorization, you can capture up to the amount of the authorization.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "default": "flow",
          "name": "merchant_of_record",
          "annotations": [],
          "attributes": [],
          "type": "merchant_of_record",
          "required": false
        },
        {
          "name": "method",
          "annotations": [],
          "attributes": [],
          "type": "payment_method",
          "required": false
        },
        {
          "name": "card",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "If this authorization was made for a card payment method, this field will contain the details of the card used on the transaction",
          "attributes": [],
          "type": "expandable_card",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "The amount to authorize",
          "attributes": [],
          "type": "decimal",
          "required": true,
          "example": "120.38"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        },
        {
          "name": "requested",
          "annotations": [],
          "description": "The amount/currency of the order when created.",
          "attributes": [],
          "type": "money",
          "required": false
        },
        {
          "name": "customer",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The customer who is actually receiving the goods. Providing name and email at a minimum will significantly increase the acceptance rate and are recommended.",
          "attributes": [],
          "type": "order_customer",
          "required": true
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "A set of key/value pairs that you can attach to an authorization object",
          "attributes": [],
          "type": "map[string]",
          "required": true
        },
        {
          "name": "destination",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Destination address, if relevant",
          "attributes": [],
          "type": "address",
          "required": false
        },
        {
          "name": "billing_address",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Destination address, if relevant",
          "attributes": [],
          "type": "billing_address",
          "required": false
        },
        {
          "name": "order",
          "annotations": [],
          "description": "If this authorization was made for a specific order number, that order will be referenced here",
          "attributes": [],
          "type": "authorization_order_reference",
          "required": false
        },
        {
          "name": "ip",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The IP address of the consumer",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "96.242.151.245"
        },
        {
          "name": "result",
          "annotations": [],
          "attributes": [],
          "type": "authorization_result",
          "required": true
        },
        {
          "name": "created_at",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "expires_at",
          "annotations": [],
          "description": "The time at which this authorization expires, if any.",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "base",
          "annotations": [],
          "description": "The amount/currency of the authorization in base currency. Added in Summer 2018 and always present since then.",
          "attributes": [],
          "type": "money",
          "required": false
        }
      ]
    },
    {
      "plural": "card_authorization_deleted_v2s",
      "name": "card_authorization_deleted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "authorization",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "card_authorization",
          "required": true
        }
      ]
    },
    {
      "plural": "card_authorization_upserted_v2s",
      "name": "card_authorization_upserted_v2",
      "description": "Represents an authorization for a card payment method",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "authorization",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "card_authorization",
          "required": true
        }
      ]
    },
    {
      "plural": "card_deleteds",
      "name": "card_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "card_deleted_v2s",
      "name": "card_deleted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "card",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "card",
          "required": true
        }
      ]
    },
    {
      "plural": "card_errors",
      "name": "card_error",
      "description": "Details for why a card was not created",
      "attributes": [],
      "fields": [
        {
          "name": "code",
          "annotations": [],
          "description": "Specific reason for the error",
          "attributes": [],
          "type": "card_error_code",
          "required": true
        },
        {
          "name": "messages",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "avs",
          "annotations": [],
          "description": "Specific AVS information if applicable",
          "attributes": [],
          "type": "avs",
          "required": false
        },
        {
          "name": "cvv",
          "annotations": [],
          "description": "Specific CVV information if applicable",
          "attributes": [],
          "type": "cvv",
          "required": false
        }
      ]
    },
    {
      "plural": "card_forms",
      "name": "card_form",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Cleartext card number. You must provide either this field or 'cipher', but not both. May contain integers only or integers with dashes. If dashes are provided, we will remove them, storing only the raw number.",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "4111111111111111 or 4111-1111-1111-1111"
        },
        {
          "name": "cipher",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Card number encrypted using your assigned public key. You must provide either this field or 'number', but not both. Card number itself may contain integers only or integers with dashes. If dashes are provided, we will remove them, storing only the raw number.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "expiration_month",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The month of expiration expressed as a number. 1 = January, 12 = December",
          "maximum": 12,
          "attributes": [],
          "type": "integer",
          "minimum": 1,
          "required": true,
          "example": "4"
        },
        {
          "name": "expiration_year",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The 4 digit expiration year",
          "attributes": [],
          "type": "integer",
          "required": true,
          "example": "2021"
        },
        {
          "name": "name",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Cardholder name.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "cvv",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The card verification number for the card that is used to verify the card details at creation time, making cvv optional for future payment authorizations.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "address",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Cardholder billing address",
          "attributes": [],
          "type": "billing_address",
          "required": false
        },
        {
          "name": "ip",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The IP address of the consumer",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "96.242.151.245"
        },
        {
          "name": "challenge_text",
          "annotations": [],
          "description": "When providing a cipher, you can optionally provide a challenge text and challenge cipher that will allow us to verify that client side encryption worked properly, returning better error messages in some cases. The Flow JavaScript API uses the challenge to verify that the asymmetric encryption is working properly in the client.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "challenge_cipher",
          "annotations": [],
          "description": "When providing a cipher, you can optionally provide a challenge text and challenge cipher that will allow us to verify that client side encryption worked properly, returning better error messages in some cases. The Flow JavaScript API uses the challenge to verify that the asymmetric encryption is working properly in the client.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "token_type",
          "annotations": [],
          "description": "Determines whether or not you want to create a permanent, tokenized card or a one time use token. By default, authenticated API requests create permanent tokens. Unauthenticated requests will create one-time tokens - and you will get an error if you try to create a permanent token via an unauthorized request.",
          "attributes": [],
          "type": "token_type",
          "required": false
        }
      ]
    },
    {
      "plural": "card_nonce_forms",
      "name": "card_nonce_form",
      "description": "The card nonce form presents a one time token to exchange server side for a permanent, secure tokenized card",
      "attributes": [],
      "fields": [
        {
          "name": "token",
          "annotations": [
            "personal_data"
          ],
          "description": "The one time card nonce to exchange for a permanent card token. This value will start with F17",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "F17JNt5CXc0TsY8txqTRx9F40Cqn5YuQ30PkIMTTnnJSxLsmGmeDOrJ2wr4h"
        }
      ]
    },
    {
      "plural": "card_payment_sources",
      "name": "card_payment_source",
      "description": "Represents a saved credit card payment method.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "actions",
          "annotations": [],
          "description": "Indicates whether any additional actions are required to execute the payment.",
          "attributes": [],
          "type": "[payment_source_confirmation_action]",
          "required": false
        },
        {
          "name": "summary",
          "annotations": [],
          "description": "Contains the card summary for display purposes, e.g. to show the last 4 digits and card brand when confirming a credit card.",
          "attributes": [],
          "type": "card_payment_source_summary",
          "required": true
        }
      ]
    },
    {
      "plural": "card_payment_source_authorization_forms",
      "name": "card_payment_source_authorization_form",
      "description": "Creates an authorization for a transaction from a card payment source.",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Your unique identifier for this transaction, which if provided is used to implement idempotency. If not provided, we will assign.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "card_payment_source_id",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The card payment source id.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "order_number",
          "annotations": [],
          "description": "Client order number for which to authorize payment. We will automatically verify that this order exists and will authorize the total amount of the order in the currency of the order.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "The amount to authorize",
          "attributes": [],
          "type": "decimal",
          "required": true,
          "example": "120.38"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        },
        {
          "name": "browser_info",
          "annotations": [],
          "description": "Shopper browser info. If you are using 3DS2, this field is required.",
          "attributes": [],
          "type": "browser_info",
          "required": false
        }
      ]
    },
    {
      "plural": "card_payment_source_forms",
      "name": "card_payment_source_form",
      "description": "Contains a summary of a card, which is useful for displaying to a customer.",
      "attributes": [],
      "fields": [
        {
          "name": "customer_number",
          "annotations": [],
          "description": "The number that uniquely identifies a customer.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "card_id",
          "annotations": [],
          "description": "The card id associated with the source.",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "card_payment_source_summaries",
      "name": "card_payment_source_summary",
      "description": "Contains a summary of a card, which is useful for displaying to a customer.",
      "attributes": [],
      "fields": [
        {
          "name": "customer_number",
          "annotations": [],
          "description": "The number that uniquely identifies a customer.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "card",
          "annotations": [],
          "description": "Card details associated with the payment source.",
          "attributes": [],
          "type": "card_summary",
          "required": true
        }
      ]
    },
    {
      "plural": "card_references",
      "name": "card_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "token",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "card_summaries",
      "name": "card_summary",
      "description": "Card Summary is the card without the token",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "type",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "card_type",
          "required": true
        },
        {
          "name": "expiration",
          "annotations": [],
          "attributes": [],
          "type": "expiration",
          "required": true
        },
        {
          "name": "iin",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The issuer identification number (IIN) (formerly known as the Bank Identification Number) which are the leading digits of the card number.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "issuer",
          "annotations": [],
          "description": "Added in october 2018",
          "attributes": [],
          "type": "issuer_summary",
          "required": false
        },
        {
          "name": "last4",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Cleartext last 4 numbers of the card",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Cardholder name",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "address",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Cardholder billing address",
          "attributes": [],
          "type": "billing_address",
          "required": false
        }
      ]
    },
    {
      "plural": "card_token_forms",
      "name": "card_token_form",
      "attributes": [],
      "fields": [
        {
          "name": "token",
          "annotations": [
            "personal_data"
          ],
          "description": "The token referring to a previously tokenized card.",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "card_upserted_v2s",
      "name": "card_upserted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "card",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "card",
          "required": true
        }
      ]
    },
    {
      "plural": "card_versions",
      "name": "card_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "card",
          "annotations": [],
          "attributes": [],
          "type": "card",
          "required": true
        }
      ]
    },
    {
      "plural": "carriers",
      "name": "carrier",
      "description": "Partner that actually takes a shipment between places (ex: FedEx, DHL, SF Express)",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "ups"
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "UPS"
        },
        {
          "name": "tracking_url",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "https://wwwapps.ups.com/WebTracking/track?track=yes&trackNums="
        }
      ]
    },
    {
      "plural": "carrier_references",
      "name": "carrier_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "carrier_services",
      "name": "carrier_service",
      "description": "Specific service rendered by the carrier (fedex ground saturday, ups overnight weekend, etc)",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "ups-ground"
        },
        {
          "name": "carrier",
          "annotations": [],
          "attributes": [],
          "type": "carrier",
          "required": true,
          "example": "ups"
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "UPS Ground"
        }
      ]
    },
    {
      "plural": "cart_references",
      "name": "cart_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Equivalent of the cart token",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "catalogs",
      "name": "catalog",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "catalog_deleteds",
      "name": "catalog_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "catalog",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "master"
        }
      ]
    },
    {
      "plural": "catalog_item_deleteds",
      "name": "catalog_item_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "catalog",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "master"
        }
      ]
    },
    {
      "plural": "catalog_item_deleted_v2s",
      "name": "catalog_item_deleted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "item",
          "annotations": [],
          "attributes": [],
          "type": "item",
          "required": true
        }
      ]
    },
    {
      "plural": "catalog_item_documents",
      "name": "catalog_item_document",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "categories",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "minimum": 0,
          "required": true
        },
        {
          "name": "experiences",
          "annotations": [],
          "attributes": [],
          "type": "[experience_summary]",
          "minimum": 0,
          "required": true
        },
        {
          "name": "attributes",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "minimum": 0,
          "required": true
        },
        {
          "name": "images",
          "annotations": [],
          "description": "Available images",
          "attributes": [],
          "type": "catalog_item_document_images",
          "required": true
        }
      ]
    },
    {
      "plural": "catalog_item_document_images",
      "name": "catalog_item_document_images",
      "attributes": [],
      "fields": [
        {
          "name": "thumbnail",
          "annotations": [],
          "description": "The thumbnail image is the first image associated with the item that has a tag named 'thumbnail'",
          "attributes": [],
          "type": "image",
          "required": false
        }
      ]
    },
    {
      "plural": "catalog_item_export_types",
      "name": "catalog_item_export_type",
      "description": "Defines the filters that can be applied when requesting a catalog item data export",
      "attributes": [],
      "fields": [
        {
          "name": "numbers",
          "annotations": [],
          "description": "The specific list of item numbers to export",
          "attributes": [],
          "type": "[string]",
          "required": false
        },
        {
          "name": "q",
          "annotations": [],
          "description": "If specified, we select items by executing this search query",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "sort",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "catalog_item_references",
      "name": "catalog_item_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "catalog_item_summaries",
      "name": "catalog_item_summary",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "attributes",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "minimum": 0,
          "required": true
        }
      ]
    },
    {
      "plural": "catalog_item_upserteds",
      "name": "catalog_item_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "catalog",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "master"
        },
        {
          "name": "locale",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "currency",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "price",
          "annotations": [],
          "attributes": [],
          "type": "double",
          "required": true
        },
        {
          "name": "categories",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "required": true
        },
        {
          "name": "description",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "attributes",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "required": true
        },
        {
          "name": "dimensions",
          "annotations": [],
          "attributes": [],
          "type": "object",
          "required": true
        },
        {
          "name": "images",
          "annotations": [],
          "attributes": [],
          "type": "[object]",
          "required": true
        }
      ]
    },
    {
      "plural": "catalog_item_upserted_v2s",
      "name": "catalog_item_upserted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "item",
          "annotations": [],
          "attributes": [],
          "type": "item",
          "required": true
        }
      ]
    },
    {
      "plural": "catalog_price_book_item_documents",
      "name": "catalog_price_book_item_document",
      "description": "Represents the returned information for searching particular price book items",
      "attributes": [],
      "fields": [
        {
          "name": "price_book_key",
          "annotations": [],
          "description": "Corresponds with the price book key to which this price book item belongs.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "price_book_item_key",
          "annotations": [],
          "description": "The unique id for the price book key item.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "catalog",
          "annotations": [],
          "attributes": [],
          "type": "catalog_item_summary",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "The item price amount, in the currency of the price book.",
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "starts_at",
          "annotations": [],
          "description": "The date and time for the price to take effect.",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "ends_at",
          "annotations": [],
          "description": "The date and time for the price to stop taking effect. If not provided, no default end time will be set.",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        }
      ]
    },
    {
      "plural": "catalog_references",
      "name": "catalog_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "catalog_statisticses",
      "name": "catalog_statistics",
      "description": "Statistics covering product catalog item information, including total catalog item count, number of distinct categories, etc.",
      "attributes": [],
      "fields": [
        {
          "name": "items",
          "annotations": [],
          "description": "Total number of catalog items available from master catalog",
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "categories",
          "annotations": [],
          "description": "Distinct number of catalog item categories",
          "attributes": [],
          "type": "long",
          "required": true
        }
      ]
    },
    {
      "plural": "catalog_upserteds",
      "name": "catalog_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "catalog",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "master"
        }
      ]
    },
    {
      "plural": "catalog_versions",
      "name": "catalog_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "catalog",
          "annotations": [],
          "attributes": [],
          "type": "catalog",
          "required": true
        }
      ]
    },
    {
      "plural": "category_summaries",
      "name": "category_summary",
      "attributes": [],
      "fields": [
        {
          "name": "name",
          "annotations": [],
          "description": "The category, if known. If there is no category name, this indicates that the items in this bucket do not belong to any categories.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "count",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        }
      ]
    },
    {
      "plural": "centers",
      "name": "center",
      "description": "Represents a facility capable of fulfilling a shipment",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "description": "The key to use. If not provided, we will generate a unique key based on the name.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "address",
          "annotations": [],
          "description": "Shipping address used for the 'from' field in generating carrier labels and customs-related documentation such as the CN22 or commercial invoice.",
          "attributes": [],
          "type": "shipping_address",
          "required": true
        },
        {
          "name": "packaging",
          "annotations": [],
          "description": "Available types of packaging for shipment at this center",
          "attributes": [],
          "type": "[packaging]",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "description": "Long name of the facility. ex: Fosdick CT, Quiet Logistics Andover",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "services",
          "annotations": [],
          "description": "List of carrier service levels available at this center",
          "attributes": [],
          "type": "[available_service]",
          "required": true
        },
        {
          "name": "schedule",
          "annotations": [],
          "description": "Schedule of the origin center where shipment is originating. Contains normal operating hours, holiday periods, and cutoff.",
          "attributes": [],
          "type": "schedule",
          "required": true
        },
        {
          "name": "timezone",
          "annotations": [],
          "description": "The timezone name. Case insensitive. See https://api.flow.io/reference/timezones",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "capabilities",
          "annotations": [],
          "attributes": [],
          "type": "[center_capability]",
          "required": false
        },
        {
          "name": "partner_center",
          "annotations": [],
          "description": "If a center operates as a crossdock this contains information about the crossdock",
          "attributes": [],
          "type": "partner_center",
          "required": false
        }
      ]
    },
    {
      "plural": "center_deleteds",
      "name": "center_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "center",
          "annotations": [],
          "attributes": [],
          "type": "center",
          "required": true
        }
      ]
    },
    {
      "plural": "center_forms",
      "name": "center_form",
      "attributes": [],
      "fields": [
        {
          "name": "address",
          "annotations": [],
          "description": "Shipping address used for the 'from' field in generating carrier labels and customs-related documentation such as the CN22 or commercial invoice.",
          "attributes": [],
          "type": "shipping_address",
          "required": true
        },
        {
          "name": "packaging",
          "annotations": [],
          "description": "Available types of packaging for shipment at this center",
          "attributes": [],
          "type": "[packaging]",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "description": "Organization-provided name for the center",
          "attributes": [],
          "type": "string",
          "minimum": 3,
          "required": true
        },
        {
          "name": "services",
          "annotations": [],
          "description": "List of carrier service levels available at this center",
          "attributes": [],
          "type": "[available_service]",
          "required": true
        },
        {
          "name": "schedule",
          "annotations": [],
          "description": "Schedule of the origin center where shipment is originating. Contains normal operating hours, holiday periods, and cutoff.",
          "attributes": [],
          "type": "schedule",
          "required": true
        },
        {
          "name": "timezone",
          "annotations": [],
          "description": "The timezone name. Case insensitive. See https://api.flow.io/reference/timezones. If not explicitly provided, Flow will estimate the timezone based on address of the Center.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "key",
          "annotations": [],
          "description": "The key to use. If not provided, we will generate a unique key based on the name.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "capabilities",
          "annotations": [],
          "attributes": [],
          "type": "[center_capability]",
          "required": false
        },
        {
          "name": "partner_center_form",
          "annotations": [],
          "description": "If a center operates as a crossdock this contains information about the crossdock",
          "attributes": [],
          "type": "partner_center_form",
          "required": false
        }
      ]
    },
    {
      "plural": "center_queries",
      "name": "center_query",
      "attributes": [],
      "fields": [
        {
          "name": "q",
          "annotations": [],
          "description": "The query used to search for centers",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "center_references",
      "name": "center_reference",
      "attributes": [],
      "fields": [
        {
          "name": "organization_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "center_key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "center_summaries",
      "name": "center_summary",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "address",
          "annotations": [],
          "description": "Physical location of this center.",
          "attributes": [],
          "type": "shipping_address",
          "required": false
        }
      ]
    },
    {
      "plural": "center_upserteds",
      "name": "center_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "center",
          "annotations": [],
          "attributes": [],
          "type": "center",
          "required": true
        }
      ]
    },
    {
      "plural": "center_versions",
      "name": "center_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "center",
          "annotations": [],
          "attributes": [],
          "type": "center",
          "required": true
        }
      ]
    },
    {
      "plural": "checkout_attributes",
      "name": "checkout_attribute",
      "description": "A Checkout Attribute defines an attribute that will be made available via the checkout item content. This is useful if you would like to surface a specific attribute (like 'size' or 'color') in checkout.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "experience",
          "annotations": [],
          "attributes": [],
          "type": "experience_reference",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "attribute_keys",
          "annotations": [],
          "description": "The attribute keys containing the desired value. The first key that is defined will be selected. For example, specify ['size', 'sizeName'] to select the 'size' attribute if present, and if not the 'sizeName' attribute.",
          "attributes": [],
          "type": "[string]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "position",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "minimum": 0,
          "required": true
        }
      ]
    },
    {
      "plural": "checkout_attribute_forms",
      "name": "checkout_attribute_form",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "description": "Defaults to the key",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "experience_key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "attribute_keys",
          "annotations": [],
          "description": "The attribute keys containing the desired value. The first key that is defined will be selected. For example, specify ['size', 'sizeName'] to select the 'size' attribute if present, and if not the 'sizeName' attribute.",
          "attributes": [],
          "type": "[string]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "position",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "minimum": 0,
          "required": false
        }
      ]
    },
    {
      "plural": "checkout_item_contents",
      "name": "checkout_item_content",
      "description": "A Checkout Item Content provides information about an item to support rendering of that item in the context of checkout",
      "attributes": [],
      "fields": [
        {
          "name": "item",
          "annotations": [],
          "attributes": [],
          "type": "item",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "description",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "Returns a list of item attributes w/ intent 'checkout_content'",
          "attributes": [],
          "type": "[checkout_item_content_attribute]",
          "minimum": 0,
          "required": true
        },
        {
          "name": "image",
          "annotations": [],
          "description": "Provides the primary image to use in checkout. This image will be selected by finding the item image with tag 'checkout', defaulting to another available image if there is one.",
          "attributes": [],
          "type": "image",
          "required": false
        }
      ]
    },
    {
      "plural": "checkout_item_content_attributes",
      "name": "checkout_item_content_attribute",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "value",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "checkout_optin_responses",
      "name": "checkout_optin_responses",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "order_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "session_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "optin_responses",
          "annotations": [],
          "attributes": [],
          "type": "[optin_response]",
          "required": true
        }
      ]
    },
    {
      "plural": "checkout_optin_responses_deleteds",
      "name": "checkout_optin_responses_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "checkout_optin_responses_upserteds",
      "name": "checkout_optin_responses_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "checkout_optin_responses",
          "annotations": [],
          "attributes": [],
          "type": "checkout_optin_responses",
          "required": true
        }
      ]
    },
    {
      "plural": "checkout_references",
      "name": "checkout_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "checkout_settingses",
      "name": "checkout_settings",
      "attributes": [],
      "fields": [
        {
          "name": "configuration",
          "annotations": [],
          "attributes": [],
          "type": "experience_configuration_reference",
          "required": true
        }
      ]
    },
    {
      "plural": "checkout_tokens",
      "name": "checkout_token",
      "description": "Represents a secure token that can be used to redirect to Checkout UI",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Cryptographically secure token to use when redirecting to checkout",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "organization_reference",
          "required": true
        },
        {
          "name": "checkout",
          "annotations": [],
          "attributes": [],
          "type": "checkout_reference",
          "required": true
        },
        {
          "name": "order",
          "annotations": [],
          "attributes": [],
          "type": "order_number_reference",
          "deprecation": {
            "description": "Replaced by checkout"
          },
          "required": true
        },
        {
          "name": "urls",
          "annotations": [],
          "attributes": [],
          "type": "checkout_urls",
          "required": true
        },
        {
          "name": "expires_at",
          "annotations": [],
          "description": "The date / time on which this token expires",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "session",
          "annotations": [],
          "attributes": [],
          "type": "session_reference",
          "required": true
        },
        {
          "name": "customer",
          "annotations": [],
          "attributes": [],
          "type": "customer_reference",
          "required": false
        }
      ]
    },
    {
      "plural": "checkout_token_order_forms",
      "name": "checkout_token_order_form",
      "description": "Use this form to securly pass order and optional customer information to be created or updated.",
      "attributes": [],
      "fields": [
        {
          "name": "order_form",
          "annotations": [],
          "attributes": [],
          "type": "order_form",
          "required": true
        },
        {
          "name": "customer",
          "annotations": [],
          "attributes": [],
          "type": "customer_form",
          "required": false
        },
        {
          "name": "address_book",
          "annotations": [],
          "attributes": [],
          "type": "customer_address_book_form",
          "required": false
        },
        {
          "name": "payment_sources",
          "annotations": [],
          "attributes": [],
          "type": "[payment_source_form]",
          "required": false
        },
        {
          "name": "session_id",
          "annotations": [],
          "description": "We will update the order, if needed, to this session ID",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "urls",
          "annotations": [],
          "attributes": [],
          "type": "checkout_urls_form",
          "required": false
        },
        {
          "name": "identifiers",
          "annotations": [],
          "description": "Optionally provide one or more order identifiers to attach to the order automatically.",
          "attributes": [],
          "type": "[order_submission_identifier_form]",
          "required": false
        }
      ]
    },
    {
      "plural": "checkout_token_reference_forms",
      "name": "checkout_token_reference_form",
      "description": "Use this form when order number and session id are known. Optional customer information will be created or updated.",
      "attributes": [],
      "fields": [
        {
          "name": "order_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "session_id",
          "annotations": [],
          "description": "We will update the order, if needed, to this session ID",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "urls",
          "annotations": [],
          "attributes": [],
          "type": "checkout_urls_form",
          "required": true
        }
      ]
    },
    {
      "plural": "checkout_urlses",
      "name": "checkout_urls",
      "attributes": [],
      "fields": [
        {
          "name": "continue_shopping",
          "annotations": [],
          "description": "If specified, will be stored on the order in the attribute named 'flow_continue_shopping_url' and will be used as the target URL for when a user chooses to Continue Shopping from Flow Checkout UI",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "confirmation",
          "annotations": [],
          "description": "If specified, will be stored on the order in the attribute named 'flow_confirmation_url' and indicates that instead of showing the Flow Checkout UI Confirmation page, we redirect to this URL instead.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "invalid_checkout",
          "annotations": [],
          "description": "If specified, the user will be redirected to the Invalid Checkout URL when Checkout determines that it cannot proceed with accepting order (e.g. perhaps authorization expired, inventory out of stock, etc). This URL should expect an HTTP Post with an order_put_form as the body.",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "checkout_urls_forms",
      "name": "checkout_urls_form",
      "attributes": [],
      "fields": [
        {
          "name": "continue_shopping",
          "annotations": [],
          "description": "If specified, will be stored on the order in the attribute named 'flow_continue_shopping_url' and will be used as the target URL for when a user chooses to Continue Shopping from Flow Checkout UI",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "confirmation",
          "annotations": [],
          "description": "If specified, will be stored on the order in the attribute named 'flow_confirmation_url' and indicates that instead of showing the Flow Checkout UI Confirmation page, we redirect to this URL instead.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "invalid_checkout",
          "annotations": [],
          "description": "If specified, the user will be redirected to the Invalid Checkout URL when Checkout determines that it cannot proceed with accepting order (e.g. perhaps authorization expired, inventory out of stock, etc). This URL should expect an HTTP Post with an order_put_form as the body.",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "cleartexts",
      "name": "cleartext",
      "description": "The actual value of the API token. This is modeled as a separate resource as it is fetched only on demand.",
      "attributes": [],
      "fields": [
        {
          "name": "value",
          "annotations": [],
          "description": "The actual cleartext value of the token",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "commercial_invoice_fees",
      "name": "commercial_invoice_fee",
      "attributes": [],
      "fields": [
        {
          "name": "amount",
          "annotations": [],
          "attributes": [],
          "type": "money",
          "required": true
        }
      ]
    },
    {
      "plural": "consumer_invoices",
      "name": "consumer_invoice",
      "description": "The consumer invoice represents the details of a set of items from a given order. This may represent either the full order or a partial fulfillment.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "A sequential number, unique by organization and merchant of record entity name",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "consumer_invoice_status",
          "required": true
        },
        {
          "name": "date",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "order",
          "annotations": [],
          "attributes": [],
          "type": "consumer_invoice_order_summary",
          "required": true
        },
        {
          "name": "entity",
          "annotations": [],
          "attributes": [],
          "type": "merchant_of_record_entity",
          "required": true
        },
        {
          "name": "payments",
          "annotations": [],
          "attributes": [],
          "type": "[consumer_invoice_payment]",
          "required": true
        },
        {
          "name": "center",
          "annotations": [],
          "description": "The originating fulfillment center. Will be empty for digital goods.",
          "attributes": [],
          "type": "consumer_invoice_center_reference",
          "required": false
        },
        {
          "name": "destination",
          "annotations": [],
          "attributes": [],
          "type": "order_address",
          "required": true
        },
        {
          "name": "billing_address",
          "annotations": [],
          "attributes": [],
          "type": "billing_address",
          "required": false
        },
        {
          "name": "lines",
          "annotations": [],
          "attributes": [],
          "type": "[consumer_invoice_line]",
          "required": true
        },
        {
          "name": "documents",
          "annotations": [],
          "attributes": [],
          "type": "[consumer_invoice_document]",
          "required": true
        },
        {
          "name": "attributes",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "required": true
        },
        {
          "name": "tax_registration",
          "annotations": [],
          "attributes": [],
          "type": "tax_registration",
          "required": false
        },
        {
          "name": "customer_type",
          "annotations": [],
          "attributes": [],
          "type": "consumer_invoice_customer_type",
          "required": false
        }
      ]
    },
    {
      "plural": "consumer_invoice_center_references",
      "name": "consumer_invoice_center_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "address",
          "annotations": [],
          "attributes": [],
          "type": "address",
          "required": true
        }
      ]
    },
    {
      "plural": "consumer_invoice_deleteds",
      "name": "consumer_invoice_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "description": "The date/time of the request",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "consumer_invoice",
          "annotations": [],
          "attributes": [],
          "type": "consumer_invoice",
          "required": true
        }
      ]
    },
    {
      "plural": "consumer_invoice_documents",
      "name": "consumer_invoice_document",
      "attributes": [],
      "fields": [
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "consumer_invoice_document_type",
          "required": true
        },
        {
          "name": "language",
          "annotations": [],
          "description": "The language in which this invoice was generated. Value is an ISO 639 2 language code as defined in https://api.flow.io/reference/languages",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "en"
        },
        {
          "name": "url",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "consumer_invoice_forms",
      "name": "consumer_invoice_form",
      "attributes": [],
      "fields": [
        {
          "name": "order_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "attributes",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "consumer_invoice_form_by_orders",
      "name": "consumer_invoice_form_by_order",
      "attributes": [],
      "fields": [
        {
          "name": "attributes",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "consumer_invoice_levies",
      "name": "consumer_invoice_levy",
      "attributes": [],
      "fields": [
        {
          "name": "rate",
          "annotations": [],
          "attributes": [],
          "type": "decimal",
          "required": true,
          "example": "0.2"
        },
        {
          "name": "value",
          "annotations": [],
          "attributes": [],
          "type": "price",
          "required": true
        }
      ]
    },
    {
      "plural": "consumer_invoice_levy_forms",
      "name": "consumer_invoice_levy_form",
      "attributes": [],
      "fields": [
        {
          "name": "rate",
          "annotations": [],
          "attributes": [],
          "type": "decimal",
          "required": true,
          "example": "0.2"
        },
        {
          "name": "amount",
          "annotations": [],
          "attributes": [],
          "type": "decimal",
          "required": true
        }
      ]
    },
    {
      "plural": "consumer_invoice_line_discounts",
      "name": "consumer_invoice_line_discount",
      "attributes": [],
      "fields": [
        {
          "name": "price",
          "annotations": [],
          "description": "The value of the discount. Amount will be negative",
          "attributes": [],
          "type": "price",
          "required": true
        }
      ]
    },
    {
      "plural": "consumer_invoice_line_discount_forms",
      "name": "consumer_invoice_line_discount_form",
      "attributes": [],
      "fields": [
        {
          "name": "price",
          "annotations": [],
          "description": "The value of the discount. Amount must be negative",
          "attributes": [],
          "type": "decimal",
          "required": true,
          "example": "-10"
        }
      ]
    },
    {
      "plural": "consumer_invoice_line_items",
      "name": "consumer_invoice_line_item",
      "attributes": [],
      "fields": [
        {
          "name": "item",
          "annotations": [],
          "attributes": [],
          "type": "item_reference",
          "required": true
        },
        {
          "name": "description",
          "annotations": [],
          "description": "The description of this item as mentioned on the invoice",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "quantity",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "minimum": 1,
          "required": true
        },
        {
          "name": "unit_price",
          "annotations": [],
          "attributes": [],
          "type": "price",
          "required": true
        },
        {
          "name": "unit_discount",
          "annotations": [],
          "attributes": [],
          "type": "price",
          "required": false
        },
        {
          "name": "unit_tax",
          "annotations": [],
          "attributes": [],
          "type": "consumer_invoice_levy",
          "required": false
        },
        {
          "name": "unit_duty",
          "annotations": [],
          "attributes": [],
          "type": "consumer_invoice_levy",
          "required": false
        }
      ]
    },
    {
      "plural": "consumer_invoice_line_item_forms",
      "name": "consumer_invoice_line_item_form",
      "attributes": [],
      "fields": [
        {
          "name": "item_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "quantity",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "minimum": 1,
          "required": true
        },
        {
          "name": "unit_price",
          "annotations": [],
          "description": "The unit price",
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "unit_discount",
          "annotations": [],
          "description": "The value of the discount. Amount must be negative",
          "attributes": [],
          "type": "decimal",
          "required": false,
          "example": "-10"
        },
        {
          "name": "unit_tax",
          "annotations": [],
          "attributes": [],
          "type": "consumer_invoice_levy_form",
          "required": false
        },
        {
          "name": "unit_duty",
          "annotations": [],
          "attributes": [],
          "type": "consumer_invoice_levy_form",
          "required": false
        }
      ]
    },
    {
      "plural": "consumer_invoice_line_shippings",
      "name": "consumer_invoice_line_shipping",
      "attributes": [],
      "fields": [
        {
          "name": "price",
          "annotations": [],
          "attributes": [],
          "type": "price",
          "required": true
        },
        {
          "name": "discount",
          "annotations": [],
          "attributes": [],
          "type": "price",
          "required": false
        },
        {
          "name": "tax",
          "annotations": [],
          "attributes": [],
          "type": "consumer_invoice_levy",
          "required": false
        },
        {
          "name": "duty",
          "annotations": [],
          "attributes": [],
          "type": "consumer_invoice_levy",
          "required": false
        }
      ]
    },
    {
      "plural": "consumer_invoice_line_shipping_forms",
      "name": "consumer_invoice_line_shipping_form",
      "attributes": [],
      "fields": [
        {
          "name": "price",
          "annotations": [],
          "description": "The price of shipping",
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "discount",
          "annotations": [],
          "description": "The value of the discount. Amount must be negative",
          "attributes": [],
          "type": "decimal",
          "required": false,
          "example": "-10"
        },
        {
          "name": "tax",
          "annotations": [],
          "attributes": [],
          "type": "consumer_invoice_levy_form",
          "required": false
        },
        {
          "name": "duty",
          "annotations": [],
          "attributes": [],
          "type": "consumer_invoice_levy_form",
          "required": false
        }
      ]
    },
    {
      "plural": "consumer_invoice_order_summaries",
      "name": "consumer_invoice_order_summary",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "submitted_at",
          "annotations": [],
          "description": "The timestamp on which the order is submitted",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        }
      ]
    },
    {
      "plural": "consumer_invoice_payments",
      "name": "consumer_invoice_payment",
      "attributes": [],
      "fields": [
        {
          "name": "date",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "description",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "value",
          "annotations": [],
          "attributes": [],
          "type": "price",
          "required": true
        },
        {
          "name": "billing_address",
          "annotations": [],
          "attributes": [],
          "type": "billing_address",
          "required": false
        }
      ]
    },
    {
      "plural": "consumer_invoice_references",
      "name": "consumer_invoice_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "consumer_invoice_upserteds",
      "name": "consumer_invoice_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "description": "The date/time of the request",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "consumer_invoice",
          "annotations": [],
          "attributes": [],
          "type": "consumer_invoice",
          "required": true
        }
      ]
    },
    {
      "plural": "contacts",
      "name": "contact",
      "description": "Defines structured fields for a contact person. Typically used for specifying contact person for an account, shipment, or organization representative",
      "attributes": [],
      "fields": [
        {
          "name": "name",
          "annotations": [
            "personal_data"
          ],
          "description": "Personal information of point-of-contact",
          "attributes": [],
          "type": "name",
          "required": true
        },
        {
          "name": "company",
          "annotations": [
            "personal_data"
          ],
          "description": "Business entity or organization name of this contact",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "email",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "phone",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "countries",
      "name": "country",
      "description": "ISO 3166 country codes. Note Flow APIs will accept either the 2 or 3 character country code, but internally we normalize data and store as the 3 character, upper case ISO code. See https://api.flow.io/reference/countries",
      "attributes": [],
      "fields": [
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "United States of America"
        },
        {
          "name": "iso_3166_2",
          "annotations": [],
          "description": "ISO 3166 2-character country code. See https://api.flow.io/reference/countries",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "US"
        },
        {
          "name": "iso_3166_3",
          "annotations": [],
          "description": "ISO 3166 3-character country code. See https://api.flow.io/reference/countries",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "USA"
        },
        {
          "name": "languages",
          "annotations": [],
          "description": "A list of the languages spoken in this country",
          "attributes": [],
          "type": "[string]",
          "minimum": 0,
          "required": true
        },
        {
          "name": "measurement_system",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "metric or imperial"
        },
        {
          "name": "default_currency",
          "annotations": [],
          "description": "ISO 4217 3-character currency code. See https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "USD"
        },
        {
          "name": "default_language",
          "annotations": [],
          "description": "ISO 639 2-character language code. See https://api.flow.io/reference/languages",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "en"
        },
        {
          "name": "timezones",
          "annotations": [],
          "description": "A list of canonical timezone IDs for the country. See http://joda-time.sourceforge.net/timezones.html",
          "attributes": [],
          "type": "[string]",
          "required": true,
          "example": "America/New_York"
        },
        {
          "name": "default_delivered_duty",
          "annotations": [],
          "description": "Default delivered duty value. See https://en.wikipedia.org/wiki/Incoterms for more information",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "unpaid"
        }
      ]
    },
    {
      "plural": "country_availabilities",
      "name": "country_availability",
      "attributes": [],
      "fields": [
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "item_availability_status",
          "required": true
        },
        {
          "name": "countries",
          "annotations": [],
          "description": "List of iso-3166-3 country codes. See https://api.flow.io/reference/countries.",
          "attributes": [],
          "type": "[string]",
          "required": true
        }
      ]
    },
    {
      "plural": "country_defaults",
      "name": "country_defaults",
      "description": "Provides country level default settings for currency, language, etc.",
      "attributes": [],
      "fields": [
        {
          "name": "country",
          "annotations": [],
          "description": "The ISO 3166-3 code for the country. Case insensitive. See https://api.flow.io/reference/countries",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAN"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The default currency for this country as a ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        },
        {
          "name": "language",
          "annotations": [],
          "description": "The default language for this country as a ISO 639 2 language code as defined in https://api.flow.io/reference/languages",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "fr"
        }
      ]
    },
    {
      "plural": "country_pickers",
      "name": "country_picker",
      "description": "The Country Picker manages the configuration of your country picker.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "source",
          "annotations": [],
          "attributes": [],
          "type": "country_picker_source",
          "required": true
        }
      ]
    },
    {
      "plural": "country_picker_forms",
      "name": "country_picker_form",
      "attributes": [],
      "fields": [
        {
          "default": "experience",
          "name": "source",
          "annotations": [],
          "attributes": [],
          "type": "country_picker_source",
          "required": true
        }
      ]
    },
    {
      "plural": "country_shipping_pricings",
      "name": "country_shipping_pricing",
      "attributes": [],
      "fields": [
        {
          "name": "pricing",
          "annotations": [],
          "attributes": [],
          "type": "item_shipping_pricing",
          "required": true
        },
        {
          "name": "countries",
          "annotations": [],
          "description": "List of iso-3166-3 country codes. See https://api.flow.io/reference/countries.",
          "attributes": [],
          "type": "[string]",
          "required": true
        }
      ]
    },
    {
      "plural": "credit_memos",
      "name": "credit_memo",
      "description": "The credit memo represents the details of a refund and the reasons for the issuance of the refund.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "A sequential number, unique by organization and merchant of record entity name",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "consumer_invoice_status",
          "required": true
        },
        {
          "name": "date",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "invoice",
          "annotations": [],
          "description": "The invoice against which the refund was issued",
          "attributes": [],
          "type": "consumer_invoice_reference",
          "required": true
        },
        {
          "name": "entity",
          "annotations": [],
          "attributes": [],
          "type": "merchant_of_record_entity",
          "required": true
        },
        {
          "name": "payments",
          "annotations": [],
          "attributes": [],
          "type": "[consumer_invoice_payment]",
          "required": true
        },
        {
          "name": "lines",
          "annotations": [],
          "attributes": [],
          "type": "[consumer_invoice_line]",
          "required": true
        },
        {
          "name": "documents",
          "annotations": [],
          "attributes": [],
          "type": "[consumer_invoice_document]",
          "required": true
        },
        {
          "name": "attributes",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "required": true
        },
        {
          "name": "tax_registration",
          "annotations": [],
          "attributes": [],
          "type": "tax_registration",
          "required": false
        }
      ]
    },
    {
      "plural": "credit_memo_deleteds",
      "name": "credit_memo_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "description": "The date/time of the request",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "credit_memo",
          "annotations": [],
          "attributes": [],
          "type": "credit_memo",
          "required": true
        }
      ]
    },
    {
      "plural": "credit_memo_forms",
      "name": "credit_memo_form",
      "description": "A credit memo form defines the information needed to create a credit memo. You must provide a way to identify the refund issued - either by id, key or identifier.",
      "attributes": [],
      "fields": [
        {
          "name": "refund_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "refund_key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "refund_identifier",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "lines",
          "annotations": [],
          "attributes": [],
          "type": "[consumer_invoice_line_form]",
          "required": true
        },
        {
          "name": "attributes",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "credit_memo_upserteds",
      "name": "credit_memo_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "description": "The date/time of the request",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "credit_memo",
          "annotations": [],
          "attributes": [],
          "type": "credit_memo",
          "required": true
        }
      ]
    },
    {
      "plural": "credit_payments",
      "name": "credit_payment",
      "description": "A Credit Payment records a 'non cash' payment against an order (e.g. a store credit, gift card, etc.), recording the amount of that credit and additional details to reconcile payments. The primary purpose of the credit payment is to record that a payment has been made against an order so the remaining balance can be correctly computed.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "order",
          "annotations": [],
          "attributes": [],
          "type": "expandable_order",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "description",
          "annotations": [],
          "description": "Description to show to the user describing the source of this credit payment",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "value",
          "annotations": [],
          "description": "The value of the credit in the local and base currencies of the associated order. This value will match the original credit payment if the currency is the same as the order or otherwise will match the currency of the order",
          "attributes": [],
          "type": "price_with_base",
          "required": true
        },
        {
          "name": "original",
          "annotations": [],
          "description": "The provided value and maximum value amounts and currencies applicable fot the store credit",
          "attributes": [],
          "type": "original_prices",
          "required": true
        },
        {
          "name": "attributes",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "required": true
        }
      ]
    },
    {
      "plural": "credit_payment_errors",
      "name": "credit_payment_error",
      "attributes": [],
      "fields": [
        {
          "name": "code",
          "annotations": [],
          "attributes": [],
          "type": "credit_payment_error_code",
          "required": true
        },
        {
          "name": "messages",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "codes",
          "annotations": [],
          "attributes": [],
          "type": "[credit_payment_error_code]",
          "minimum": 1,
          "required": true
        }
      ]
    },
    {
      "plural": "credit_payment_forms",
      "name": "credit_payment_form",
      "attributes": [],
      "fields": [
        {
          "name": "order_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "description",
          "annotations": [],
          "description": "Description to show to the user describing the source of this credit payment",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "max",
          "annotations": [],
          "description": "Indicates the maximum amount applicable for this credit payment.",
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The ISO-4217 3 character currency code in which the amount is calculated.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "attributes",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "credit_payment_versions",
      "name": "credit_payment_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "credit_payment",
          "annotations": [],
          "attributes": [],
          "type": "credit_payment",
          "required": true
        }
      ]
    },
    {
      "plural": "crossdock_ratecard_fees",
      "name": "crossdock_ratecard_fee",
      "attributes": [],
      "fields": [
        {
          "name": "amount",
          "annotations": [],
          "attributes": [],
          "type": "money",
          "required": true
        }
      ]
    },
    {
      "plural": "crossdock_shipments",
      "name": "crossdock_shipment",
      "attributes": [],
      "fields": [
        {
          "name": "partner_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "center_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "tracking_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "order_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "crossdock_shipment_upserteds",
      "name": "crossdock_shipment_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "crossdock_shipment",
          "annotations": [],
          "attributes": [],
          "type": "crossdock_shipment",
          "required": true
        }
      ]
    },
    {
      "plural": "csv_price_book_item_export_rows",
      "name": "csv_price_book_item_export_row",
      "description": "Represents the format used to export price book item documents",
      "attributes": [],
      "fields": [
        {
          "name": "price_book_key",
          "annotations": [],
          "description": "Corresponds with the price book key to which this price book item belongs.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "price_book_item_key",
          "annotations": [],
          "description": "The unique id for the price book key item.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "item_number",
          "annotations": [],
          "description": "Corresponds with the unique product id from the ingested price book.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "item_name",
          "annotations": [],
          "description": "The product name of the price book item.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "The item price amount, in the currency of the price book.",
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "item_attributes",
          "annotations": [],
          "description": "Optionally specify values for any of the catalog item attributes that have an intent of price, e.g. add a 'compare_at' or 'msrp' price here.",
          "attributes": [],
          "type": "map[string]",
          "required": false
        },
        {
          "name": "starts_at",
          "annotations": [],
          "description": "The date and time for the price to take effect.",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "ends_at",
          "annotations": [],
          "description": "The date and time for the price to stop taking effect. If not provided, no default end time will be set.",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        }
      ]
    },
    {
      "plural": "currencies",
      "name": "currency",
      "description": "ISO 4217 3-character currency code. See https://api.flow.io/reference/currencies",
      "attributes": [],
      "fields": [
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "US Dollar"
        },
        {
          "name": "iso_4217_3",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "USD"
        },
        {
          "name": "number_decimals",
          "annotations": [],
          "description": "The number of decimal places used by the given currency. For example, USD has 2 decimals while JPY has 0.",
          "attributes": [],
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        {
          "name": "symbols",
          "annotations": [],
          "attributes": [],
          "type": "currency_symbols",
          "required": false
        },
        {
          "name": "default_locale",
          "annotations": [],
          "description": "The locale id of the default locale to use when rendering this currency",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "currency_formats",
      "name": "currency_format",
      "attributes": [],
      "fields": [
        {
          "name": "symbol",
          "annotations": [],
          "attributes": [],
          "type": "currency_symbol_format",
          "required": true
        },
        {
          "name": "label_formatters",
          "annotations": [],
          "attributes": [],
          "type": "[currency_label_formatter]",
          "required": true
        }
      ]
    },
    {
      "plural": "currency_format_deleteds",
      "name": "currency_format_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "currency_format_upserteds",
      "name": "currency_format_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "experience_key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "symbol",
          "annotations": [],
          "attributes": [],
          "type": "currency_symbol_format",
          "required": true
        },
        {
          "name": "label_formatters",
          "annotations": [],
          "attributes": [],
          "type": "[currency_label_formatter]",
          "required": true
        }
      ]
    },
    {
      "plural": "currency_symbolses",
      "name": "currency_symbols",
      "description": "Defines one or more symbols representing this currency",
      "attributes": [],
      "fields": [
        {
          "name": "primary",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "A$"
        },
        {
          "name": "narrow",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "$"
        }
      ]
    },
    {
      "plural": "customers",
      "name": "customer",
      "description": "A customer represents the actual person placing an order.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Customer identification number as represented in the client's system",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "email",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Customer email address",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "name",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "name",
          "required": false
        },
        {
          "name": "phone",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Customer phone number",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "customer_address_book",
      "name": "customer_address_book",
      "description": "A composed model representing a customer's address book contacts.",
      "attributes": [],
      "fields": [
        {
          "name": "contacts",
          "annotations": [],
          "attributes": [],
          "type": "[customer_address_book_contact]",
          "required": true
        }
      ]
    },
    {
      "plural": "customer_address_book_contacts",
      "name": "customer_address_book_contact",
      "description": "Preferences may indicate a contact is preferred for billing, invoicing, and/or shipping.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "address",
          "annotations": [],
          "attributes": [],
          "type": "address",
          "required": true
        },
        {
          "name": "contact",
          "annotations": [],
          "attributes": [],
          "type": "contact",
          "required": true
        },
        {
          "name": "address_preferences",
          "annotations": [],
          "attributes": [],
          "type": "[customer_address_preference]",
          "required": true
        }
      ]
    },
    {
      "plural": "customer_address_book_contact_deleteds",
      "name": "customer_address_book_contact_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "customer_address_book_contact",
          "annotations": [],
          "attributes": [],
          "type": "customer_address_book_contact",
          "required": true
        }
      ]
    },
    {
      "plural": "customer_address_book_contact_forms",
      "name": "customer_address_book_contact_form",
      "attributes": [],
      "fields": [
        {
          "name": "address",
          "annotations": [],
          "attributes": [],
          "type": "address",
          "required": true
        },
        {
          "name": "contact",
          "annotations": [],
          "attributes": [],
          "type": "contact",
          "required": false
        },
        {
          "name": "address_preferences",
          "annotations": [],
          "attributes": [],
          "type": "[customer_address_preference]",
          "required": false,
          "example": "[\"billing\", \"shipping\"]"
        }
      ]
    },
    {
      "plural": "customer_address_book_contact_upserteds",
      "name": "customer_address_book_contact_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "customer_address_book_contact",
          "annotations": [],
          "attributes": [],
          "type": "customer_address_book_contact",
          "required": true
        }
      ]
    },
    {
      "plural": "customer_address_book_forms",
      "name": "customer_address_book_form",
      "description": "Represents address book contacts to append in bulk.",
      "attributes": [],
      "fields": [
        {
          "name": "contacts",
          "annotations": [],
          "attributes": [],
          "type": "[customer_address_book_contact_form]",
          "required": true
        }
      ]
    },
    {
      "plural": "customer_address_preferences",
      "name": "customer_address_preference",
      "description": "Represents a customer address preference. Only a single address book contact can be associated per type. If contact is created or updated with a preference, existing preferences of the same type will be removed.",
      "attributes": [],
      "fields": [
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "customer_address_type",
          "required": true
        }
      ]
    },
    {
      "plural": "customer_bundles",
      "name": "customer_bundle",
      "description": "A bundle of all the content needed to render customer data.",
      "attributes": [],
      "fields": [
        {
          "name": "customer",
          "annotations": [],
          "attributes": [],
          "type": "customer",
          "required": true
        },
        {
          "name": "last_used",
          "annotations": [],
          "attributes": [],
          "type": "customer_last_used",
          "required": false
        }
      ]
    },
    {
      "plural": "customer_deleteds",
      "name": "customer_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "customer",
          "annotations": [],
          "attributes": [],
          "type": "customer",
          "required": true
        }
      ]
    },
    {
      "plural": "customer_forms",
      "name": "customer_form",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Customer identification number as represented in the client's system",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "email",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Customer email address",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "name",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "name",
          "required": false
        },
        {
          "name": "phone",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Customer phone number",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "customer_invoices",
      "name": "customer_invoice",
      "attributes": [],
      "fields": [
        {
          "name": "address",
          "annotations": [],
          "description": "The address to be used for invoicing and harmonization.",
          "attributes": [],
          "type": "billing_address",
          "required": false
        }
      ]
    },
    {
      "plural": "customer_last_useds",
      "name": "customer_last_used",
      "description": "Last used details pertaining to a customer.",
      "attributes": [],
      "fields": [
        {
          "name": "order",
          "annotations": [],
          "attributes": [],
          "type": "customer_order",
          "required": true
        },
        {
          "name": "payment",
          "annotations": [],
          "attributes": [],
          "type": "customer_payment",
          "required": true
        }
      ]
    },
    {
      "plural": "customer_orders",
      "name": "customer_order",
      "description": "Order details pertaining to a customer.",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "destination",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "order_address",
          "required": true
        },
        {
          "name": "payments",
          "annotations": [],
          "attributes": [],
          "type": "[order_payment]",
          "required": false
        },
        {
          "name": "submitted_at",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        }
      ]
    },
    {
      "plural": "customer_payments",
      "name": "customer_payment",
      "description": "Customer payment details.",
      "attributes": [],
      "fields": [
        {
          "name": "payment_methods",
          "annotations": [],
          "description": "Last used payment methods pertaining to a customer.",
          "attributes": [],
          "type": "[payment_method]",
          "required": true
        }
      ]
    },
    {
      "plural": "customer_put_forms",
      "name": "customer_put_form",
      "attributes": [],
      "fields": [
        {
          "name": "email",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Customer email address",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "name",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "name",
          "required": false
        },
        {
          "name": "phone",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Customer phone number",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "customer_references",
      "name": "customer_reference",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "Customer identification number as represented in the client's system",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "customer_tokens",
      "name": "customer_token",
      "description": "Represents a mapping between a customer number and a token",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "customer",
          "annotations": [],
          "description": "Customer number as represented in the client's system",
          "attributes": [],
          "type": "customer_reference",
          "required": true
        },
        {
          "name": "token",
          "annotations": [],
          "description": "A crytographically secure string to identify a Flow customer",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "customer_upserteds",
      "name": "customer_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "customer",
          "annotations": [],
          "attributes": [],
          "type": "customer",
          "required": true
        }
      ]
    },
    {
      "plural": "cvvs",
      "name": "cvv",
      "description": "Represents the card verification results",
      "attributes": [],
      "fields": [
        {
          "name": "code",
          "annotations": [],
          "attributes": [],
          "type": "cvv_code",
          "required": true
        },
        {
          "name": "description",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "datetime_ranges",
      "name": "datetime_range",
      "attributes": [],
      "fields": [
        {
          "name": "from",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "to",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        }
      ]
    },
    {
      "plural": "ddp_ratecard_fees",
      "name": "ddp_ratecard_fee",
      "attributes": [],
      "fields": [
        {
          "name": "amount",
          "annotations": [],
          "attributes": [],
          "type": "decimal",
          "required": true
        }
      ]
    },
    {
      "plural": "delivered_duty_settings",
      "name": "delivered_duty_setting",
      "attributes": [],
      "fields": [
        {
          "name": "default",
          "annotations": [],
          "description": "Default delivered duty setting based on experience default settings and reference data.",
          "attributes": [],
          "type": "delivered_duty",
          "required": true
        },
        {
          "name": "available",
          "annotations": [],
          "description": "Available delivered duty options to pick.",
          "attributes": [],
          "type": "[delivered_duty]",
          "required": true
        },
        {
          "name": "display",
          "annotations": [],
          "attributes": [],
          "type": "delivered_duty_display_type",
          "required": false
        }
      ]
    },
    {
      "plural": "delivery_items",
      "name": "delivery_item",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "quantity",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "minimum": 1,
          "required": true
        },
        {
          "name": "shipment_estimate",
          "annotations": [],
          "description": "For items that may not immediately ship out from the origin because of different models of inventory (e.g. drop-ship, sell-first), this is a way for a client to communicate when the items can ship out. This will be used to calculate delivery option windows.",
          "attributes": [],
          "type": "datetime_range",
          "required": false
        },
        {
          "name": "price",
          "annotations": [],
          "description": "The price of this item for this order. If not specified, we will use the item price from the experience",
          "attributes": [],
          "type": "money_with_optional_base",
          "required": false
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "A set of key/value pairs that you can attach to the order. It can be useful for storing additional information about the charge in a structured format.",
          "attributes": [],
          "type": "map[string]",
          "required": false
        },
        {
          "name": "center",
          "annotations": [],
          "description": "Optional center key associated with this item. Used for orders and quotes to specify where to ship an item from. If not specified, Flow will infer based on inventory setup.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "line_number",
          "annotations": [],
          "description": "The position of this item in the lines/items collections on an order. Used to keep track of multiple deliveries.",
          "attributes": [],
          "type": "long",
          "required": false
        }
      ]
    },
    {
      "plural": "delivery_options",
      "name": "delivery_option",
      "description": "Represents a way to fulfill a delivery, including an estimates for the date range and cost",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "cost",
          "annotations": [],
          "description": "Sum of all cost details, including actual shipping cost and any fees levied by partner center or shipping carrier.",
          "attributes": [],
          "type": "price_with_base_and_details",
          "required": true
        },
        {
          "name": "delivered_duty",
          "annotations": [],
          "attributes": [],
          "type": "delivered_duty",
          "required": true
        },
        {
          "name": "price",
          "annotations": [],
          "description": "Price of shipping to be used for the end-customer selecting this option. Can be actual cost, etc.",
          "attributes": [],
          "type": "price_with_base_and_details",
          "required": true
        },
        {
          "name": "service",
          "annotations": [],
          "attributes": [],
          "type": "service_summary",
          "required": true
        },
        {
          "name": "tier",
          "annotations": [],
          "attributes": [],
          "type": "tier_summary",
          "required": true
        },
        {
          "name": "window",
          "annotations": [],
          "attributes": [],
          "type": "delivery_window",
          "required": true
        },
        {
          "name": "rule_outcome",
          "annotations": [],
          "description": "Tier rule outcome used to generate the delivery option price. This would be an indication whether something was a flat rate or at cost.",
          "attributes": [],
          "type": "tier_rule_outcome",
          "required": false
        },
        {
          "name": "weight",
          "annotations": [],
          "attributes": [],
          "type": "option_weight_estimates",
          "required": false
        },
        {
          "name": "send_to",
          "annotations": [
            "personal_data"
          ],
          "description": "Intermediate destination required before going to final destination",
          "attributes": [],
          "type": "shipping_address",
          "required": false
        },
        {
          "name": "surcharge",
          "annotations": [],
          "description": "Surcharges to be paid for by the end-customer.",
          "attributes": [],
          "type": "price_with_base_and_details",
          "required": false
        },
        {
          "name": "ratecard_owner",
          "annotations": [],
          "attributes": [],
          "type": "ratecard_owner",
          "required": false
        }
      ]
    },
    {
      "plural": "delivery_option_cost_components",
      "name": "delivery_option_cost_component",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "delivery_option_cost_detail_component_key",
          "required": true,
          "example": "ratecard_fuel_surcharge_fee, center_inbound_carton_fee"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The ISO-4217 3 character currency code in which the amount is calculated.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "Sum of all delivery option cost components in this detail.",
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "label",
          "annotations": [],
          "description": "The formatted label for this cost detail that should be displayed to the user.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "base",
          "annotations": [],
          "description": "The amount of this cost detail in the base currency of the organization.",
          "attributes": [],
          "type": "price",
          "required": false
        }
      ]
    },
    {
      "plural": "delivery_option_cost_details",
      "name": "delivery_option_cost_detail",
      "attributes": [],
      "fields": [
        {
          "name": "source",
          "annotations": [],
          "description": "Source of the cost detail",
          "attributes": [],
          "type": "delivery_option_cost_detail_source",
          "required": true,
          "example": "ratecard, center"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The ISO-4217 3 character currency code in which the amount is calculated.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "Sum of all delivery option cost components in this detail.",
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "label",
          "annotations": [],
          "description": "The formatted label for this cost detail that should be displayed to the user.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "base",
          "annotations": [],
          "description": "The amount of this cost detail in the base currency of the organization.",
          "attributes": [],
          "type": "price",
          "required": false
        },
        {
          "name": "components",
          "annotations": [],
          "attributes": [],
          "type": "[delivery_option_cost_component]",
          "required": true
        }
      ]
    },
    {
      "plural": "delivery_option_forms",
      "name": "delivery_option_form",
      "description": "Represents a way to fulfill a delivery, including an estimates for the date range and cost",
      "attributes": [],
      "fields": [
        {
          "name": "delivery",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "items",
          "annotations": [],
          "attributes": [],
          "type": "[quote_line_item_form]",
          "required": true
        },
        {
          "name": "destination",
          "annotations": [],
          "attributes": [],
          "type": "shipping_address",
          "required": true
        }
      ]
    },
    {
      "plural": "delivery_option_references",
      "name": "delivery_option_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "delivery_option_summaries",
      "name": "delivery_option_summary",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "cost",
          "annotations": [],
          "description": "Actual shipping cost to be charged to the merchant by Flow",
          "attributes": [],
          "type": "price",
          "required": true
        },
        {
          "name": "delivered_duty",
          "annotations": [],
          "attributes": [],
          "type": "delivered_duty",
          "required": true
        },
        {
          "name": "price",
          "annotations": [],
          "description": "Price of shipping to be used for the end-customer selecting this option. Can be actual cost, etc.",
          "attributes": [],
          "type": "price",
          "required": true
        },
        {
          "name": "service",
          "annotations": [],
          "attributes": [],
          "type": "service_reference",
          "required": true
        },
        {
          "name": "tier",
          "annotations": [],
          "attributes": [],
          "type": "tier_reference",
          "required": true
        },
        {
          "name": "window",
          "annotations": [],
          "attributes": [],
          "type": "datetime_range",
          "required": true
        }
      ]
    },
    {
      "plural": "delivery_option_versions",
      "name": "delivery_option_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "delivery_option",
          "annotations": [],
          "attributes": [],
          "type": "delivery_option_summary",
          "required": true
        }
      ]
    },
    {
      "plural": "delivery_summaries",
      "name": "delivery_summary",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "items",
          "annotations": [],
          "attributes": [],
          "type": "[line_item_form]",
          "required": true
        }
      ]
    },
    {
      "plural": "delivery_versions",
      "name": "delivery_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "delivery",
          "annotations": [],
          "attributes": [],
          "type": "delivery_summary",
          "required": true
        }
      ]
    },
    {
      "plural": "delivery_windows",
      "name": "delivery_window",
      "description": "Flow's estimate of when a shipment for this delivery will actually arrive at the final destination, taking into account a shipment estimate, center schedules, and carrier transit windows.",
      "attributes": [],
      "fields": [
        {
          "name": "from",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "to",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "timezone",
          "annotations": [],
          "description": "Timezone of the destination based on the destination address of the shipment.",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "America/New_York"
        },
        {
          "name": "label",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "1-3 days"
        }
      ]
    },
    {
      "plural": "delivery_window_components",
      "name": "delivery_window_component",
      "attributes": [],
      "fields": [
        {
          "name": "from",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "to",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "source",
          "annotations": [],
          "description": "Did this come from Flow, carrier, organization, center, etc.",
          "attributes": [],
          "type": "delivery_window_component_source",
          "required": true
        }
      ]
    },
    {
      "plural": "delivery_window_components",
      "name": "delivery_window_components",
      "description": "Components and information taken into account when calculating a final delivery window.",
      "attributes": [],
      "fields": [
        {
          "name": "shipment_estimate",
          "annotations": [],
          "description": "Estimate of when a delivery may leave the center. Flow will usually come up with an estimate, but this may be provided directly from an organization if they are using a drop-ship/sell-first model of fulfillment.",
          "attributes": [],
          "type": "delivery_window_component",
          "required": true
        },
        {
          "name": "transit_estimate",
          "annotations": [],
          "description": "Estimate of days in actual transit from leaving the center to arriving at final destination.",
          "attributes": [],
          "type": "delivery_window_component",
          "required": true
        }
      ]
    },
    {
      "plural": "delivery_window_components_v2s",
      "name": "delivery_window_components_v2",
      "description": "Components and information taken into account when calculating a final delivery window",
      "attributes": [],
      "fields": [
        {
          "name": "processing_estimates",
          "annotations": [],
          "description": "Estimates for time each facility takes to process a shipment. This can represent center, dropship / sell-first, or crossdock processing time",
          "attributes": [],
          "type": "[processing_estimate]",
          "required": true
        },
        {
          "name": "transit_estimates",
          "annotations": [],
          "description": "Estimates for time each portion of shipping takes. If no crossdock is used there will be a single transit estimate. If a crossdock is used there will be two transit estimates",
          "attributes": [],
          "type": "[transit_estimate]",
          "required": true
        }
      ]
    },
    {
      "plural": "deminimis_per_items",
      "name": "deminimis_per_item",
      "description": "De Minimis per item describes rules which require minimum and/or maximum values per item",
      "attributes": [],
      "fields": [
        {
          "name": "currency",
          "annotations": [],
          "description": "The ISO-4217 3 character currency code in which the value is calculated",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "USD"
        },
        {
          "name": "minimum",
          "annotations": [],
          "description": "If specified, the minimum amount due per item",
          "attributes": [],
          "type": "decimal",
          "minimum": 0,
          "required": false
        },
        {
          "name": "maximum",
          "annotations": [],
          "description": "If specified, the maximum amount due per item",
          "attributes": [],
          "type": "decimal",
          "minimum": 0,
          "required": false
        }
      ]
    },
    {
      "plural": "deminimis_simples",
      "name": "deminimis_simple",
      "description": "De Minimis for most common example which includes a value threshold and rules on what components are used in the duty calculation",
      "attributes": [],
      "fields": [
        {
          "name": "value",
          "annotations": [],
          "description": "The value below which no tax or duty is collected, which is a sum of the values associated with the de minimis components.",
          "attributes": [],
          "type": "decimal",
          "required": false
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The ISO-4217 3 character currency code in which the value is calculated.",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "USD"
        },
        {
          "name": "components",
          "annotations": [],
          "description": "The components that are used to determine the value. Note that these components may be different from the components for the VAT or duty itself.",
          "attributes": [],
          "type": "[levy_component]",
          "required": true
        },
        {
          "name": "minimum",
          "annotations": [],
          "description": "If the calculated VAT or duty amount is less than the minimum, no VAT or duty is owed. In other words, this is the minimum payable amount.",
          "attributes": [],
          "type": "decimal",
          "minimum": 0,
          "required": false
        }
      ]
    },
    {
      "plural": "detailed_shipping_label_forms",
      "name": "detailed_shipping_label_form",
      "attributes": [],
      "fields": [
        {
          "name": "destination",
          "annotations": [],
          "description": "Destination contact information and structured address",
          "attributes": [],
          "type": "shipping_address",
          "required": true
        },
        {
          "name": "origin",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Origin contact information and structured address",
          "attributes": [],
          "type": "shipping_address",
          "required": true
        },
        {
          "name": "package",
          "annotations": [],
          "description": "Package to be shipped, including dimensions and items included",
          "attributes": [],
          "type": "shipping_label_package",
          "required": true
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "Reference information included with the label, if carrier provides support for reference information.",
          "attributes": [],
          "type": "map[string]",
          "required": false
        },
        {
          "name": "delivered_duty",
          "annotations": [],
          "description": "Determines if a shipment should be DDP. If DDP, note that in some cases if a customer is shipping to a country where DDP is not available, information may still come back as DDU. If not provided, Flow will set a base default based on the country",
          "attributes": [],
          "type": "delivered_duty",
          "required": false
        },
        {
          "name": "direction",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Tells us whether the ratecard is for outbound or reverse logistics. This will determine information passed on to carriers to make sure the correct label and accounts are used. If not specified, defaults to outbound.",
          "attributes": [],
          "type": "direction",
          "required": false
        },
        {
          "name": "order_number",
          "annotations": [],
          "description": "Order number/key of the client organization. This will allow Flow to tie and track a label to a submitted order, if applicable.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "service",
          "annotations": [],
          "description": "Desired carrier service level to use for this label. If not provided, this will default to the delivery option that Flow calculated for the order.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "shipment_recipient",
          "annotations": [],
          "description": "Tells us who the recipient of the package is. This will determine information passed on to carriers to make sure the correct label and accounts are used",
          "attributes": [],
          "type": "shipment_recipient",
          "required": false
        }
      ]
    },
    {
      "plural": "detailed_shipping_notification_forms",
      "name": "detailed_shipping_notification_form",
      "description": "Detailed form for information about a client-facilitated shipment where the shipping label and fulfillment was not handled by Flow.",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "description": "Client provided key. Unique per organization. If not provided, a default one will be generated.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "Reference information included with the label, if carrier provides support for reference information.",
          "attributes": [],
          "type": "map[string]",
          "required": false
        },
        {
          "name": "carrier_tracking_number",
          "annotations": [],
          "description": "Carrier-issued or generated tracking number of the first carrier taking hold of the package",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "destination",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Destination contact information and structured address",
          "attributes": [],
          "type": "shipping_address",
          "required": true
        },
        {
          "name": "order_number",
          "annotations": [],
          "description": "Order number/id/key of the client organization. This will allow Flow to tie and track a label to a submitted order, if applicable.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "package",
          "annotations": [],
          "description": "Package to be shipped, including dimensions and items included",
          "attributes": [],
          "type": "shipping_label_package",
          "required": true
        },
        {
          "name": "service",
          "annotations": [],
          "description": "Carrier service level used for generation and shipment of this label",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "ups-ground, dhl-express-worldwide"
        },
        {
          "name": "origin",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Origin contact information and structured address. If not provided, will default to center used for the selected delivery option in the order.",
          "attributes": [],
          "type": "shipping_address",
          "required": false
        },
        {
          "name": "shipment_recipient",
          "annotations": [],
          "description": "Tells us who the recipient of the package is. This will determine information passed on to carriers to make sure the correct label and accounts are used",
          "attributes": [],
          "type": "shipment_recipient",
          "required": false
        }
      ]
    },
    {
      "plural": "digital_deliveries",
      "name": "digital_delivery",
      "description": "Represents a collection of items that are digitally available and do not require a physical shipment",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "description": "A key for a delivery. These will be unique identifiers for a delivery within an order, but may be re-used across quotes.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "items",
          "annotations": [],
          "attributes": [],
          "type": "[delivery_item]",
          "required": true
        },
        {
          "name": "prices",
          "annotations": [],
          "description": "Prices of the goods within this delivery.",
          "attributes": [],
          "type": "[order_price_detail]",
          "required": false
        },
        {
          "name": "total",
          "annotations": [],
          "description": "Total of the goods within this delivery",
          "attributes": [],
          "type": "localized_total",
          "required": false
        }
      ]
    },
    {
      "plural": "dimensions",
      "name": "dimension",
      "attributes": [],
      "fields": [
        {
          "name": "depth",
          "annotations": [],
          "attributes": [],
          "type": "measurement",
          "required": false
        },
        {
          "name": "diameter",
          "annotations": [],
          "attributes": [],
          "type": "measurement",
          "required": false
        },
        {
          "name": "length",
          "annotations": [],
          "attributes": [],
          "type": "measurement",
          "required": false
        },
        {
          "name": "weight",
          "annotations": [],
          "attributes": [],
          "type": "measurement",
          "required": false
        },
        {
          "name": "width",
          "annotations": [],
          "attributes": [],
          "type": "measurement",
          "required": false
        }
      ]
    },
    {
      "plural": "dimension_estimates",
      "name": "dimension_estimate",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "q",
          "annotations": [],
          "description": "Search query for items to apply this dimension estimate to",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "dimensions",
          "annotations": [],
          "description": "Dimension values to apply to items meeting search criteria 'q'",
          "attributes": [],
          "type": "estimated_dimensions",
          "required": true
        },
        {
          "name": "position",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        }
      ]
    },
    {
      "plural": "dimension_estimate_forms",
      "name": "dimension_estimate_form",
      "attributes": [],
      "fields": [
        {
          "name": "q",
          "annotations": [],
          "description": "Search query for items to apply this dimension estimate to",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "dimensions",
          "annotations": [],
          "description": "Dimension values to apply to items meeting search criteria 'q'",
          "attributes": [],
          "type": "estimated_dimensions",
          "required": true
        },
        {
          "name": "position",
          "annotations": [],
          "description": "Position of priority for this dimension estimate. The lower the position number, the higher the priority, with 0 being the first. If not provided, defaults to last plus one.",
          "attributes": [],
          "type": "long",
          "required": false
        }
      ]
    },
    {
      "plural": "dimension_estimate_versions",
      "name": "dimension_estimate_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "dimension_estimate",
          "annotations": [],
          "attributes": [],
          "type": "dimension_estimate",
          "required": true
        }
      ]
    },
    {
      "plural": "dimensionses",
      "name": "dimensions",
      "attributes": [],
      "fields": [
        {
          "name": "product",
          "annotations": [],
          "attributes": [],
          "type": "dimension",
          "required": false
        },
        {
          "name": "packaging",
          "annotations": [],
          "attributes": [],
          "type": "dimension",
          "required": false
        }
      ]
    },
    {
      "plural": "direct_authorization_forms",
      "name": "direct_authorization_form",
      "description": "Creates an authorization for a transaction in which you remain the merchant of record. An authorization is used to check and reserve funds w/ a given payment method. No funds are actually transferred; once you have you an authorization, you can capture up to the amount of the authorization.",
      "attributes": [],
      "fields": [
        {
          "name": "token",
          "annotations": [
            "personal_data"
          ],
          "description": "The token of the payment method to use when authorizing this transaction",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "The amount to authorize",
          "attributes": [],
          "type": "decimal",
          "required": true,
          "example": "120.38"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        },
        {
          "name": "customer",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The customer who is actually making the purchase. While optional, providing name and email at a minimum will significantly increase the acceptance rate.",
          "attributes": [],
          "type": "order_customer",
          "required": false
        },
        {
          "name": "key",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Your unique identifier for this transaction, which if provided is used to implement idempotency. If not provided, we will assign.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "cvv",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The card verification number. Note this number is never stored and thus is presented on each auth. Presenting the CVV may increase acceptance rates",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "A set of key/value pairs that you can attach to an authorization object",
          "attributes": [],
          "type": "map[string]",
          "required": false
        },
        {
          "name": "destination",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Destination address, if relevant",
          "attributes": [],
          "type": "address",
          "required": false
        },
        {
          "name": "billing_address",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Destination address, if relevant",
          "attributes": [],
          "type": "billing_address",
          "required": false
        },
        {
          "name": "ip",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The IP address of the consumer",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "96.242.151.245"
        },
        {
          "name": "options",
          "annotations": [],
          "description": "Optional behaviors to enable for this authorization",
          "attributes": [],
          "type": "[authorization_option]",
          "required": false
        },
        {
          "name": "redirect_urls",
          "annotations": [],
          "description": "When using 3D Secure, this field specifies the success and optional failure URLs to which the user will be redirected after completing (or failing to complete) payment.",
          "attributes": [],
          "type": "post_payment_redirect_urls",
          "required": false
        },
        {
          "name": "browser_info",
          "annotations": [],
          "description": "Shopper browser info. If you are using 3DS2, this field is required.",
          "attributes": [],
          "type": "browser_info",
          "required": false
        }
      ]
    },
    {
      "plural": "direct_debits",
      "name": "direct_debit",
      "description": "Represents an online direct debit payment.",
      "attributes": [],
      "fields": [
        {
          "name": "routing_number",
          "annotations": [],
          "description": "Routing information for the customers bank",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "last4",
          "annotations": [],
          "description": "The last 4 digits of the customers account number in cleartext",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "discounts",
      "name": "discount",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "code",
          "annotations": [],
          "description": "Indicates what discount code this discount is associated with",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "label",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "price",
          "annotations": [],
          "attributes": [],
          "type": "price_with_base",
          "required": true
        },
        {
          "name": "attributes",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "discount_forms",
      "name": "discount_form",
      "attributes": [],
      "fields": [
        {
          "name": "offer",
          "annotations": [],
          "attributes": [],
          "type": "discount_offer",
          "required": true
        },
        {
          "default": "item",
          "name": "target",
          "annotations": [],
          "description": "Indicates the target of the discount.",
          "attributes": [],
          "type": "discount_target",
          "required": false
        },
        {
          "name": "label",
          "annotations": [],
          "description": "Label to display (e.g. the discount code). Discounts with the same label represent aggregated offers.",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "discount_offer_fixeds",
      "name": "discount_offer_fixed",
      "attributes": [],
      "fields": [
        {
          "name": "money",
          "annotations": [],
          "attributes": [],
          "type": "money",
          "required": true
        }
      ]
    },
    {
      "plural": "discount_offer_percents",
      "name": "discount_offer_percent",
      "attributes": [],
      "fields": [
        {
          "name": "percent",
          "annotations": [],
          "maximum": 100,
          "attributes": [],
          "type": "decimal",
          "minimum": 0,
          "required": true
        }
      ]
    },
    {
      "plural": "discounts_forms",
      "name": "discounts_form",
      "attributes": [],
      "fields": [
        {
          "name": "discounts",
          "annotations": [],
          "attributes": [],
          "type": "[discount_form]",
          "required": true
        }
      ]
    },
    {
      "plural": "durations",
      "name": "duration",
      "description": "Represents a duration of time.",
      "attributes": [],
      "fields": [
        {
          "name": "unit",
          "annotations": [],
          "attributes": [],
          "type": "unit_of_time",
          "required": true
        },
        {
          "name": "value",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "minimum": 0,
          "required": true
        }
      ]
    },
    {
      "plural": "duties",
      "name": "duty",
      "description": "Represents a simple model of duties that apply to a given item / trade lane.",
      "attributes": [],
      "fields": [
        {
          "name": "rate",
          "annotations": [],
          "description": "The combined duty rate. A value of 25 indicates a duty rate of 25%",
          "attributes": [],
          "type": "decimal",
          "minimum": 0,
          "required": true,
          "example": "25"
        },
        {
          "name": "components",
          "annotations": [],
          "description": "The components to which duty is applied.",
          "attributes": [],
          "type": "[levy_component]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "deminimis",
          "annotations": [],
          "description": "Describes the duty de minimis if there is one for this destination",
          "attributes": [],
          "type": "deminimis",
          "required": false
        },
        {
          "name": "name",
          "annotations": [],
          "description": "Generally used for Where this rate came from and potentially its type.",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "ecommerce_platforms",
      "name": "ecommerce_platform",
      "description": "The Ecommerce Platform defines what the organization is using for their ecommerce systems.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "ecommerce_platform_type",
          "required": true
        },
        {
          "name": "version",
          "annotations": [],
          "description": "The version of the platform where appropriate. For platform types like shopify that are fully hosted, version does not apply and thus is optional",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "2.2"
        }
      ]
    },
    {
      "plural": "ecommerce_platform_deleteds",
      "name": "ecommerce_platform_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "ecommerce_platform",
          "annotations": [],
          "attributes": [],
          "type": "ecommerce_platform",
          "required": true
        }
      ]
    },
    {
      "plural": "ecommerce_platform_forms",
      "name": "ecommerce_platform_form",
      "attributes": [],
      "fields": [
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "ecommerce_platform_type",
          "required": true
        },
        {
          "name": "version",
          "annotations": [],
          "description": "The version of the platform where appropriate. For platform types like shopify that are fully hosted, version does not apply and thus is optional",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "2.2"
        }
      ]
    },
    {
      "plural": "ecommerce_platform_upserteds",
      "name": "ecommerce_platform_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "ecommerce_platform",
          "annotations": [],
          "attributes": [],
          "type": "ecommerce_platform",
          "required": true
        }
      ]
    },
    {
      "plural": "email_notifications",
      "name": "email_notification",
      "description": "An Email Notification indicates that an email message should be delivered. The type of email depends on the data and can be found in the field data.discriminator.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "to",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "email_recipient",
          "required": true
        },
        {
          "name": "created_at",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "data",
          "annotations": [],
          "attributes": [],
          "type": "email_notification_data",
          "required": true
        }
      ]
    },
    {
      "plural": "email_notification_data_refunds",
      "name": "email_notification_data_refund",
      "description": "Sends an refund confirmation email to the customer (using the order.customer.email as the recipient).",
      "attributes": [],
      "fields": [
        {
          "name": "order",
          "annotations": [],
          "description": "The original order",
          "attributes": [],
          "type": "order_summary",
          "required": true
        },
        {
          "name": "return",
          "annotations": [],
          "description": "The summary of the items in the order that were returned, triggering this refund",
          "attributes": [],
          "type": "order_summary",
          "required": true
        },
        {
          "name": "payment",
          "annotations": [],
          "attributes": [],
          "type": "email_payment_summary",
          "required": true
        }
      ]
    },
    {
      "plural": "email_notification_deleteds",
      "name": "email_notification_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "notification",
          "annotations": [],
          "attributes": [],
          "type": "email_notification",
          "required": true
        }
      ]
    },
    {
      "plural": "email_notification_forms",
      "name": "email_notification_form",
      "attributes": [],
      "fields": [
        {
          "name": "to",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "email_recipient",
          "required": true
        },
        {
          "name": "created_at",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "data",
          "annotations": [],
          "attributes": [],
          "type": "email_notification_data",
          "required": true
        }
      ]
    },
    {
      "plural": "email_notification_upserteds",
      "name": "email_notification_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "notification",
          "annotations": [],
          "attributes": [],
          "type": "email_notification",
          "required": true
        }
      ]
    },
    {
      "plural": "email_payment_summaries",
      "name": "email_payment_summary",
      "attributes": [],
      "fields": [
        {
          "name": "refund",
          "annotations": [],
          "attributes": [],
          "type": "refund",
          "required": true
        }
      ]
    },
    {
      "plural": "email_recipients",
      "name": "email_recipient",
      "attributes": [],
      "fields": [
        {
          "name": "email",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The email addresses to which to send.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The name of the recipient, if any.",
          "attributes": [],
          "type": "name",
          "required": false
        }
      ]
    },
    {
      "plural": "email_verifications",
      "name": "email_verification",
      "description": "Represents the successful response of an email verification token. We return the email address in this case to allow the UI to display which email address was verified.",
      "attributes": [],
      "fields": [
        {
          "name": "email",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "estimated_dimensionses",
      "name": "estimated_dimensions",
      "attributes": [],
      "fields": [
        {
          "name": "depth",
          "annotations": [],
          "attributes": [],
          "type": "measurement",
          "required": true
        },
        {
          "name": "length",
          "annotations": [],
          "attributes": [],
          "type": "measurement",
          "required": true
        },
        {
          "name": "weight",
          "annotations": [],
          "attributes": [],
          "type": "measurement",
          "required": true
        },
        {
          "name": "width",
          "annotations": [],
          "attributes": [],
          "type": "measurement",
          "required": true
        }
      ]
    },
    {
      "plural": "estimated_windows",
      "name": "estimated_window",
      "description": "Range of time given a from and to number and the unit. For example: 1-4 hours or 4-7 days",
      "attributes": [],
      "fields": [
        {
          "name": "from",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "to",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "unit",
          "annotations": [],
          "attributes": [],
          "type": "unit_of_time",
          "required": true
        }
      ]
    },
    {
      "plural": "exceptions",
      "name": "exception",
      "description": "Represents an exception to the schedule of a center.",
      "attributes": [],
      "fields": [
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "exception_type",
          "required": true
        },
        {
          "name": "datetime_range",
          "annotations": [],
          "description": "Range for the holiday. For single-day holidays, from and to should just be the same.",
          "attributes": [],
          "type": "datetime_range",
          "required": true,
          "example": "2021/12/24 12:00 am to 2021/12/25 11:59 pm"
        }
      ]
    },
    {
      "plural": "exclusion_rules",
      "name": "exclusion_rule",
      "description": "A global exclusion rule allows the user to select 1 or more items by query and to globally exclude those items from sale in one or more regions.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "q",
          "annotations": [],
          "description": "The query to identify the items to which this exclusion rule applies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "number:123"
        },
        {
          "name": "query",
          "annotations": [],
          "attributes": [],
          "type": "query",
          "required": true
        },
        {
          "name": "regions",
          "annotations": [],
          "description": "The regions in which the item is restricted.",
          "attributes": [],
          "type": "[region]",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "description": "Defines the status that is attached to each excluded item when localized to a matching region",
          "attributes": [],
          "type": "subcatalog_item_status",
          "required": true
        },
        {
          "name": "description",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "statistics",
          "annotations": [],
          "attributes": [],
          "type": "exclusion_rule_statistic",
          "required": true
        }
      ]
    },
    {
      "plural": "exclusion_rule_forms",
      "name": "exclusion_rule_form",
      "attributes": [],
      "fields": [
        {
          "name": "q",
          "annotations": [],
          "description": "The query to identify the items to which this exclusion rule applies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "number:123"
        },
        {
          "name": "regions",
          "annotations": [],
          "description": "The ids of the regions in which to restrict the items.",
          "attributes": [],
          "type": "[string]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "description",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "exclusion_rule_statistics",
      "name": "exclusion_rule_statistic",
      "attributes": [],
      "fields": [
        {
          "name": "state",
          "annotations": [],
          "attributes": [],
          "type": "exclusion_rule_state",
          "required": true
        },
        {
          "name": "number_items",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        }
      ]
    },
    {
      "plural": "exclusion_rule_versions",
      "name": "exclusion_rule_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "exclusion_rule",
          "annotations": [],
          "attributes": [],
          "type": "exclusion_rule",
          "required": true
        }
      ]
    },
    {
      "plural": "experiences",
      "name": "experience",
      "description": "Experiences define a local experience for a given geographic region",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "delivered_duty",
          "annotations": [],
          "description": "Determines if a given experience should be DDP, DDU, or customer choice. If DDP, note that in some cases if a customer is shipping to a country where DDP is not available, information may still come back as DDU",
          "attributes": [],
          "type": "delivered_duty",
          "required": true
        },
        {
          "name": "region",
          "annotations": [],
          "description": "Reference to region as defined in https://api.flow.io/reference/regions",
          "attributes": [],
          "type": "region_reference",
          "required": true,
          "example": "can or eurozone"
        },
        {
          "name": "country",
          "annotations": [],
          "description": "When otherwise not known, the default country to use for this experience. One example would be an experience setup for Europe - when you request landed cost, if there is no geolocation information available, we will use this country as the basis for landed cost. ISO 3166 3 currency code as defined in https://api.flow.io/reference/countries",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAN"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "This currency defines the base currency for all pricing related features - e.g. pricing functions. ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        },
        {
          "name": "language",
          "annotations": [],
          "description": "The default language to use for when displaying products, e.g. to display product information in this language by default. ISO 639 2 language code as defined in https://api.flow.io/reference/languages",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "en"
        },
        {
          "name": "measurement_system",
          "annotations": [],
          "attributes": [],
          "type": "measurement_system",
          "required": true
        },
        {
          "name": "subcatalog",
          "annotations": [],
          "attributes": [],
          "type": "subcatalog_reference",
          "required": true
        },
        {
          "name": "position",
          "annotations": [],
          "description": "Position of this experience relative to other experiences. Lower position indicates experience should be considered first. Main use is to resolve incoming geolocation data (e.g. ip, country) to pick an experience. We do this by walking through the list of experiences to find the first one that matches the user's geography.",
          "attributes": [],
          "type": "long",
          "minimum": 0,
          "required": true
        },
        {
          "name": "settings",
          "annotations": [],
          "attributes": [],
          "type": "experience_settings",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "description": "Will always be present (optional for backwards compatibility).",
          "attributes": [],
          "type": "experience_status",
          "required": false
        }
      ]
    },
    {
      "plural": "experience_checkout_settings",
      "name": "experience_checkout_settings",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "experience",
          "annotations": [],
          "attributes": [],
          "type": "experience_overview",
          "required": true
        },
        {
          "name": "checkout_configuration",
          "annotations": [],
          "attributes": [],
          "type": "experience_configuration_reference",
          "required": true
        }
      ]
    },
    {
      "plural": "experience_checkout_settings_forms",
      "name": "experience_checkout_settings_form",
      "attributes": [],
      "fields": [
        {
          "name": "checkout_configuration_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "experience_clones",
      "name": "experience_clone",
      "description": "Represents a request to clone an experience.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "source_experience",
          "annotations": [],
          "attributes": [],
          "type": "experience_reference",
          "required": true
        },
        {
          "name": "cloned_experience",
          "annotations": [],
          "description": "This is the newly created (cloned) experience",
          "attributes": [],
          "type": "experience_reference",
          "required": false
        },
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "experience_clone_status",
          "required": true
        }
      ]
    },
    {
      "plural": "experience_clone_forms",
      "name": "experience_clone_form",
      "description": "Form for cloning an experience",
      "attributes": [],
      "fields": [
        {
          "name": "name",
          "annotations": [],
          "description": "Name for the new cloned experience. Will be auto generated if not provided",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "experience_configuration_references",
      "name": "experience_configuration_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "experience_currency_formats",
      "name": "experience_currency_format",
      "attributes": [],
      "fields": [
        {
          "name": "symbol",
          "annotations": [],
          "attributes": [],
          "type": "currency_symbol_format",
          "required": true
        },
        {
          "name": "label_formatters",
          "annotations": [],
          "attributes": [],
          "type": "[currency_label_formatter]",
          "required": true
        }
      ]
    },
    {
      "plural": "experience_currency_format_forms",
      "name": "experience_currency_format_form",
      "attributes": [],
      "fields": [
        {
          "name": "symbol",
          "annotations": [],
          "attributes": [],
          "type": "currency_symbol_format",
          "required": true
        },
        {
          "name": "label_formatters",
          "annotations": [],
          "attributes": [],
          "type": "[currency_label_formatter]",
          "required": true
        }
      ]
    },
    {
      "plural": "experience_defaults",
      "name": "experience_defaults",
      "description": "Defines a set of defaults for a given organization and region",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "description": "Default key - guaranteed to be unique",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "description": "Default name for the experience - guaranteed to be unique",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "delivered_duty",
          "annotations": [],
          "attributes": [],
          "type": "delivered_duty",
          "required": true
        },
        {
          "name": "country",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "currency",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "language",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "measurement_system",
          "annotations": [],
          "attributes": [],
          "type": "measurement_system",
          "required": true
        }
      ]
    },
    {
      "plural": "experience_deleteds",
      "name": "experience_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "subcatalog_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "experience_deleted_v2s",
      "name": "experience_deleted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "experience",
          "annotations": [],
          "attributes": [],
          "type": "experience",
          "required": true
        }
      ]
    },
    {
      "plural": "experience_export_types",
      "name": "experience_export_type",
      "description": "Defines the filters that can be applied when requesting an experience data export",
      "attributes": [],
      "fields": [
        {
          "name": "organization_id",
          "annotations": [],
          "description": "The id of the organization who's experiences you are interested in",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "ids",
          "annotations": [],
          "description": "The ids of the specific experiences to export",
          "attributes": [],
          "type": "[string]",
          "required": false
        },
        {
          "name": "keys",
          "annotations": [],
          "description": "The keys of the specific experiences to export",
          "attributes": [],
          "type": "[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "experience_forms",
      "name": "experience_form",
      "description": "Experiences define a local experience for a given geographic region",
      "attributes": [],
      "fields": [
        {
          "name": "region_id",
          "annotations": [],
          "description": "The actual geographic area to which this experience is targeted. Value is the region Id as defined in https://api.flow.io/reference/regions - To create a 'default' experience, set region_id to 'world'",
          "attributes": [],
          "type": "string",
          "minimum": 3,
          "required": true,
          "example": "can or eurozone or world"
        },
        {
          "name": "name",
          "annotations": [],
          "description": "Name for the experience",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "delivered_duty",
          "annotations": [],
          "description": "Determines if a given experience should be DDP, DDU, or customer choice. If DDP, note that in some cases if a customer is shipping to a country where DDP is not available, information may still come back as DDU. If not provided, Flow will set a base default based on the country",
          "attributes": [],
          "type": "delivered_duty",
          "required": false
        },
        {
          "name": "country",
          "annotations": [],
          "description": "When otherwise not known, the default country to use for this experience. One example would be an experience setup for Europe - when you request landed cost, if there is no geolocation information available, we will use this country as the basis for landed cost. ISO 3166 3 currency code as defined in https://api.flow.io/reference/countries",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "CAN"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The default currency for this experience which will define the currency of the pricing for this experience as well as the default currency displayed when no other information is available. Value is an ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "maximum": 3,
          "attributes": [],
          "type": "string",
          "minimum": 3,
          "required": false,
          "example": "CAD"
        },
        {
          "name": "language",
          "annotations": [],
          "description": "The default language in which to display information for this experience, when no other information is present. Value is an ISO 639 2 language code as defined in https://api.flow.io/reference/languages",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "en"
        },
        {
          "name": "key",
          "annotations": [],
          "description": "The key to use for this experience. If not provided, we will generate a unique key based on the experience name.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "measurement_system",
          "annotations": [],
          "attributes": [],
          "type": "measurement_system",
          "required": false
        },
        {
          "name": "subcatalog_id",
          "annotations": [],
          "description": "The Id of the subcatalog that will define the specific list of products to offer in this experience. If not specified, a new subcatalog will be created.",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "experience_geos",
      "name": "experience_geo",
      "description": "Experience Geo summarizes an experience along with geographic info",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "region",
          "annotations": [],
          "description": "Reference to region as defined in https://api.flow.io/reference/regions",
          "attributes": [],
          "type": "region_reference",
          "required": true,
          "example": "can or eurozone"
        },
        {
          "name": "country",
          "annotations": [],
          "description": "ISO 3166 3 currency code as defined in https://api.flow.io/reference/countries",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAN"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        },
        {
          "name": "language",
          "annotations": [],
          "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "en"
        },
        {
          "name": "measurement_system",
          "annotations": [],
          "attributes": [],
          "type": "measurement_system",
          "required": true
        }
      ]
    },
    {
      "plural": "experience_logistics_settings",
      "name": "experience_logistics_settings",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "experience",
          "annotations": [],
          "attributes": [],
          "type": "experience_overview",
          "required": true
        },
        {
          "name": "shipping_configuration",
          "annotations": [],
          "attributes": [],
          "type": "shipping_configuration_reference",
          "required": true
        }
      ]
    },
    {
      "plural": "experience_logistics_settings_deleteds",
      "name": "experience_logistics_settings_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "logistics_settings",
          "annotations": [],
          "attributes": [],
          "type": "experience_logistics_settings",
          "required": true
        }
      ]
    },
    {
      "plural": "experience_logistics_settings_put_forms",
      "name": "experience_logistics_settings_put_form",
      "description": "Assigns logistics related settings to an experience",
      "attributes": [],
      "fields": [
        {
          "name": "shipping_configuration_key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "experience_logistics_settings_upserteds",
      "name": "experience_logistics_settings_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "logistics_settings",
          "annotations": [],
          "attributes": [],
          "type": "experience_logistics_settings",
          "required": true
        }
      ]
    },
    {
      "plural": "experience_logistics_summaries",
      "name": "experience_logistics_summary",
      "attributes": [],
      "fields": [
        {
          "name": "outbound",
          "annotations": [],
          "attributes": [],
          "type": "experience_logistics_tier_summary",
          "required": false
        },
        {
          "name": "return",
          "annotations": [],
          "attributes": [],
          "type": "experience_logistics_tier_summary",
          "required": false
        }
      ]
    },
    {
      "plural": "experience_logistics_tier_summaries",
      "name": "experience_logistics_tier_summary",
      "attributes": [],
      "fields": [
        {
          "name": "prices",
          "annotations": [],
          "attributes": [],
          "type": "experience_logistics_tier_summary_prices",
          "required": true
        }
      ]
    },
    {
      "plural": "experience_logistics_tier_summary_prices",
      "name": "experience_logistics_tier_summary_prices",
      "attributes": [],
      "fields": [
        {
          "name": "minimum",
          "annotations": [],
          "description": "Across all the tiers for this experience, returns the minimum tier shipping price.",
          "attributes": [],
          "type": "price",
          "required": true
        }
      ]
    },
    {
      "plural": "experience_overviews",
      "name": "experience_overview",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "experience_payment_method_rule_forms",
      "name": "experience_payment_method_rule_form",
      "attributes": [],
      "fields": [
        {
          "name": "payment_method_id",
          "annotations": [],
          "description": "The id of a payment method.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "tags",
          "annotations": [],
          "description": "A collection of active tags for this payment such as whether it is to be displayed at checkout.",
          "attributes": [],
          "type": "[experience_payment_method_tag]",
          "required": true
        },
        {
          "name": "q",
          "annotations": [],
          "description": "Query used to filter payment methods shown on the experience checkout. For example, only show PayPal for the canada experience when the order's destination is Canda and is below 1000 CAD",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "country:CAN and price < 1000 CAD"
        }
      ]
    },
    {
      "plural": "experience_price_book_mappings",
      "name": "experience_price_book_mapping",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "experience",
          "annotations": [],
          "attributes": [],
          "type": "experience_reference",
          "required": true
        },
        {
          "name": "price_book",
          "annotations": [],
          "attributes": [],
          "type": "price_book_reference",
          "required": true
        },
        {
          "name": "position",
          "annotations": [],
          "description": "Position of this experience price book mapping. Lower position indicates experience price book mapping should be considered first.",
          "attributes": [],
          "type": "long",
          "minimum": 0,
          "required": true
        }
      ]
    },
    {
      "plural": "experience_price_book_mapping_deleteds",
      "name": "experience_price_book_mapping_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "experience_price_book_mapping_forms",
      "name": "experience_price_book_mapping_form",
      "attributes": [],
      "fields": [
        {
          "name": "price_book_key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "position",
          "annotations": [],
          "description": "Position of this experience price book mapping. Lower position indicates experience price book mapping should be considered first.",
          "attributes": [],
          "type": "long",
          "minimum": 0,
          "required": false
        }
      ]
    },
    {
      "plural": "experience_price_book_mapping_put_forms",
      "name": "experience_price_book_mapping_put_form",
      "attributes": [],
      "fields": [
        {
          "name": "price_books",
          "annotations": [],
          "attributes": [],
          "type": "[experience_price_book_mapping_form]",
          "required": true
        }
      ]
    },
    {
      "plural": "experience_price_book_mapping_upserteds",
      "name": "experience_price_book_mapping_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "experience_price_book_mapping",
          "annotations": [],
          "attributes": [],
          "type": "experience_price_book_mapping",
          "required": true
        }
      ]
    },
    {
      "plural": "experience_price_conversions",
      "name": "experience_price_conversion",
      "attributes": [],
      "fields": [
        {
          "name": "request",
          "annotations": [],
          "attributes": [],
          "type": "experience_price_conversion_request",
          "required": true
        },
        {
          "name": "price",
          "annotations": [],
          "attributes": [],
          "type": "price_with_base",
          "required": true
        }
      ]
    },
    {
      "plural": "experience_price_conversion_requests",
      "name": "experience_price_conversion_request",
      "attributes": [],
      "fields": [
        {
          "name": "value",
          "annotations": [],
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "base",
          "annotations": [],
          "description": "The requested base currency ISO code",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "local",
          "annotations": [],
          "description": "The requested local currency ISO code",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "experience_price_conversion_responses",
      "name": "experience_price_conversion_response",
      "description": "Conversion of a price from the organization's base currency into a local currency, using display rules suitable for price facets in search.",
      "attributes": [],
      "fields": [
        {
          "name": "prices",
          "annotations": [],
          "attributes": [],
          "type": "[experience_price_conversion]",
          "required": true
        }
      ]
    },
    {
      "plural": "experience_price_facet_conversions",
      "name": "experience_price_facet_conversion",
      "attributes": [],
      "fields": [
        {
          "name": "request",
          "annotations": [],
          "attributes": [],
          "type": "experience_price_facet_conversion_request",
          "required": true
        },
        {
          "name": "price",
          "annotations": [],
          "attributes": [],
          "type": "price_with_base",
          "required": true
        }
      ]
    },
    {
      "plural": "experience_price_facet_conversion_requests",
      "name": "experience_price_facet_conversion_request",
      "attributes": [],
      "fields": [
        {
          "name": "boundary",
          "annotations": [],
          "attributes": [],
          "type": "price_facet_boundary",
          "required": true
        },
        {
          "name": "value",
          "annotations": [],
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "base",
          "annotations": [],
          "description": "The requested base currency ISO code",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "local",
          "annotations": [],
          "description": "The requested local currency ISO code",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "experience_price_facet_conversion_responses",
      "name": "experience_price_facet_conversion_response",
      "description": "Conversion of a price from the organization's base currency into a local currency, using display rules suitable for price facets in search.",
      "attributes": [],
      "fields": [
        {
          "name": "facets",
          "annotations": [],
          "attributes": [],
          "type": "[experience_price_facet_conversion]",
          "required": true
        }
      ]
    },
    {
      "plural": "experience_references",
      "name": "experience_reference",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "experience_settingses",
      "name": "experience_settings",
      "attributes": [],
      "fields": [
        {
          "name": "delivered_duty",
          "annotations": [],
          "description": "Wrapper for settings for delivered duties. This includes the default for the experience and the choices available for a customer to pick.",
          "attributes": [],
          "type": "delivered_duty_setting",
          "required": true
        },
        {
          "name": "pricing_settings",
          "annotations": [],
          "description": "Wrapper for settings for pricing. This includes the defaults for the experience and whether they are editable.",
          "attributes": [],
          "type": "pricing_settings",
          "required": false
        },
        {
          "name": "logistics_settings",
          "annotations": [],
          "description": "Wrapper for settings for logistics. This includes the shipping configuration key used by the experience.",
          "attributes": [],
          "type": "logistics_settings",
          "required": false
        },
        {
          "name": "checkout_settings",
          "annotations": [],
          "description": "Wrapper for settings for Checkout UI.",
          "attributes": [],
          "type": "checkout_settings",
          "required": false
        }
      ]
    },
    {
      "plural": "experience_status_forms",
      "name": "experience_status_form",
      "description": "The experience status form is used to update the status of a particular experience.",
      "attributes": [],
      "fields": [
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "experience_status",
          "required": true
        }
      ]
    },
    {
      "plural": "experience_summaries",
      "name": "experience_summary",
      "description": "Some important fields related to experiences used in various APIs",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "country",
          "annotations": [],
          "description": "ISO 3166 3 currency code as defined in https://api.flow.io/reference/countries",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "CAN"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "CAD"
        },
        {
          "name": "language",
          "annotations": [],
          "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "en"
        }
      ]
    },
    {
      "plural": "experience_upserteds",
      "name": "experience_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "delivered_duty",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "subcatalog_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "region_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "country",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "currency",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "language",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "measurement_system",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "position",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "experience_upserted_v2s",
      "name": "experience_upserted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "experience",
          "annotations": [],
          "attributes": [],
          "type": "experience",
          "required": true
        }
      ]
    },
    {
      "plural": "experience_versions",
      "name": "experience_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "experience",
          "annotations": [],
          "attributes": [],
          "type": "experience",
          "required": true
        }
      ]
    },
    {
      "plural": "expirations",
      "name": "expiration",
      "description": "The month and year at which a card expires",
      "attributes": [],
      "fields": [
        {
          "name": "month",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The month of expiration expressed as a number. 1 = January, 12 = December",
          "maximum": 12,
          "attributes": [],
          "type": "integer",
          "minimum": 1,
          "required": true,
          "example": "4"
        },
        {
          "name": "year",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The 4 digit expiration year",
          "attributes": [],
          "type": "integer",
          "required": true,
          "example": "2021"
        }
      ]
    },
    {
      "plural": "exports",
      "name": "export",
      "description": "Exports represent data extraction requests (e.g. download my catalog items to a CSV file)",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "export_type",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "export_status",
          "required": true
        },
        {
          "name": "organization_q",
          "annotations": [],
          "description": "Search query to select the organizations for which to export data",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "'*' or 'environment:production' or 'environment:production id:demo -id:demo2'"
        },
        {
          "name": "created_at",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "started_at",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "completed_at",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "url",
          "annotations": [],
          "description": "Once this export is complete, this will be the URL at which the data are available for download. URLs are in s3 and will expire (currently after 7 days)",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "deliveries",
          "annotations": [],
          "description": "Optionally specify 1 or more delivery mechanisms for the export - e.g. send an email once ready",
          "attributes": [],
          "type": "[export_delivery]",
          "required": true
        }
      ]
    },
    {
      "plural": "export_delivery_emails",
      "name": "export_delivery_email",
      "description": "Triggers an email notification once the requested export is ready",
      "attributes": [],
      "fields": [
        {
          "name": "email",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "export_forms",
      "name": "export_form",
      "description": "Export forms are used to create exports. The export type defines both the type of the export (e.g. the CSV File format) and the available parameters for each export (e.g. the filters to apply to select the desired data).",
      "attributes": [],
      "fields": [
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "export_type",
          "required": true
        },
        {
          "name": "emails",
          "annotations": [],
          "description": "Once the export has completed, we will send an email notification to all of the emails provided.",
          "attributes": [],
          "type": "[string]",
          "required": false
        },
        {
          "name": "organization_q",
          "annotations": [],
          "description": "Search query to select the organizations for which to export data. Defaults to the organization for which the export was created.",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "'*' or 'environment:production' or 'environment:production id:demo -id:demo2'"
        }
      ]
    },
    {
      "plural": "export_localized_item_prices",
      "name": "export_localized_item_prices",
      "attributes": [],
      "fields": [
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "organization_reference",
          "required": true
        },
        {
          "name": "experience",
          "annotations": [],
          "attributes": [],
          "type": "experience_reference",
          "required": true
        },
        {
          "name": "item",
          "annotations": [],
          "attributes": [],
          "type": "catalog_item_reference",
          "required": true
        },
        {
          "name": "prices",
          "annotations": [],
          "attributes": [],
          "type": "export_localized_item_prices_detail",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "subcatalog_item_status",
          "required": false
        }
      ]
    },
    {
      "plural": "export_localized_item_prices_details",
      "name": "export_localized_item_prices_detail",
      "attributes": [],
      "fields": [
        {
          "name": "item",
          "annotations": [],
          "attributes": [],
          "type": "localized_item_price",
          "required": true
        },
        {
          "name": "vat",
          "annotations": [],
          "attributes": [],
          "type": "localized_item_vat",
          "required": false
        },
        {
          "name": "duty",
          "annotations": [],
          "attributes": [],
          "type": "localized_item_duty",
          "required": false
        },
        {
          "name": "price_attributes",
          "annotations": [],
          "description": "All attributes for this item having a price intent.",
          "attributes": [],
          "type": "map[price_with_base]",
          "required": true
        }
      ]
    },
    {
      "plural": "export_versions",
      "name": "export_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "export",
          "annotations": [],
          "attributes": [],
          "type": "export",
          "required": true
        }
      ]
    },
    {
      "plural": "external_api_timeout_reservation_errors",
      "name": "external_api_timeout_reservation_error",
      "attributes": [],
      "fields": [
        {
          "name": "messages",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "minimum": 1,
          "required": true
        }
      ]
    },
    {
      "plural": "field_validation_maxes",
      "name": "field_validation_max",
      "attributes": [],
      "fields": [
        {
          "name": "length",
          "annotations": [],
          "description": "Maximum specified length of characters in the form field for text or the maximum number of elements for a list.",
          "attributes": [],
          "type": "integer",
          "required": true
        }
      ]
    },
    {
      "plural": "field_validation_mins",
      "name": "field_validation_min",
      "attributes": [],
      "fields": [
        {
          "name": "length",
          "annotations": [],
          "description": "Minimum specified length of characters in the form field for text or the maximum number of elements for a list.",
          "attributes": [],
          "type": "integer",
          "required": true
        }
      ]
    },
    {
      "plural": "field_validation_patterns",
      "name": "field_validation_pattern",
      "attributes": [],
      "fields": [
        {
          "name": "pattern",
          "annotations": [],
          "description": "Regular expression used to pattern match a valid string",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "^\\d{5}(-\\d{4})?$"
        }
      ]
    },
    {
      "plural": "field_validation_requireds",
      "name": "field_validation_required",
      "description": "Indicates a field is required",
      "attributes": [],
      "fields": [
        {
          "name": "unused",
          "annotations": [],
          "description": "Field is a placeholder as required by API Builder",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "flat_rates",
      "name": "flat_rate",
      "description": "Rule outcome where shipping surfaced in quote is pre-defined flat rate",
      "attributes": [],
      "fields": [
        {
          "name": "price",
          "annotations": [],
          "attributes": [],
          "type": "price",
          "required": true
        },
        {
          "name": "zero_amount_indicator",
          "annotations": [],
          "description": "When a price is zero, this indicates whether `label` should be `free` or `0`",
          "attributes": [],
          "type": "zero_amount_indicator",
          "required": false
        }
      ]
    },
    {
      "plural": "flat_rate_forms",
      "name": "flat_rate_form",
      "attributes": [],
      "fields": [
        {
          "name": "price",
          "annotations": [],
          "attributes": [],
          "type": "money",
          "required": true
        },
        {
          "name": "zero_amount_indicator",
          "annotations": [],
          "description": "When a price is zero, this indicates whether `label` should be `free` or `0`",
          "attributes": [],
          "type": "zero_amount_indicator",
          "required": false
        }
      ]
    },
    {
      "plural": "flow_center_references",
      "name": "flow_center_reference",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "flow_item_index_metadata",
      "name": "flow_item_index_metadata",
      "attributes": [],
      "fields": [
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "subcatalog_item_status",
          "required": true
        }
      ]
    },
    {
      "plural": "fraud_email_rules",
      "name": "fraud_email_rule",
      "description": "Rule to apply to enable white-listing and black-listing for an email address.",
      "attributes": [],
      "fields": [
        {
          "name": "email",
          "annotations": [],
          "description": "The email address for a customer.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "decision",
          "annotations": [],
          "description": "The fraud decision to take when the email address matches.",
          "attributes": [],
          "type": "fraud_email_rule_decision",
          "required": true
        }
      ]
    },
    {
      "plural": "fraud_email_rule_forms",
      "name": "fraud_email_rule_form",
      "attributes": [],
      "fields": [
        {
          "name": "rule",
          "annotations": [],
          "description": "The email rule to apply.",
          "attributes": [],
          "type": "fraud_email_rule",
          "required": true
        }
      ]
    },
    {
      "plural": "fraud_status_changeds",
      "name": "fraud_status_changed",
      "description": "Event emitted when the fraud status for an order changes.",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "The fraud review identifier.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "order",
          "annotations": [],
          "description": "The order reference details.",
          "attributes": [],
          "type": "order_reference",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "description": "The updated fraud status.",
          "attributes": [],
          "type": "fraud_status",
          "required": true
        }
      ]
    },
    {
      "plural": "free_shippings",
      "name": "free_shipping",
      "attributes": [],
      "fields": [
        {
          "name": "trigger",
          "annotations": [],
          "description": "Trigger used to calculate eligibility for free shipping, showing information necessary.",
          "attributes": [],
          "type": "promotion_trigger",
          "required": true
        },
        {
          "name": "max",
          "annotations": [],
          "description": "Maximum value for this promotion. For example, a free shipping promo may be setup with a max of 10 CAD meaning we will apply free shipping up to a maximum value of 10 CAD",
          "attributes": [],
          "type": "price",
          "required": false
        }
      ]
    },
    {
      "plural": "free_shipping_order_promotions",
      "name": "free_shipping_order_promotion",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "order",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "expandable_order",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "trigger",
          "annotations": [],
          "description": "Trigger used to calculate eligibility for free shipping, showing information necessary.",
          "attributes": [],
          "type": "order_promotion_trigger",
          "required": true
        },
        {
          "name": "max",
          "annotations": [],
          "description": "Maximum value for this promotion. For example, a free shipping promo may be setup with a max of 10 CAD meaning we will apply free shipping up to a maximum value of 10 CAD",
          "attributes": [],
          "type": "price",
          "required": false
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "A set of key/value pairs",
          "attributes": [],
          "type": "map[string]",
          "required": true
        }
      ]
    },
    {
      "plural": "free_shipping_order_promotion_forms",
      "name": "free_shipping_order_promotion_form",
      "attributes": [],
      "fields": [
        {
          "name": "trigger",
          "annotations": [],
          "description": "Trigger used to calculate eligibility for free shipping, showing information necessary.",
          "attributes": [],
          "type": "promotion_trigger_form",
          "required": true
        },
        {
          "name": "max",
          "annotations": [],
          "description": "Maximum value for this promotion. For example, a free shipping promo may be setup with a max of 10 CAD meaning we will apply free shipping up to a maximum value of 10 CAD.",
          "attributes": [],
          "type": "price_form",
          "required": false
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "A set of key/value pairs",
          "attributes": [],
          "type": "map[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "ftp_accounts",
      "name": "ftp_account",
      "description": "The FTP Account is your username and password to access this FTP server.",
      "attributes": [],
      "fields": [
        {
          "name": "server",
          "annotations": [],
          "attributes": [],
          "type": "ftp_server",
          "required": true
        },
        {
          "name": "user",
          "annotations": [],
          "attributes": [],
          "type": "ftp_user",
          "required": true
        }
      ]
    },
    {
      "plural": "ftp_files",
      "name": "ftp_file",
      "description": "The FTP File represents a file uploaded to the FTP Server",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "source",
          "annotations": [],
          "attributes": [],
          "type": "ftp_file_source",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "description": "The name of the file",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "directory",
          "annotations": [],
          "description": "The name of the directory in which the file was uploaded",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "url",
          "annotations": [],
          "description": "URL of the file contents",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "created_at",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        }
      ]
    },
    {
      "plural": "ftp_file_forms",
      "name": "ftp_file_form",
      "description": "Create a file that will be uploaded to this organization's FTP Server",
      "attributes": [],
      "fields": [
        {
          "name": "url",
          "annotations": [],
          "description": "URL of the file contents",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "directory",
          "annotations": [],
          "description": "The name of the directory to which to upload this file. Note files cannot be uploaded to the /from-flow directory directly (please specify a subdirectory name). If the directory you specify does not already exist, it will be created automatically.",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "/from-flow/catalog"
        },
        {
          "name": "name",
          "annotations": [],
          "description": "The name of the file. Defaults to the last component of the url",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "ftp_folders",
      "name": "ftp_folder",
      "description": "The FTP Folder represents a single folder associated with an organization for which we create an external FTP Directory",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "path",
          "annotations": [],
          "description": "Will have a leading and trailing slash",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "'/demo/' or '/demo/to-flow/'"
        },
        {
          "name": "webhook",
          "annotations": [],
          "attributes": [],
          "type": "boolean",
          "required": true
        },
        {
          "name": "description",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "ftp_folder_forms",
      "name": "ftp_folder_form",
      "attributes": [],
      "fields": [
        {
          "name": "path",
          "annotations": [],
          "description": "We expect a leading and trailing slash which will automatically be added if not specified",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "/from-flow/billing/"
        },
        {
          "default": "false",
          "name": "webhook",
          "annotations": [],
          "description": "Set to true to create a webhook for this folder",
          "attributes": [],
          "type": "boolean",
          "required": true
        },
        {
          "name": "description",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "ftp_organization_settings",
      "name": "ftp_organization_settings",
      "description": "The FTP Organization Settings allows you to enable an FTP Drop Point for an organization, creating the standard set of FTP Folders, credentials, and associated webhooks.",
      "attributes": [],
      "fields": [
        {
          "name": "enabled",
          "annotations": [],
          "attributes": [],
          "type": "boolean",
          "required": true
        },
        {
          "name": "emails",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "required": true
        },
        {
          "name": "account",
          "annotations": [],
          "description": "Information on the primary account associated with this organization",
          "attributes": [],
          "type": "ftp_account",
          "required": false
        }
      ]
    },
    {
      "plural": "ftp_organization_settings_forms",
      "name": "ftp_organization_settings_form",
      "attributes": [],
      "fields": [
        {
          "default": "false",
          "name": "enabled",
          "annotations": [],
          "attributes": [],
          "type": "boolean",
          "required": true
        },
        {
          "default": "[]",
          "name": "emails",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "required": true
        }
      ]
    },
    {
      "plural": "ftp_servers",
      "name": "ftp_server",
      "attributes": [],
      "fields": [
        {
          "name": "hostname",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "ftp_users",
      "name": "ftp_user",
      "attributes": [],
      "fields": [
        {
          "name": "username",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "password",
          "annotations": [],
          "description": "Password will be available only when you first create the ftp account.",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "fuel_surcharge_ratecard_fees",
      "name": "fuel_surcharge_ratecard_fee",
      "attributes": [],
      "fields": [
        {
          "name": "amount",
          "annotations": [],
          "attributes": [],
          "type": "money",
          "required": true
        }
      ]
    },
    {
      "plural": "fuel_surcharge_service_fees",
      "name": "fuel_surcharge_service_fee",
      "attributes": [],
      "fields": [
        {
          "name": "percent",
          "annotations": [],
          "attributes": [],
          "type": "decimal",
          "required": true
        }
      ]
    },
    {
      "plural": "fulfillments",
      "name": "fulfillment",
      "description": "Used to track and manage the fulfillment of an order.",
      "attributes": [],
      "fields": [
        {
          "name": "organization",
          "annotations": [],
          "description": "Flow-issued ID of client organization on whose behalf a partner is fulfilling",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "description": "Unique key identifying this fulfillment.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Order number",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "items",
          "annotations": [],
          "description": "Items as modeled on an order.",
          "attributes": [],
          "type": "[fulfillment_item]",
          "required": true
        },
        {
          "name": "center",
          "annotations": [],
          "description": "The fulfillment center we expect this order to be fulfilled from.",
          "attributes": [],
          "type": "center_summary",
          "required": false
        }
      ]
    },
    {
      "plural": "fulfillment_cancellation_forms",
      "name": "fulfillment_cancellation_form",
      "description": "Changing an order for the purpose of cancelling specific line quantities",
      "attributes": [],
      "fields": [
        {
          "default": "fulfillment",
          "name": "change_source",
          "annotations": [],
          "description": "The original source of this update, regardless of who is submitting it to Flow. This can control which parties are notified of a change.",
          "attributes": [],
          "type": "order_change_source",
          "required": true
        },
        {
          "name": "reason",
          "annotations": [],
          "description": "Reason for the cancellation.",
          "attributes": [],
          "type": "cancel_reason",
          "required": true
        },
        {
          "name": "lines",
          "annotations": [],
          "attributes": [],
          "type": "[fulfillment_line_cancel_form]",
          "required": true
        }
      ]
    },
    {
      "plural": "fulfillment_complete_cancellation_forms",
      "name": "fulfillment_complete_cancellation_form",
      "description": "Changing an order for the purpose of completely cancelling all remaining uncancelled, unshipped lines of an order.",
      "attributes": [],
      "fields": [
        {
          "default": "fulfillment",
          "name": "change_source",
          "annotations": [],
          "description": "The original source of this update, regardless of who is submitting it to Flow. This can control which parties are notified of a change.",
          "attributes": [],
          "type": "order_change_source",
          "required": true
        },
        {
          "name": "reason",
          "annotations": [],
          "description": "Reason for the cancellation.",
          "attributes": [],
          "type": "cancel_reason",
          "required": true
        }
      ]
    },
    {
      "plural": "fulfillment_experience_references",
      "name": "fulfillment_experience_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "USD"
        }
      ]
    },
    {
      "plural": "fulfillment_items",
      "name": "fulfillment_item",
      "description": "Used to track and manage the fulfillment of quantities of a sku",
      "attributes": [],
      "fields": [
        {
          "name": "item_number",
          "annotations": [],
          "description": "The number of an item in the Flow catalog",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "line_number",
          "annotations": [],
          "description": "The number of a line on a customer order.",
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "quantities",
          "annotations": [],
          "attributes": [],
          "type": "[fulfillment_item_quantity]",
          "required": true
        }
      ]
    },
    {
      "plural": "fulfillment_item_allocation_detailses",
      "name": "fulfillment_item_allocation_details",
      "description": "Details about how prices were allocated to a fulfillment; use for reporting the value or net value of a line",
      "attributes": [],
      "fields": [
        {
          "name": "item_number",
          "annotations": [],
          "description": "The number of an item in the Flow cagalog.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "line_number",
          "annotations": [],
          "description": "The number of a line on a customer order.",
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "levies",
          "annotations": [],
          "description": "Represents all taxes and duties paid on an item",
          "attributes": [],
          "type": "price_with_base",
          "required": true
        },
        {
          "name": "total",
          "annotations": [],
          "description": "Represents the total price of this fulfillment line.",
          "attributes": [],
          "type": "price_with_base",
          "required": true
        }
      ]
    },
    {
      "plural": "fulfillment_item_quantities",
      "name": "fulfillment_item_quantity",
      "description": "Fulfillment status of item quantities",
      "attributes": [],
      "fields": [
        {
          "name": "status",
          "annotations": [],
          "description": "Current status of an item quantity",
          "attributes": [],
          "type": "fulfillment_item_quantity_status",
          "required": true
        },
        {
          "name": "quantity",
          "annotations": [],
          "description": "The quantity of the line that is in this status",
          "attributes": [],
          "type": "long",
          "required": true
        }
      ]
    },
    {
      "plural": "fulfillment_line_cancel_forms",
      "name": "fulfillment_line_cancel_form",
      "description": "At least one of item_number, line_number are required. If you can, send both.",
      "attributes": [],
      "fields": [
        {
          "name": "item_number",
          "annotations": [],
          "description": "The Flow item number for which you want to cancel some quantity.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "line_number",
          "annotations": [],
          "description": "The line number for which you want to cancel some quantity. If omitted and the item appears in multiple lines, we attempt to apply the cancel by looking at the first uncancelled order line.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "quantity",
          "annotations": [],
          "description": "The cancelled quantity for this line item.",
          "attributes": [],
          "type": "long",
          "minimum": 1,
          "required": true
        }
      ]
    },
    {
      "plural": "fully_harmonized_item_upserteds",
      "name": "fully_harmonized_item_upserted",
      "description": "Event indicating insertion or changes to the details of a fully harmonized item. Will be triggered upon any change to the item being harmonized, its duties or taxes. If two changes occur within minutes of each other, it is possible only one upserted event will be produced, aggregating both changes.",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "item_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "customs_description",
          "annotations": [],
          "description": "Flow curated description of the product. Intended for use on commercial invoices and other customs documents.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "hs6_code",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "landed_costs",
          "annotations": [],
          "description": "Landed costs for all the lanes for which a result exists in Harmonization.",
          "attributes": [],
          "type": "[lane_landed_cost]",
          "required": true
        }
      ]
    },
    {
      "plural": "generic_errors",
      "name": "generic_error",
      "description": "An error of some type has occurred. The most common error will be validation on input. See messages for details.",
      "attributes": [],
      "fields": [
        {
          "default": "generic_error",
          "name": "code",
          "annotations": [],
          "description": "Generic errors will always have a code set to 'generic_error'",
          "attributes": [],
          "type": "generic_error_code",
          "required": true
        },
        {
          "name": "messages",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "minimum": 1,
          "required": true
        }
      ]
    },
    {
      "plural": "generic_reservation_errors",
      "name": "generic_reservation_error",
      "attributes": [],
      "fields": [
        {
          "name": "messages",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "minimum": 1,
          "required": true
        }
      ]
    },
    {
      "plural": "geo_forms",
      "name": "geo_form",
      "description": "Form used to update geographic preferences",
      "attributes": [],
      "fields": [
        {
          "name": "country",
          "annotations": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAN"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        },
        {
          "name": "language",
          "annotations": [],
          "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "en"
        },
        {
          "name": "locale",
          "annotations": [],
          "description": "Locale Id as defined in https://api.flow.io/reference/locales",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "en-US"
        },
        {
          "name": "experience",
          "annotations": [],
          "description": "The ID of a specific experience to use",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "google_pay_authorization_payloads",
      "name": "google_pay_authorization_payload",
      "attributes": [],
      "fields": [
        {
          "name": "payload",
          "annotations": [],
          "description": "See io.flow.google.pay.v0.models.payment_data",
          "attributes": [],
          "type": "object",
          "required": true
        }
      ]
    },
    {
      "plural": "harmonization_documents",
      "name": "harmonization_document",
      "attributes": [],
      "fields": [
        {
          "name": "code",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "categories",
          "annotations": [],
          "attributes": [],
          "type": "[category_summary]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "origin",
          "annotations": [],
          "description": "ISO 3166 3-character code for country of origin. See https://api.flow.io/reference/countries",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "USA"
        }
      ]
    },
    {
      "plural": "harmonization_hs10_export_types",
      "name": "harmonization_hs10_export_type",
      "description": "Exports harmonization HS10 codes",
      "attributes": [],
      "fields": [
        {
          "name": "origin",
          "annotations": [],
          "description": "The specific origin to export",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "destination",
          "annotations": [],
          "description": "The specific destination to export",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "numbers",
          "annotations": [],
          "description": "The specific list of item numbers to export",
          "attributes": [],
          "type": "[string]",
          "required": false
        },
        {
          "name": "has_codes",
          "annotations": [],
          "description": "Indicates items with assigned or unassigned codes should be exported",
          "attributes": [],
          "type": "boolean",
          "required": false
        },
        {
          "name": "has_origins",
          "annotations": [],
          "description": "Indicates items with assigned or unassigned origins should be exported",
          "attributes": [],
          "type": "boolean",
          "required": false
        },
        {
          "name": "sort",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "harmonization_hs6_export_types",
      "name": "harmonization_hs6_export_type",
      "description": "Exports HS6 codes",
      "attributes": [],
      "fields": [
        {
          "name": "numbers",
          "annotations": [],
          "description": "The specific list of item numbers to export",
          "attributes": [],
          "type": "[string]",
          "required": false
        },
        {
          "name": "has_codes",
          "annotations": [],
          "description": "Indicates items with assigned or unassigned codes should be exported",
          "attributes": [],
          "type": "boolean",
          "required": false
        },
        {
          "name": "sort",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "harmonization_landed_cost_export_types",
      "name": "harmonization_landed_cost_export_type",
      "description": "Export for landed cost items.",
      "attributes": [],
      "fields": [
        {
          "name": "items",
          "annotations": [],
          "description": "The list of items to include in the export",
          "attributes": [],
          "type": "[landed_cost_item]",
          "required": true
        }
      ]
    },
    {
      "plural": "harmonization_overview_export_types",
      "name": "harmonization_overview_export_type",
      "description": "Exports HS10 code overview details",
      "attributes": [],
      "fields": [
        {
          "name": "origin",
          "annotations": [],
          "description": "The specific of origin to export",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "destination",
          "annotations": [],
          "description": "The specific destination to export",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "sort",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "harmonized_categories",
      "name": "harmonized_category",
      "description": "Categories optimized for harmonization",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "parent",
          "annotations": [],
          "attributes": [],
          "type": "harmonized_category_reference",
          "required": false
        }
      ]
    },
    {
      "plural": "harmonized_category_references",
      "name": "harmonized_category_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "harmonized_items",
      "name": "harmonized_item",
      "description": "A harmonized item stores explicit information about this item for the purposes of harmonization / classification. The harmonization process begins by creating a harmonized item; this kicks off the internal processes. Once assigned, codes will be available via the hs6 and hs10 resources",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "default": "[]",
          "name": "categories",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "required": true
        },
        {
          "default": "{}",
          "name": "attributes",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "required": true
        },
        {
          "name": "description",
          "annotations": [],
          "description": "Generic description used to harmonize/classify the item and assign hs6 and hs10 codes.",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "harmonized_item_forms",
      "name": "harmonized_item_form",
      "attributes": [],
      "fields": [
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "USD"
        },
        {
          "name": "price",
          "annotations": [],
          "description": "The actual price of the item as offered to a customer. This price must be in the currency specified for this item.",
          "attributes": [],
          "type": "double",
          "required": true
        },
        {
          "name": "categories",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "required": false
        },
        {
          "name": "description",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "attributes",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "harmonized_item_put_forms",
      "name": "harmonized_item_put_form",
      "attributes": [],
      "fields": [
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "USD"
        },
        {
          "name": "price",
          "annotations": [],
          "description": "The actual price of the item as offered to a customer. This price must be in the currency specified for this item.",
          "attributes": [],
          "type": "double",
          "required": true
        },
        {
          "name": "categories",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "required": false
        },
        {
          "name": "description",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "attributes",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "harmonized_item_references",
      "name": "harmonized_item_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "description",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "harmonized_landed_costs",
      "name": "harmonized_landed_cost",
      "description": "Summary of landed cost data (taxes and duties) for 1 or more items going to a single destination country. Records are unique based on (item.number, country of origin).",
      "attributes": [],
      "fields": [
        {
          "name": "address",
          "annotations": [],
          "description": "The destination address",
          "attributes": [],
          "type": "address",
          "required": true
        },
        {
          "name": "items",
          "annotations": [],
          "attributes": [],
          "type": "[harmonized_landed_cost_item]",
          "required": true
        },
        {
          "name": "tax_registration",
          "annotations": [],
          "attributes": [],
          "type": "tax_registration",
          "required": false
        }
      ]
    },
    {
      "plural": "harmonized_landed_cost_forms",
      "name": "harmonized_landed_cost_form",
      "description": "Allows calculation of duty and tax for multiple items in one API call for items going to a specific destination country",
      "attributes": [],
      "fields": [
        {
          "name": "address",
          "annotations": [],
          "description": "The destination address. At a minimum, country code is required, but more precise information will lead to more precise rates.",
          "attributes": [],
          "type": "address",
          "required": true
        },
        {
          "name": "item_numbers",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "required": true
        },
        {
          "name": "source_address",
          "annotations": [],
          "description": "The center address from where the items were shipped",
          "attributes": [],
          "type": "address",
          "required": false
        },
        {
          "name": "order_number",
          "annotations": [],
          "description": "The order number",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "line_items",
          "annotations": [],
          "attributes": [],
          "type": "[line_item]",
          "required": false
        },
        {
          "name": "tax_registration_id",
          "annotations": [],
          "description": "The ID of a tax registration to use to evaluate the tax rates as the registration may affect applicable rates. e.g. EU VAT registration number.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "billing_address",
          "annotations": [],
          "description": "The billing address. Used in some cases to determine tax jurisdiction.",
          "attributes": [],
          "type": "billing_address",
          "required": false
        }
      ]
    },
    {
      "plural": "harmonized_landed_cost_items",
      "name": "harmonized_landed_cost_item",
      "description": "Duty and tax information for a given item. Note that the internal implementation supports multiple countries of origin.",
      "attributes": [],
      "fields": [
        {
          "name": "item",
          "annotations": [],
          "attributes": [],
          "type": "harmonized_item_reference",
          "required": true
        },
        {
          "name": "duty",
          "annotations": [],
          "attributes": [],
          "type": "duty",
          "required": true
        },
        {
          "name": "tax",
          "annotations": [],
          "attributes": [],
          "type": "tax",
          "required": true
        },
        {
          "name": "tax_applicability",
          "annotations": [],
          "attributes": [],
          "type": "tax_applicability",
          "required": false
        }
      ]
    },
    {
      "plural": "harmonized_landed_cost_upserteds",
      "name": "harmonized_landed_cost_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "The harmonizaed landed cost item id",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "landed_cost",
          "annotations": [],
          "attributes": [],
          "type": "harmonized_landed_cost",
          "required": true
        }
      ]
    },
    {
      "plural": "headers",
      "name": "header",
      "attributes": [],
      "fields": [
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "value",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "healthchecks",
      "name": "healthcheck",
      "attributes": [],
      "fields": [
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "healthy"
        }
      ]
    },
    {
      "plural": "hops",
      "name": "hop",
      "attributes": [],
      "fields": [
        {
          "name": "hop_number",
          "annotations": [],
          "attributes": [],
          "type": "integer",
          "required": true
        },
        {
          "name": "hop_estimate",
          "annotations": [],
          "attributes": [],
          "type": "hop_estimate",
          "required": true
        }
      ]
    },
    {
      "plural": "hop_estimates",
      "name": "hop_estimate",
      "attributes": [],
      "fields": [
        {
          "name": "origin_address",
          "annotations": [],
          "description": "Address the package is originating from",
          "attributes": [],
          "type": "shipping_address",
          "required": true
        },
        {
          "name": "destination_address",
          "annotations": [],
          "description": "Address the package is going to",
          "attributes": [],
          "type": "shipping_address",
          "required": true
        },
        {
          "name": "service",
          "annotations": [],
          "description": "Carrier service used for this estimate",
          "attributes": [],
          "type": "ratecard_service_summary",
          "required": true,
          "example": "dhl-express-worldwide"
        },
        {
          "name": "shipment_window",
          "annotations": [],
          "description": "Represents min/max days transit time for a shipment in this estimate",
          "attributes": [],
          "type": "shipment_window",
          "required": true
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The base iso_4217_3 currency code as defined in http://reference.api.flow.io/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "USD"
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "Base amount for this shipment based on rates on the appropriate lane on the rate card",
          "attributes": [],
          "type": "double",
          "required": true
        },
        {
          "name": "fees",
          "annotations": [],
          "description": "Fees applicable for this estimate",
          "attributes": [],
          "type": "[ratecard_fee]",
          "required": true
        },
        {
          "name": "total",
          "annotations": [],
          "description": "Total of the amount plus any applicable fees",
          "attributes": [],
          "type": "double",
          "required": true
        }
      ]
    },
    {
      "plural": "hs10",
      "name": "hs10",
      "description": "The (Harmonized System) HS-10 code assigned to an item with a given origin/destination pair.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "item",
          "annotations": [],
          "description": "The item to which this code is assigned",
          "attributes": [],
          "type": "harmonized_item_reference",
          "required": true
        },
        {
          "name": "origin",
          "annotations": [],
          "description": "The ISO 3166 3 character code for the country of origin",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "destination",
          "annotations": [],
          "description": "The ISO 3166 3 character code for the destination country",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "code",
          "annotations": [],
          "description": "The assigned HS-10 code",
          "attributes": [],
          "type": "string",
          "minimum": 10,
          "required": true
        }
      ]
    },
    {
      "plural": "hs10_code_deleteds",
      "name": "hs10_code_deleted",
      "description": "Event raised whenever an HS-10 code is unassigned from an item",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "origin",
          "annotations": [],
          "description": "ISO 3166 3 character code for country of origin",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "destination",
          "annotations": [],
          "description": "ISO 3166 3 character code for destination country",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "hs10_code_upserteds",
      "name": "hs10_code_upserted",
      "description": "Event raised whenever an HS-10 code is assigned to an item",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "origin",
          "annotations": [],
          "description": "ISO 3166 3 character code for country of origin",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "destination",
          "annotations": [],
          "description": "ISO 3166 3 character code for destination country",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "code",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "6209410000"
        }
      ]
    },
    {
      "plural": "hs10_versions",
      "name": "hs10_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "hs10",
          "annotations": [],
          "attributes": [],
          "type": "hs10",
          "required": true
        }
      ]
    },
    {
      "plural": "hs6",
      "name": "hs6",
      "description": "The (Harmonized System) HS-6 code assigned to an item.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "item",
          "annotations": [],
          "description": "The item to which this code is assigned",
          "attributes": [],
          "type": "harmonized_item_reference",
          "required": true
        },
        {
          "name": "code",
          "annotations": [],
          "description": "The assigned HS-6 code",
          "maximum": 6,
          "attributes": [],
          "type": "string",
          "minimum": 6,
          "required": true
        }
      ]
    },
    {
      "plural": "hs6_code_deleteds",
      "name": "hs6_code_deleted",
      "description": "Event raised whenever an HS-6 code is deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "hs6_code_upserteds",
      "name": "hs6_code_upserted",
      "description": "Event raised whenever an HS-6 code is assigned to an item",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "code",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "620941"
        }
      ]
    },
    {
      "plural": "identifier_forms",
      "name": "identifier_form",
      "attributes": [],
      "fields": [
        {
          "name": "primary",
          "annotations": [],
          "description": "A payment transaction can optionally have a single additional primary identifier - this identifier will be made available in billing to assist in reconciliation. If not specified, the first identifer created will automatically be marked the default",
          "attributes": [],
          "type": "boolean",
          "required": false
        },
        {
          "name": "name",
          "annotations": [],
          "description": "A name to identify the source of this identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "images",
      "name": "image",
      "description": "The URL to an image, with optional tags. Flow Commerce primarily uses images to enhance the administrative tools (e.g. showing an item image in console)",
      "attributes": [],
      "fields": [
        {
          "name": "url",
          "annotations": [],
          "description": "The full URL to the image",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png"
        },
        {
          "default": "[]",
          "name": "tags",
          "annotations": [],
          "description": "Tags can be used to identify the type of image being sent",
          "attributes": [],
          "type": "[image_tag]",
          "required": true
        }
      ]
    },
    {
      "plural": "image_forms",
      "name": "image_form",
      "description": "Image form defines the data needed to create an image",
      "attributes": [],
      "fields": [
        {
          "name": "url",
          "annotations": [],
          "description": "The full URL to the image",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png"
        },
        {
          "name": "tags",
          "annotations": [],
          "description": "Optional tags that can keep track of the primary purpose of this image throughout the Flow platform.",
          "attributes": [],
          "type": "[image_tag]",
          "required": false
        }
      ]
    },
    {
      "plural": "imports",
      "name": "import",
      "description": "Imports allow you to upload data to Flow via files in batch. Each import fetches data from a given URL. The type of the import determines which file format to expect and what data to update",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "import_type",
          "required": true
        },
        {
          "name": "source_url",
          "annotations": [],
          "description": "The URL from which we download the file to import",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "filename",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "export_status",
          "required": true
        },
        {
          "name": "created_at",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "started_at",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "completed_at",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "results",
          "annotations": [],
          "attributes": [],
          "type": "import_results",
          "required": false
        },
        {
          "name": "deliveries",
          "annotations": [],
          "description": "Optionally specify 1 or more delivery mechanisms for the import - e.g. send an email once ready",
          "attributes": [],
          "type": "[export_delivery]",
          "required": true
        }
      ]
    },
    {
      "plural": "import_forms",
      "name": "import_form",
      "description": "Import forms create imports. The import type defines both the type of the import (e.g. the CSV File format) and the URL at which the source data are available. If you do not have a URL readily available, you can first upload a file via the Flow API - see the resource named 'Upload'",
      "attributes": [],
      "fields": [
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "import_type",
          "required": true
        },
        {
          "name": "source_url",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "filename",
          "annotations": [],
          "description": "Optional filename. Will default to the file in the source URL",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "emails",
          "annotations": [
            "personal_data"
          ],
          "description": "Once the import has completed, we will send an email notification to all of the emails provided.",
          "attributes": [],
          "type": "[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "import_results",
      "name": "import_results",
      "attributes": [],
      "fields": [
        {
          "name": "number_successful",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "number_errors",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "url",
          "annotations": [],
          "description": "If there were any errors, this URL wil contain detailed information on the lines that failed to import and why.",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "import_templates",
      "name": "import_template",
      "description": "An import template provides an organization specific example CSV file of a particular import type.",
      "attributes": [],
      "fields": [
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "import_type",
          "required": true
        },
        {
          "name": "documentation_url",
          "annotations": [],
          "description": "The URL to specific documentation about this import type",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "import_template_examples",
      "name": "import_template_example",
      "description": "An import template example provides a link to a real, organization specific example CSV import file.",
      "attributes": [],
      "fields": [
        {
          "name": "url",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "import_template_forms",
      "name": "import_template_form",
      "attributes": [],
      "fields": [
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "import_type",
          "required": true
        }
      ]
    },
    {
      "plural": "import_versions",
      "name": "import_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "import",
          "annotations": [],
          "attributes": [],
          "type": "import",
          "required": true
        }
      ]
    },
    {
      "plural": "inbound_carton_fees",
      "name": "inbound_carton_fee",
      "attributes": [],
      "fields": [
        {
          "name": "amount",
          "annotations": [],
          "attributes": [],
          "type": "money",
          "required": true
        }
      ]
    },
    {
      "plural": "included_levies",
      "name": "included_levies",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "included_levy_key",
          "required": true
        },
        {
          "name": "label",
          "annotations": [],
          "description": "The label for the included levies that can be displayed as a tooltip on the product detail page.",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "inline_authorization_detailses",
      "name": "inline_authorization_details",
      "description": "Represents an online payment that requires the client token from underlying payment processor before entering their payment information.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "The id of the record containing expanded authorization details for this authorization.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "client_token",
          "annotations": [],
          "description": "The client token provided by underlying payment processor.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "parameters",
          "annotations": [],
          "attributes": [],
          "type": "object",
          "required": false
        }
      ]
    },
    {
      "plural": "inline_authorization_forms",
      "name": "inline_authorization_form",
      "description": "Executes a widget-based payment based on the provided payment method.",
      "attributes": [],
      "fields": [
        {
          "name": "method",
          "annotations": [],
          "description": "The name (or brand code) of the redirect-based payment method for which to create an authorization, e.g. 'unionpay'.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "issuer",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The id of the issuing bank, if required by the selected payment method. For payment methods such as iDEAL, the customer must select an issuer before being redirected to provide payment details.",
          "attributes": [],
          "type": "issuer_reference",
          "required": false
        },
        {
          "name": "order_number",
          "annotations": [],
          "description": "Client order number for which to authorize payment.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "The amount to authorize.",
          "attributes": [],
          "type": "decimal",
          "required": true,
          "example": "120.38"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        },
        {
          "name": "billing_address",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Billing address",
          "attributes": [],
          "type": "billing_address",
          "required": false
        },
        {
          "name": "key",
          "annotations": [],
          "description": "Your unique identifier for this transaction, which if provided is used to implement idempotency. If not provided, we will assign.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "A set of key/value pairs that you can attach to an authorization object",
          "attributes": [],
          "type": "map[string]",
          "required": false
        },
        {
          "name": "ip",
          "annotations": [
            "personal_data"
          ],
          "description": "The IP address of the consumer",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "96.242.151.245"
        },
        {
          "name": "payload",
          "annotations": [],
          "description": "If required, contains the payload used to complete the authorization (e.g. the token from Google Pay)",
          "attributes": [],
          "type": "authorization_payload",
          "required": false
        }
      ]
    },
    {
      "plural": "input_forms",
      "name": "input_form",
      "attributes": [],
      "fields": [
        {
          "name": "values",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "input_form_specifications",
      "name": "input_form_specification",
      "attributes": [],
      "fields": [
        {
          "name": "inputs",
          "annotations": [],
          "attributes": [],
          "type": "[input_specification]",
          "required": false
        },
        {
          "name": "limitations",
          "annotations": [],
          "attributes": [],
          "type": "input_specification_limitations",
          "required": false
        }
      ]
    },
    {
      "plural": "input_specifications",
      "name": "input_specification",
      "attributes": [],
      "fields": [
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "input_specification_type",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "display_text",
          "annotations": [],
          "description": "Text to display for this input.",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "input_specification_limitation_maxes",
      "name": "input_specification_limitation_max",
      "description": "Represents the maximum number of accepted inputs",
      "attributes": [],
      "fields": [
        {
          "name": "max",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        }
      ]
    },
    {
      "plural": "input_specification_limitationses",
      "name": "input_specification_limitations",
      "attributes": [],
      "fields": [
        {
          "name": "limitations",
          "annotations": [],
          "attributes": [],
          "type": "[input_specification_limitation]",
          "required": false
        }
      ]
    },
    {
      "plural": "inventory_backorders",
      "name": "inventory_backorder",
      "description": "Enables backorders, setting an optional number of units that we allow for backorder. For example, a backorder w/ quantity 10 will enable selling until the actual inventory quantity is -10.",
      "attributes": [],
      "fields": [
        {
          "name": "quantity",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        }
      ]
    },
    {
      "plural": "inventory_center_references",
      "name": "inventory_center_reference",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "inventory_check_responses",
      "name": "inventory_check_response",
      "attributes": [],
      "fields": [
        {
          "name": "items",
          "annotations": [],
          "attributes": [],
          "type": "[inventory_check_response_item]",
          "required": true
        }
      ]
    },
    {
      "plural": "inventory_check_response_items",
      "name": "inventory_check_response_item",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "quantity",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "inventory_status",
          "annotations": [],
          "attributes": [],
          "type": "inventory_status",
          "required": true
        }
      ]
    },
    {
      "plural": "inventory_experience_references",
      "name": "inventory_experience_reference",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "inventory_item_references",
      "name": "inventory_item_reference",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "inventory_requests",
      "name": "inventory_request",
      "attributes": [],
      "fields": [
        {
          "name": "items",
          "annotations": [],
          "attributes": [],
          "type": "[inventory_request_item]",
          "required": true
        }
      ]
    },
    {
      "plural": "inventory_request_items",
      "name": "inventory_request_item",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "quantity",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        }
      ]
    },
    {
      "plural": "inventory_rules",
      "name": "inventory_rule",
      "description": "Ordered list of rules to apply, from first to last, to get available quantity. This is unique per organization",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "position",
          "annotations": [],
          "description": "Order in which rule applicability will be checked",
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "query",
          "annotations": [],
          "description": "Query to be used to apply this rule. Only '*' is available for now, which will apply to all cases",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "*"
        },
        {
          "name": "strategy",
          "annotations": [],
          "description": "Type of inventory strategy to be used for this rule",
          "attributes": [],
          "type": "inventory_strategy",
          "required": true,
          "example": "in_stock, backorder"
        }
      ]
    },
    {
      "plural": "inventory_rule_forms",
      "name": "inventory_rule_form",
      "attributes": [],
      "fields": [
        {
          "name": "position",
          "annotations": [],
          "description": "Order in which rule applicability will be checked",
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "query",
          "annotations": [],
          "description": "Query to be used to apply this rule. Only '*' is available for now, which will apply to all cases",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "*"
        },
        {
          "name": "strategy",
          "annotations": [],
          "description": "Type of inventory strategy to be used for this rule",
          "attributes": [],
          "type": "inventory_strategy",
          "required": true,
          "example": "in_stock, backorder"
        }
      ]
    },
    {
      "plural": "inventory_rule_versions",
      "name": "inventory_rule_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "inventory_rule",
          "annotations": [],
          "attributes": [],
          "type": "inventory_rule",
          "required": true
        }
      ]
    },
    {
      "plural": "inventory_snapshots",
      "name": "inventory_snapshot",
      "description": "Inventory snapshot reflects the current quantity and available number of units for a given center / item",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "available",
          "annotations": [],
          "description": "Actual available quantity for an item at a given center",
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "center",
          "annotations": [],
          "description": "Location capable of fulfilling a shipment for item in inventory",
          "attributes": [],
          "type": "inventory_center_reference",
          "required": true
        },
        {
          "name": "item",
          "annotations": [],
          "description": "Client item being stored in inventory",
          "attributes": [],
          "type": "inventory_item_reference",
          "required": true
        },
        {
          "name": "quantity",
          "annotations": [],
          "description": "Running total of inventory update quantities provided",
          "attributes": [],
          "type": "long",
          "required": true
        }
      ]
    },
    {
      "plural": "inventory_snapshot_versions",
      "name": "inventory_snapshot_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "inventory_snapshot",
          "annotations": [],
          "attributes": [],
          "type": "inventory_snapshot",
          "required": true
        }
      ]
    },
    {
      "plural": "inventory_stocks",
      "name": "inventory_stock",
      "description": "Treats inventory as available as long as the actual inventory quantity is > the specified quantity. A common use case is to set quantity to zero to indicate availability as long as there is at least 1 unit available.",
      "attributes": [],
      "fields": [
        {
          "name": "quantity",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "minimum": 0,
          "required": true
        }
      ]
    },
    {
      "plural": "inventory_unlimiteds",
      "name": "inventory_unlimited",
      "description": "Items affected with rules pursuing an unlimited strategy will always be available",
      "attributes": [],
      "fields": [
        {
          "default": "unlimited",
          "name": "quantity",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "inventory_updates",
      "name": "inventory_update",
      "description": "Represents a single update on inventory quantity",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "idempotency_key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "center",
          "annotations": [],
          "description": "Location capable of fulfilling a shipment for item in inventory",
          "attributes": [],
          "type": "inventory_center_reference",
          "required": true
        },
        {
          "name": "item",
          "annotations": [],
          "description": "Client item number being stored in inventory",
          "attributes": [],
          "type": "inventory_item_reference",
          "required": true
        },
        {
          "name": "notes",
          "annotations": [],
          "attributes": [],
          "type": "object",
          "required": true
        },
        {
          "name": "quantity",
          "annotations": [],
          "description": "Amount of the update made",
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "update_type",
          "required": true
        }
      ]
    },
    {
      "plural": "inventory_update_forms",
      "name": "inventory_update_form",
      "description": "Form used to create an update on inventory. If inventory for center/item has not been previously created, a new row is created for the center/item tuple.",
      "attributes": [],
      "fields": [
        {
          "name": "center",
          "annotations": [],
          "description": "Center capable of fulfilling a shipment for item in inventory",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "idempotency_key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "item_number",
          "annotations": [],
          "description": "Summary about the item being kept in inventory",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "quantity",
          "annotations": [],
          "description": "Amount of the update to be made",
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "update_type",
          "required": true
        },
        {
          "name": "notes",
          "annotations": [],
          "attributes": [],
          "type": "object",
          "required": false
        }
      ]
    },
    {
      "plural": "inventory_update_versions",
      "name": "inventory_update_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "inventory_update",
          "annotations": [],
          "attributes": [],
          "type": "inventory_update",
          "required": true
        }
      ]
    },
    {
      "plural": "invitations",
      "name": "invitation",
      "description": "An invitation via email to a user to join this organization. The user will then walk through a user login/registration process and will immediately become a member of the organization.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "expandable_organization",
          "required": true
        },
        {
          "name": "email",
          "annotations": [
            "personal_data"
          ],
          "description": "The email address to which we send this invitation",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "name",
          "required": true
        },
        {
          "name": "role",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "role",
          "deprecation": {
            "description": "Static roles are being deprecated for role-based permissions."
          },
          "required": false
        },
        {
          "name": "roles",
          "annotations": [
            "personal_data"
          ],
          "description": "The desired role(s) this user will play for the organization",
          "attributes": [],
          "type": "[flow_role]",
          "required": false
        },
        {
          "name": "expiration",
          "annotations": [],
          "description": "The date / time on which this token expires. Current default is for tokens to live for 1 week",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        }
      ]
    },
    {
      "plural": "invitation_errors",
      "name": "invitation_error",
      "description": "Returns information as to why a particular invitation could not be accepted.",
      "attributes": [],
      "fields": [
        {
          "name": "code",
          "annotations": [],
          "attributes": [],
          "type": "invitation_error_code",
          "required": true
        },
        {
          "name": "messages",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "minimum": 1,
          "required": true
        }
      ]
    },
    {
      "plural": "invitation_forms",
      "name": "invitation_form",
      "attributes": [],
      "fields": [
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "email",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "name",
          "required": false
        },
        {
          "default": "member",
          "name": "role",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "role",
          "deprecation": {
            "description": "Static roles are being deprecated for role-based permissions."
          },
          "required": false
        },
        {
          "name": "roles",
          "annotations": [
            "personal_data"
          ],
          "description": "The desired role(s) this user will play for the organization",
          "attributes": [],
          "type": "[flow_role]",
          "required": false
        }
      ]
    },
    {
      "plural": "invitation_versions",
      "name": "invitation_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "invitation",
          "annotations": [],
          "attributes": [],
          "type": "invitation",
          "required": true
        }
      ]
    },
    {
      "plural": "invoice_exports",
      "name": "invoice_export",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "invoice_export_forms",
      "name": "invoice_export_form",
      "attributes": [],
      "fields": [
        {
          "name": "date_from",
          "annotations": [],
          "attributes": [],
          "type": "date-iso8601",
          "required": false
        },
        {
          "name": "date_to",
          "annotations": [],
          "attributes": [],
          "type": "date-iso8601",
          "required": false
        }
      ]
    },
    {
      "plural": "issuer_references",
      "name": "issuer_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "issuer_summaries",
      "name": "issuer_summary",
      "attributes": [],
      "fields": [
        {
          "name": "iin",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "description": "The name of the organization that issued this card",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "chase"
        },
        {
          "name": "country",
          "annotations": [],
          "description": "The country of the issuing bank. The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "IRL"
        }
      ]
    },
    {
      "plural": "issuer_v1s",
      "name": "issuer_v1",
      "attributes": [],
      "fields": [
        {
          "name": "iin",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "card_brand",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "visa"
        },
        {
          "name": "card_type",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "name",
          "annotations": [],
          "description": "The name of the organization that issued this card",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "chase"
        },
        {
          "name": "country",
          "annotations": [],
          "description": "The country of the issuing bank. The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "IRL"
        }
      ],
      "deprecation": {
        "description": "Use issuer_summary"
      }
    },
    {
      "plural": "items",
      "name": "item",
      "description": "The Flow item defines a specific item that can be purchased by a consumer. For many clients, this will map to a Sku.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "locale",
          "annotations": [],
          "description": "Locale id. See https://api.flow.io/reference/locales",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "en-US"
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "price",
          "annotations": [],
          "attributes": [],
          "type": "price",
          "required": true
        },
        {
          "default": "[]",
          "name": "categories",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "required": true
        },
        {
          "name": "description",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "default": "{}",
          "name": "attributes",
          "annotations": [],
          "description": "Attributes of the items. An attribute of type intent must be given as a string representation of a decimal to be correctly localized.",
          "attributes": [],
          "type": "map[string]",
          "required": true
        },
        {
          "name": "dimensions",
          "annotations": [],
          "attributes": [],
          "type": "dimensions",
          "required": true
        },
        {
          "default": "[]",
          "name": "images",
          "annotations": [],
          "attributes": [],
          "type": "[image]",
          "required": true
        },
        {
          "name": "local",
          "annotations": [],
          "attributes": [],
          "type": "local",
          "required": false
        }
      ]
    },
    {
      "plural": "item_attributes_patch_forms",
      "name": "item_attributes_patch_form",
      "attributes": [],
      "fields": [
        {
          "default": "{}",
          "name": "attributes",
          "annotations": [],
          "description": "Attributes of the item.",
          "attributes": [
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "attribute",
                "operation_method": "POST",
                "operation_path": "/:organization/attributes",
                "identifier_field": "key",
                "delete_operation_path": "/:organization/attributes/:key"
              }
            }
          ],
          "type": "map[string]",
          "required": true
        }
      ]
    },
    {
      "plural": "item_forms",
      "name": "item_form",
      "description": "The item form defines the data required to create an item.",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "locale",
          "annotations": [],
          "description": "The locale in which the content of this item is written.",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "en-US"
        },
        {
          "name": "name",
          "annotations": [],
          "description": "The customer friendly name of the actual item in the catalog.",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "Drawstring linen pants"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "USD"
        },
        {
          "name": "price",
          "annotations": [],
          "description": "The actual price of the item as offered to a customer. This price must be in the currency specified for this item.",
          "attributes": [],
          "type": "double",
          "required": true
        },
        {
          "name": "categories",
          "annotations": [],
          "description": "A list of categories associated with this item.",
          "attributes": [],
          "type": "[string]",
          "required": false
        },
        {
          "name": "description",
          "annotations": [],
          "description": "If provided, the item description is used to improve classification.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "Attributes represent all other product data that you have regarding this item. Common attributes include 'country_of_origin', 'color', 'size', 'material', etc. We recommend including as many attributes as possible, even if you are not currently planning to use them.",
          "attributes": [
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "attribute",
                "operation_method": "POST",
                "operation_path": "/:organization/attributes",
                "identifier_field": "key",
                "delete_operation_path": "/:organization/attributes/:key"
              }
            }
          ],
          "type": "map[string]",
          "required": false
        },
        {
          "name": "dimensions",
          "annotations": [],
          "description": "If provided, dimensions are used to drive more accurate shipping estimates.",
          "attributes": [],
          "type": "dimensions",
          "required": false
        },
        {
          "name": "images",
          "annotations": [],
          "description": "If provided, the item images will be used to enhance the user experience in Flow's online tools.",
          "attributes": [],
          "type": "[image_form]",
          "required": false
        }
      ]
    },
    {
      "plural": "item_form_overlays",
      "name": "item_form_overlay",
      "description": "The item form overlay defines data to merge into an item form.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "position",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "minimum": 0,
          "required": true
        },
        {
          "name": "price",
          "annotations": [],
          "attributes": [],
          "type": "price",
          "required": false
        },
        {
          "name": "categories",
          "annotations": [],
          "description": "A list of categories associated with this item.",
          "attributes": [],
          "type": "[string]",
          "required": false
        },
        {
          "name": "description",
          "annotations": [],
          "description": "If provided, the item description is used to improve classification.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "Attributes represent all other product data that you have regarding this item. Common attributes include 'country_of_origin', 'color', 'size', 'material', etc. We recommend including as many attributes as possible, even if you are not currently planning to use them.",
          "attributes": [],
          "type": "map[string]",
          "required": false
        },
        {
          "name": "dimensions",
          "annotations": [],
          "description": "If provided, dimensions are used to drive more accurate shipping estimates.",
          "attributes": [],
          "type": "dimensions",
          "required": false
        },
        {
          "name": "images",
          "annotations": [],
          "description": "If provided, the item images will be used to enhance the user experience in Flow's online tools.",
          "attributes": [],
          "type": "[image_form]",
          "required": false
        }
      ]
    },
    {
      "plural": "item_form_overlay_forms",
      "name": "item_form_overlay_form",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "price",
          "annotations": [],
          "description": "The actual price of the item as offered to a customer. This price must be in the currency specified for this item.",
          "attributes": [],
          "type": "double",
          "required": false
        },
        {
          "name": "currency",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "USD"
        },
        {
          "name": "position",
          "annotations": [],
          "description": "Position determines the order in which item form overlays are merged.  If not provided, will be treated as the last overlay to be merged.",
          "attributes": [],
          "type": "long",
          "minimum": 0,
          "required": false
        },
        {
          "name": "categories",
          "annotations": [],
          "description": "A list of categories associated with this item.",
          "attributes": [],
          "type": "[string]",
          "required": false
        },
        {
          "name": "description",
          "annotations": [],
          "description": "If provided, the item description is used to improve classification.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "Attributes represent all other product data that you have regarding this item. Common attributes include 'country_of_origin', 'color', 'size', 'material', etc. We recommend including as many attributes as possible, even if you are not currently planning to use them.",
          "attributes": [
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "attribute",
                "operation_method": "POST",
                "operation_path": "/:organization/attributes",
                "identifier_field": "key",
                "delete_operation_path": "/:organization/attributes/:key"
              }
            }
          ],
          "type": "map[string]",
          "required": false
        },
        {
          "name": "dimensions",
          "annotations": [],
          "description": "If provided, dimensions are used to drive more accurate shipping estimates.",
          "attributes": [],
          "type": "dimensions",
          "required": false
        },
        {
          "name": "images",
          "annotations": [],
          "description": "If provided, the item images will be used to enhance the user experience in Flow's online tools.",
          "attributes": [],
          "type": "[image_form]",
          "required": false
        }
      ]
    },
    {
      "plural": "item_margins",
      "name": "item_margin",
      "description": "Defines a fixed and percent margin to apply to items matching a query.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "q",
          "annotations": [],
          "description": "The query used to select items to which the margins are applied.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "fixed",
          "annotations": [],
          "description": "A fixed amount to add to an item in the base currency, e.g 1.25.",
          "attributes": [],
          "type": "decimal",
          "required": true,
          "example": "1.25"
        },
        {
          "name": "percent",
          "annotations": [],
          "description": "A percent of the base cost to add, e.g. 2.25 would indicate 2.25%.",
          "attributes": [],
          "type": "decimal",
          "required": true,
          "example": "2.25"
        },
        {
          "name": "position",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        }
      ]
    },
    {
      "plural": "item_margin_deleteds",
      "name": "item_margin_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "item_margin_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "organization_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "experience_key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "item_margin_post_forms",
      "name": "item_margin_post_form",
      "description": "A percent and/or fixed margin to apply to items based on query.",
      "attributes": [],
      "fields": [
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "q",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "fixed",
          "annotations": [],
          "description": "A fixed amount to add to an item in the base currency, e.g 1.25.",
          "attributes": [],
          "type": "decimal",
          "required": false,
          "example": "1.25"
        },
        {
          "name": "percent",
          "annotations": [],
          "description": "A percent of the base cost to add, e.g. 2.25 would indicate 2.25%.",
          "attributes": [],
          "type": "decimal",
          "required": false,
          "example": "2.25"
        },
        {
          "name": "position",
          "annotations": [],
          "description": "Defaults to end of list",
          "attributes": [],
          "type": "long",
          "required": false
        }
      ]
    },
    {
      "plural": "item_margin_put_forms",
      "name": "item_margin_put_form",
      "description": "A percent and/or fixed margin to apply to items based on query.",
      "attributes": [],
      "fields": [
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "q",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "fixed",
          "annotations": [],
          "description": "A fixed amount to add to an item in the base currency, e.g 1.25.",
          "attributes": [],
          "type": "decimal",
          "required": false,
          "example": "1.25"
        },
        {
          "name": "percent",
          "annotations": [],
          "description": "A percent of the base cost to add, e.g. 2.25 would indicate 2.25%.",
          "attributes": [],
          "type": "decimal",
          "required": false,
          "example": "2.25"
        },
        {
          "name": "position",
          "annotations": [],
          "description": "Defaults to end of list",
          "attributes": [],
          "type": "long",
          "required": false
        }
      ]
    },
    {
      "plural": "item_margin_upserteds",
      "name": "item_margin_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "item_margin_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "organization_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "experience_key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "q",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "fixed",
          "annotations": [],
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "percent",
          "annotations": [],
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "position",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "item_margin_versions",
      "name": "item_margin_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "item_margin",
          "annotations": [],
          "attributes": [],
          "type": "item_margin",
          "required": true
        }
      ]
    },
    {
      "plural": "item_origin_deleteds",
      "name": "item_origin_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "origin",
          "annotations": [],
          "description": "ISO 3166 3 character code for country of origin",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "item_origin_upserteds",
      "name": "item_origin_upserted",
      "description": "Event raised whenever an item is assigned a country of origin. Note that one item may have multiple countries of origin.",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "origin",
          "annotations": [],
          "description": "ISO 3166 3 character code for country of origin",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "item_price_update_forms",
      "name": "item_price_update_form",
      "description": "The item price update form is used to update only the price (and attributes, eg. msrp) of given item. This form defines the format of the CSV import.",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies If not specified, defaults to the existing item's currency",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "USD"
        },
        {
          "name": "price",
          "annotations": [],
          "description": "The actual price of the item as offered to a customer. This price must be in the currency specified for this item.",
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "default": "{}",
          "name": "attributes",
          "annotations": [],
          "description": "Attributes of the items. An attribute of type intent must be given as a string representation of a decimal to be correctly localized.",
          "attributes": [],
          "type": "map[string]",
          "required": true
        }
      ]
    },
    {
      "plural": "item_price_update_put_forms",
      "name": "item_price_update_put_form",
      "attributes": [],
      "fields": [
        {
          "name": "currency",
          "annotations": [],
          "description": "ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies If not specified, defaults to the existing item's currency",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "USD"
        },
        {
          "name": "price",
          "annotations": [],
          "description": "The actual price of the item as offered to a customer. This price must be in the currency specified for this item.",
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "default": "{}",
          "name": "attributes",
          "annotations": [],
          "description": "Attributes of the items. An attribute of type intent must be given as a string representation of a decimal to be correctly localized.",
          "attributes": [
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "attribute",
                "operation_method": "POST",
                "operation_path": "/:organization/attributes",
                "identifier_field": "key",
                "delete_operation_path": "/:organization/attributes/:key"
              }
            }
          ],
          "type": "map[string]",
          "required": true
        }
      ]
    },
    {
      "plural": "item_query_suggestions",
      "name": "item_query_suggestion",
      "attributes": [],
      "fields": [
        {
          "name": "q",
          "annotations": [],
          "description": "ex: 'brand:theory' 'category:rugs'",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "count",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": false
        }
      ]
    },
    {
      "plural": "item_references",
      "name": "item_reference",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "item_sales_margin_deleteds",
      "name": "item_sales_margin_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "item_sales_margin_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "organization_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "experience_key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "item_sales_margin_upserteds",
      "name": "item_sales_margin_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "item_sales_margin_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "organization_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "experience_key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "q",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "fixed",
          "annotations": [],
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "percent",
          "annotations": [],
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "position",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        }
      ]
    },
    {
      "plural": "item_shipping_pricings",
      "name": "item_shipping_pricing",
      "description": "Available shipping price(s) a customer sees. This can be used for targetted ads on Google or to display shipping price(s) on a PDP.",
      "attributes": [],
      "fields": [
        {
          "name": "min",
          "annotations": [],
          "description": "Minimum possible amount a customer might pay.",
          "attributes": [],
          "type": "price",
          "required": true
        },
        {
          "name": "max",
          "annotations": [],
          "description": "If different than the minimum available price, then this is provided.",
          "attributes": [],
          "type": "price",
          "required": false
        }
      ]
    },
    {
      "plural": "item_statisticses",
      "name": "item_statistics",
      "description": "Statistics covering product catalog item information, including total catalog item count, number of distinct categories, etc.",
      "attributes": [],
      "fields": [
        {
          "name": "items",
          "annotations": [],
          "description": "Total number of catalog items available from master catalog",
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "categories",
          "annotations": [],
          "description": "Distinct number of catalog item categories",
          "attributes": [],
          "type": "long",
          "required": true
        }
      ]
    },
    {
      "plural": "item_versions",
      "name": "item_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "item",
          "annotations": [],
          "attributes": [],
          "type": "item",
          "required": true
        }
      ]
    },
    {
      "plural": "jsonp_responses",
      "name": "jsonp_response",
      "description": "The jsonp_response defines the schema for all Flow APIs calls made over JSONP, providing access to the specific response status, headers, and body from the underlying service.  See https://docs.flow.io/#jsonp for details",
      "attributes": [],
      "fields": [
        {
          "name": "status",
          "annotations": [],
          "description": "The HTTP response code",
          "attributes": [],
          "type": "integer",
          "required": true
        },
        {
          "name": "headers",
          "annotations": [],
          "description": "The HTTP response headers",
          "attributes": [],
          "type": "map[[string]]",
          "required": true
        },
        {
          "name": "body",
          "annotations": [],
          "description": "The HTTP response body as a JSON object",
          "attributes": [],
          "type": "object",
          "required": true
        }
      ]
    },
    {
      "plural": "klaviyo_line_items",
      "name": "klaviyo_line_item",
      "attributes": [],
      "fields": [
        {
          "name": "content",
          "annotations": [],
          "description": "Item information to support rendering",
          "attributes": [],
          "type": "checkout_item_content",
          "required": true
        },
        {
          "name": "quantity",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "price",
          "annotations": [],
          "description": "Unit price of the item",
          "attributes": [],
          "type": "price_with_base",
          "required": true
        },
        {
          "name": "line_price",
          "annotations": [],
          "description": "Total price of the line item",
          "attributes": [],
          "type": "price_with_base",
          "required": true
        }
      ]
    },
    {
      "plural": "klaviyo_order_contents",
      "name": "klaviyo_order_content",
      "attributes": [],
      "fields": [
        {
          "name": "line_items",
          "annotations": [],
          "attributes": [],
          "type": "[klaviyo_line_item]",
          "required": true
        },
        {
          "name": "prices",
          "annotations": [],
          "attributes": [],
          "type": "klaviyo_order_prices",
          "required": true
        },
        {
          "name": "checkout_url",
          "annotations": [],
          "description": "Url to access the order in checkout",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "klaviyo_order_prices",
      "name": "klaviyo_order_prices",
      "description": "Contains cart related data.",
      "attributes": [],
      "fields": [
        {
          "name": "subtotal",
          "annotations": [],
          "attributes": [],
          "type": "price_with_base",
          "required": true
        },
        {
          "name": "vat",
          "annotations": [],
          "attributes": [],
          "type": "price_with_base",
          "required": false
        },
        {
          "name": "duty",
          "annotations": [],
          "attributes": [],
          "type": "price_with_base",
          "required": false
        },
        {
          "name": "discount",
          "annotations": [],
          "attributes": [],
          "type": "price_with_base",
          "required": false
        },
        {
          "name": "shipping",
          "annotations": [],
          "attributes": [],
          "type": "price_with_base",
          "required": false
        },
        {
          "name": "insurance",
          "annotations": [],
          "attributes": [],
          "type": "price_with_base",
          "required": false
        },
        {
          "name": "total",
          "annotations": [],
          "attributes": [],
          "type": "price_with_base",
          "required": true
        }
      ]
    },
    {
      "plural": "label_deleted_v2s",
      "name": "label_deleted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "label",
          "annotations": [],
          "attributes": [],
          "type": "shipping_label",
          "required": true
        }
      ]
    },
    {
      "plural": "label_format_deleteds",
      "name": "label_format_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "experience_key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "label_format_upserteds",
      "name": "label_format_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "experience_key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "format",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "label_order_summaries",
      "name": "label_order_summary",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "label_upserteds",
      "name": "label_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "label_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "carrier_tracking_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "commercial_invoice",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "flow_tracking_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "destination",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "shipping_address",
          "required": true
        },
        {
          "name": "origin",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "shipping_address",
          "required": true
        },
        {
          "name": "carrier",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "service",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "zpl",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "pdf",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "png",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "order",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "carrier_tracking_number_url",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "flow_tracking_number_url",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "center_key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "recipient",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "shipment_recipient",
          "required": false
        },
        {
          "name": "package",
          "annotations": [],
          "attributes": [],
          "type": "shipping_label_package",
          "required": false
        },
        {
          "name": "order_identifier",
          "annotations": [],
          "description": "The order identifier this label is associated with. Will be blank if not specified when a label was created.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "fulfillment_key",
          "annotations": [],
          "description": "The key of a fulfillment this label is associated with. Will be blank if not specified when a label was created.",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "label_upserted_v2s",
      "name": "label_upserted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "label",
          "annotations": [],
          "attributes": [],
          "type": "shipping_label",
          "required": true
        }
      ]
    },
    {
      "plural": "landed_cost_items",
      "name": "landed_cost_item",
      "description": "Tuple of item number, origin (from) country and destination (to) country",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "The item number to export",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "origin",
          "annotations": [],
          "description": "The origin country code to use for tax and duty computation",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "destination",
          "annotations": [],
          "description": "The destination country code to use for tax and duty computation",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "lane_landed_costs",
      "name": "lane_landed_cost",
      "description": "The tariff codes, duty rates and tax rates associated with an origin/destination pair. Does not take into account sales province",
      "attributes": [],
      "fields": [
        {
          "name": "origin",
          "annotations": [],
          "description": "The ISO 3166 3 character code for the country of origin",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "destination",
          "annotations": [],
          "description": "The ISO 3166 3 character code for the destination country",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "tariff_code",
          "annotations": [],
          "description": "The assigned tariff code for a product",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "effective_duty",
          "annotations": [],
          "description": "A percentage duty rate. Note that in the case of complex duties this will be calculated from the details of the item in question and may not scale with changes to price.",
          "attributes": [],
          "type": "duty",
          "required": true
        },
        {
          "name": "tax",
          "annotations": [],
          "attributes": [],
          "type": "tax",
          "required": true
        }
      ]
    },
    {
      "plural": "languages",
      "name": "language",
      "description": "ISO 639 2-character language code. See https://api.flow.io/reference/languages",
      "attributes": [],
      "fields": [
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "English"
        },
        {
          "name": "iso_639_2",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "en"
        }
      ]
    },
    {
      "plural": "lines",
      "name": "line",
      "description": "Provides display data for a line item.",
      "attributes": [],
      "fields": [
        {
          "name": "item_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "quantity",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "minimum": 1,
          "required": true
        },
        {
          "name": "price",
          "annotations": [],
          "attributes": [],
          "type": "price_with_base",
          "required": true
        },
        {
          "name": "total",
          "annotations": [],
          "attributes": [],
          "type": "price_with_base",
          "required": true
        },
        {
          "name": "attributes",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "line_items",
      "name": "line_item",
      "description": "Line items represent the items a consumer is purchasing, including additional information to complete the transaction. Note that you may pass in as many line items as you like - including repeating item numbers across line items.",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "quantity",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "minimum": 1,
          "required": true
        },
        {
          "name": "price",
          "annotations": [],
          "description": "The price of this item for this order. If not specified, we will use the item price from the experience. Note that this price represents the price of a single line item - the total price to the consumer will be quantity * price.",
          "attributes": [],
          "type": "money",
          "required": true
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "A set of key/value pairs that you can attach to the order. It can be useful for storing additional information about the charge in a structured format.",
          "attributes": [],
          "type": "map[string]",
          "required": true
        },
        {
          "name": "center",
          "annotations": [],
          "description": "Optional center key associated with this item. Used for orders and quotes to specify where to ship an item from. If not specified, Flow will infer based on inventory setup.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "discount",
          "annotations": [],
          "description": "The total discount, if any, to apply to this line item. Note that the discount is the total discount to apply regardless of the quantity here",
          "attributes": [],
          "type": "money",
          "required": false
        }
      ]
    },
    {
      "plural": "line_item_forms",
      "name": "line_item_form",
      "description": "Line items represent the items a consumer is purchasing, including additional information to complete the transaction. Note that you may pass in as many line items as you like - including repeating item numbers across line items.",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "item",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/items",
                "identifier_field": "number",
                "delete_operation_path": "/:organization/catalog/items/:number"
              }
            }
          ],
          "type": "string",
          "required": true
        },
        {
          "name": "quantity",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "minimum": 1,
          "required": true
        },
        {
          "name": "shipment_estimate",
          "annotations": [],
          "description": "For items that may not immediately ship out from the origin because of different models of inventory (e.g. drop-ship, sell-first), this is a way for a client to communicate when the items can ship out. This will be used to calculate delivery option windows.",
          "attributes": [],
          "type": "datetime_range",
          "required": false
        },
        {
          "name": "price",
          "annotations": [],
          "description": "The price of this item for this order. If not specified, we will use the item price from the experience",
          "attributes": [],
          "type": "money",
          "required": false
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "A set of key/value pairs that you can attach to the order. It can be useful for storing additional information about the charge in a structured format.",
          "attributes": [],
          "type": "map[string]",
          "required": false
        },
        {
          "name": "center",
          "annotations": [],
          "description": "Optional center key associated with this item. Used for orders and quotes to specify where to ship an item from. If not specified, Flow will infer based on inventory setup.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "discount",
          "annotations": [],
          "description": "The total discount, if any, to apply to this line item. Note that the discount is the total discount to apply regardless of the quantity here",
          "attributes": [],
          "type": "money",
          "required": false
        },
        {
          "name": "discounts",
          "annotations": [],
          "description": "The discounts, if any, to apply to this line item. Note that the discount is the total discount to apply regardless of the quantity here",
          "attributes": [],
          "type": "discounts_form",
          "required": false
        }
      ]
    },
    {
      "plural": "links",
      "name": "link",
      "attributes": [],
      "fields": [
        {
          "name": "url",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "locals",
      "name": "local",
      "attributes": [],
      "fields": [
        {
          "name": "experience",
          "annotations": [],
          "attributes": [],
          "type": "experience_summary",
          "required": true
        },
        {
          "name": "prices",
          "annotations": [],
          "attributes": [],
          "type": "[localized_price]",
          "required": true
        },
        {
          "name": "rates",
          "annotations": [],
          "attributes": [],
          "type": "[rate]",
          "required": true
        },
        {
          "name": "spot_rates",
          "annotations": [],
          "attributes": [],
          "type": "[object]",
          "deprecation": {
            "description": "This field is deprecated - you will see an empty array in the response"
          },
          "required": true
        },
        {
          "default": "included",
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "subcatalog_item_status",
          "required": true
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "This field contains the localized attributes. For instance a base attribute of intent price will be converted in the target currency.",
          "attributes": [],
          "type": "map[string]",
          "required": false
        },
        {
          "name": "price_attributes",
          "annotations": [],
          "description": "This field contains the localized prices attributes.",
          "attributes": [],
          "type": "map[price_with_base]",
          "required": false
        }
      ]
    },
    {
      "plural": "local_items",
      "name": "local_item",
      "description": "The Local Item represents all of the data for a given item that is localized to a given experience.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "experience",
          "annotations": [],
          "attributes": [],
          "type": "experience_summary",
          "required": true
        },
        {
          "name": "center",
          "annotations": [],
          "attributes": [],
          "type": "center_summary",
          "required": false
        },
        {
          "name": "item",
          "annotations": [],
          "attributes": [],
          "type": "catalog_item_reference",
          "required": true
        },
        {
          "name": "pricing",
          "annotations": [],
          "attributes": [],
          "type": "local_item_pricing",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "subcatalog_item_status",
          "required": true
        }
      ]
    },
    {
      "plural": "local_item_deleteds",
      "name": "local_item_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "local_item",
          "annotations": [],
          "attributes": [],
          "type": "local_item",
          "required": true
        }
      ]
    },
    {
      "plural": "local_item_pricings",
      "name": "local_item_pricing",
      "description": "Localized item pricing information",
      "attributes": [],
      "fields": [
        {
          "name": "price",
          "annotations": [],
          "description": "The localized item.price for this experience. This represents the price a consumer will pay to purchase this item in this experience.",
          "attributes": [],
          "type": "localized_item_price",
          "required": true
        },
        {
          "name": "vat",
          "annotations": [],
          "description": "The localized VAT price for this experience.",
          "attributes": [],
          "type": "localized_item_vat",
          "required": false
        },
        {
          "name": "duty",
          "annotations": [],
          "description": "The localized duty price for this experience.",
          "attributes": [],
          "type": "localized_item_duty",
          "required": false
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "All attributes with intent price as keys of this map - with each of those attributes mapped to its value in the local currency. For example, given an attribute named 'msrp' with intent 'price', this map will contain a key named 'msrp'",
          "attributes": [],
          "type": "map[price_with_base]",
          "required": true
        }
      ]
    },
    {
      "plural": "local_item_upserteds",
      "name": "local_item_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "local_item",
          "annotations": [],
          "attributes": [],
          "type": "local_item",
          "required": true
        }
      ]
    },
    {
      "plural": "local_price_detailses",
      "name": "local_price_details",
      "attributes": [],
      "fields": [
        {
          "name": "base",
          "annotations": [],
          "description": "Contains the localized price details, but converted to the base currency of the organization.",
          "attributes": [],
          "type": "price_details",
          "required": true
        },
        {
          "name": "local",
          "annotations": [],
          "description": "Contains the localized price details in the currency of the experience.",
          "attributes": [],
          "type": "price_details",
          "required": true
        },
        {
          "name": "discount",
          "annotations": [],
          "description": "Contains the amount subtracted post-VAT/Duty/Rounding due to a percent discount.",
          "attributes": [],
          "type": "price_detail",
          "required": false
        },
        {
          "name": "local_before_discount",
          "annotations": [],
          "description": "Contains the amount subtracted post-VAT/Duty/Rounding due to a percent discount.",
          "attributes": [],
          "type": "price_detail",
          "required": false
        }
      ]
    },
    {
      "plural": "local_sessions",
      "name": "local_session",
      "description": "If we found an experience for the given session, the localized information will be presented here",
      "attributes": [],
      "fields": [
        {
          "name": "country",
          "annotations": [],
          "attributes": [],
          "type": "country",
          "required": true
        },
        {
          "name": "currency",
          "annotations": [],
          "attributes": [],
          "type": "currency",
          "required": true
        },
        {
          "name": "language",
          "annotations": [],
          "attributes": [],
          "type": "language",
          "required": true
        },
        {
          "name": "locale",
          "annotations": [],
          "attributes": [],
          "type": "locale",
          "required": true
        },
        {
          "name": "experience",
          "annotations": [],
          "attributes": [],
          "type": "experience_geo",
          "required": true
        },
        {
          "name": "experiment",
          "annotations": [],
          "attributes": [],
          "type": "session_experiment",
          "required": false
        }
      ],
      "deprecation": {
        "description": "Going forward, use session.geo and session.experience directly"
      }
    },
    {
      "plural": "locales",
      "name": "locale",
      "description": "Locales defines standard conventions for presentation of content. See https://api.flow.io/reference/locales",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "en-GB or fr-BE or fr-CA"
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "English - United Kingdom"
        },
        {
          "name": "country",
          "annotations": [],
          "description": "ISO 3166 3 country code",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAN"
        },
        {
          "name": "language",
          "annotations": [],
          "description": "ISO 639 2 language code",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "fr"
        },
        {
          "name": "numbers",
          "annotations": [],
          "attributes": [],
          "type": "locale_numbers",
          "required": true
        }
      ]
    },
    {
      "plural": "locale_numberses",
      "name": "locale_numbers",
      "description": "Number formats defined for a given locale",
      "attributes": [],
      "fields": [
        {
          "name": "decimal",
          "annotations": [],
          "description": "Decimal separator",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "."
        },
        {
          "name": "group",
          "annotations": [],
          "description": "Group separator (e.g. 1,000 have a group separator of ',')",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": ","
        }
      ]
    },
    {
      "plural": "localized_adjustments",
      "name": "localized_adjustment",
      "attributes": [],
      "fields": [
        {
          "name": "currency",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "USD"
        },
        {
          "name": "amount",
          "annotations": [],
          "attributes": [],
          "type": "double",
          "required": true
        },
        {
          "name": "label",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "base",
          "annotations": [],
          "attributes": [],
          "type": "price",
          "required": true
        },
        {
          "name": "reason",
          "annotations": [],
          "attributes": [],
          "type": "adjustment_reason",
          "required": true
        }
      ]
    },
    {
      "plural": "localized_item_duties",
      "name": "localized_item_duty",
      "attributes": [],
      "fields": [
        {
          "name": "currency",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "USD"
        },
        {
          "name": "amount",
          "annotations": [],
          "attributes": [],
          "type": "double",
          "required": true
        },
        {
          "name": "label",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "base",
          "annotations": [],
          "attributes": [],
          "type": "price",
          "required": true
        },
        {
          "name": "adjustment",
          "annotations": [],
          "description": "An adjustment may need to be applied to VAT at the order level if the de minimis value is met; if so, its value is stored here.",
          "attributes": [],
          "type": "localized_adjustment",
          "required": false
        },
        {
          "name": "basis",
          "annotations": [],
          "description": "The taxable/dutiable basis from which this levy component was produced. Should be equal to total / rate.",
          "attributes": [],
          "type": "money_with_base",
          "required": false
        }
      ]
    },
    {
      "plural": "localized_item_prices",
      "name": "localized_item_price",
      "attributes": [],
      "fields": [
        {
          "name": "currency",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "USD"
        },
        {
          "name": "amount",
          "annotations": [],
          "attributes": [],
          "type": "double",
          "required": true
        },
        {
          "name": "label",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "base",
          "annotations": [],
          "attributes": [],
          "type": "price",
          "required": true
        },
        {
          "name": "includes",
          "annotations": [],
          "description": "Describes which levies are included in the price, if any.",
          "attributes": [],
          "type": "included_levies",
          "required": false
        }
      ]
    },
    {
      "plural": "localized_item_prices_export_types",
      "name": "localized_item_prices_export_type",
      "description": "Exports localized item prices data",
      "attributes": [],
      "fields": [
        {
          "name": "since",
          "annotations": [],
          "description": "Full export when empty; delta export since this timestamp until now if provided",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        }
      ]
    },
    {
      "plural": "localized_item_vats",
      "name": "localized_item_vat",
      "attributes": [],
      "fields": [
        {
          "name": "currency",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "USD"
        },
        {
          "name": "amount",
          "annotations": [],
          "attributes": [],
          "type": "double",
          "required": true
        },
        {
          "name": "label",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "base",
          "annotations": [],
          "attributes": [],
          "type": "price",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "description": "The specific name of the tax in the local region.",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "VAT, GST, HST, etc."
        },
        {
          "name": "adjustment",
          "annotations": [],
          "description": "An adjustment may need to be applied to VAT at the order level if the de minimis value is met; if so, its value is stored here.",
          "attributes": [],
          "type": "localized_adjustment",
          "required": false
        },
        {
          "default": "calculated",
          "name": "accuracy",
          "annotations": [],
          "description": "Used to flag prices that are estimated and why. Missing values will be considered calculated. An order may only be submitted if all price components are calculated.",
          "attributes": [],
          "type": "price_accuracy",
          "required": false
        },
        {
          "name": "basis",
          "annotations": [],
          "description": "The taxable/dutiable basis from which this levy component was produced. Should be equal to total / rate.",
          "attributes": [],
          "type": "money_with_base",
          "required": false
        }
      ]
    },
    {
      "plural": "localized_line_items",
      "name": "localized_line_item",
      "description": "Line items on the order, with localized pricing information",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "description": "The item name associated to the number (e.g. Long Sleeve Dress).",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "quantity",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "minimum": 1,
          "required": true
        },
        {
          "name": "center",
          "annotations": [],
          "description": "Optional center key associated with this item. Used for orders and quotes to specify where to ship an item from. If not specified, Flow will infer based on inventory setup.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "price",
          "annotations": [],
          "description": "The price of this item for this order. If not specified, we will use the item price from the experience",
          "attributes": [],
          "type": "money",
          "required": false
        },
        {
          "name": "discount",
          "annotations": [],
          "description": "The total discount, if any, to apply to this line item. Note that the discount is the total discount to apply regardless of the quantity.",
          "attributes": [],
          "type": "localized_line_item_discount",
          "required": false
        },
        {
          "name": "discounts",
          "annotations": [],
          "description": "Discounts, if any, to apply to this line item. Note that the discounts apply to the total, regardless of the quantity.",
          "attributes": [],
          "type": "[localized_line_item_discount]",
          "required": false
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "A set of key/value pairs that you can attach to the order. It can be useful for storing additional information about the charge in a structured format.",
          "attributes": [],
          "type": "map[string]",
          "required": false
        },
        {
          "name": "local",
          "annotations": [],
          "attributes": [],
          "type": "local",
          "required": true
        },
        {
          "name": "shipment_estimate",
          "annotations": [],
          "description": "For items that may not immediately ship out from the origin because of different models of inventory (e.g. drop-ship, sell-first), this is a way for a client to communicate when the items can ship out. This will be used to calculate delivery option windows.",
          "attributes": [],
          "type": "datetime_range",
          "required": false
        },
        {
          "name": "price_source",
          "annotations": [],
          "description": "Indicates the source of the item price.",
          "attributes": [],
          "type": "price_source",
          "required": false
        }
      ]
    },
    {
      "plural": "localized_line_item_discounts",
      "name": "localized_line_item_discount",
      "description": "Represents the requested, base, and localized amounts for a discount on a given line item. It applies to the entire line regardless of quantity.",
      "attributes": [],
      "fields": [
        {
          "name": "amount",
          "annotations": [],
          "description": "The amount of the discount after being converted to the local currency.",
          "attributes": [],
          "type": "double",
          "required": true
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        },
        {
          "name": "label",
          "annotations": [],
          "description": "The formatted label of the localized discount.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "base",
          "annotations": [],
          "description": "The discount converted to the base currency in which your organization operates.",
          "attributes": [],
          "type": "price",
          "required": false
        },
        {
          "name": "requested",
          "annotations": [],
          "description": "The requested discount amount.",
          "attributes": [],
          "type": "money",
          "required": false
        },
        {
          "name": "discount_label",
          "annotations": [],
          "description": "The discount pretty label (e.g. SPRING10) that is displayed to the customer.",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "localized_totals",
      "name": "localized_total",
      "attributes": [],
      "fields": [
        {
          "name": "currency",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "USD"
        },
        {
          "name": "amount",
          "annotations": [],
          "attributes": [],
          "type": "double",
          "required": true
        },
        {
          "name": "label",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "base",
          "annotations": [],
          "attributes": [],
          "type": "price",
          "required": true
        }
      ]
    },
    {
      "plural": "localized_translations",
      "name": "localized_translation",
      "description": "Localized translation of a given province/region/country",
      "attributes": [],
      "fields": [
        {
          "name": "locale",
          "annotations": [],
          "attributes": [],
          "type": "locale",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "description": "Text translated to the appropriate locale",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "广东"
        }
      ]
    },
    {
      "plural": "location_errors",
      "name": "location_error",
      "attributes": [],
      "fields": [
        {
          "name": "code",
          "annotations": [],
          "attributes": [],
          "type": "location_error_code",
          "required": true
        },
        {
          "name": "messages",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "minimum": 1,
          "required": true
        }
      ]
    },
    {
      "plural": "logistics_settingses",
      "name": "logistics_settings",
      "attributes": [],
      "fields": [
        {
          "name": "shipping_configuration",
          "annotations": [],
          "attributes": [],
          "type": "shipping_configuration_reference",
          "required": true
        }
      ]
    },
    {
      "plural": "manifests",
      "name": "manifest",
      "description": "Represents closeout of a group of labels that have been transferred to the carrier for shipping",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "shipping_labels",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Labels that are part of this manifest",
          "attributes": [],
          "type": "[shipping_label_summary]",
          "required": true
        },
        {
          "name": "pdf",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "URL where to download generated manifest confirmation or bill of lading, if the service requires one be generated for pickup.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "service",
          "annotations": [],
          "description": "Carrier service level used for generation and shipment of this label",
          "attributes": [],
          "type": "service_summary",
          "required": false,
          "example": "ups-ground, dhl-express-worldwide"
        }
      ]
    },
    {
      "plural": "manifest_forms",
      "name": "manifest_form",
      "attributes": [],
      "fields": [
        {
          "name": "tracking_numbers",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "required": true
        },
        {
          "name": "service",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "dhl-express-worldwide"
        }
      ]
    },
    {
      "plural": "manifested_label_deleteds",
      "name": "manifested_label_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "manifested_label_upserteds",
      "name": "manifested_label_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "manifest_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "label_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "flow_tracking_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "carrier_tracking_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "order_identifier",
          "annotations": [],
          "description": "The order identifier this label is associated with. Will be blank if not specified when a label was created.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "fulfillment_key",
          "annotations": [],
          "description": "The key of a fulfillment this label is associated with. Will be blank if not specified when a label was created.",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "margins",
      "name": "margin",
      "attributes": [],
      "fields": [
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "margin_type",
          "required": true
        },
        {
          "name": "value",
          "annotations": [],
          "attributes": [],
          "type": "decimal",
          "required": true
        }
      ]
    },
    {
      "plural": "measurements",
      "name": "measurement",
      "attributes": [],
      "fields": [
        {
          "name": "value",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "12.23"
        },
        {
          "name": "units",
          "annotations": [],
          "attributes": [],
          "type": "unit_of_measurement",
          "required": true,
          "example": "inch"
        }
      ]
    },
    {
      "plural": "memberships",
      "name": "membership",
      "description": "Represents the users that are part of this organization. Primary purpose is to manage which users have access to the organization's data and to provide a simple user interface to assign roles and permissions to each member of the organization",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "expandable_organization",
          "required": true
        },
        {
          "name": "user",
          "annotations": [],
          "attributes": [],
          "type": "expandable_user",
          "required": true
        },
        {
          "name": "role",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "role",
          "deprecation": {
            "description": "Static roles are being deprecated for role-based permissions."
          },
          "required": false
        },
        {
          "name": "roles",
          "annotations": [
            "personal_data"
          ],
          "description": "The desired role(s) this user will play for the organization",
          "attributes": [],
          "type": "[flow_role]",
          "required": true
        }
      ]
    },
    {
      "plural": "membership_deleted_v2s",
      "name": "membership_deleted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "membership",
          "annotations": [],
          "attributes": [],
          "type": "membership",
          "required": true
        }
      ]
    },
    {
      "plural": "membership_forms",
      "name": "membership_form",
      "description": "Top level resource to create a membership.",
      "attributes": [],
      "fields": [
        {
          "name": "organization",
          "annotations": [],
          "description": "The id of the organization",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "user",
          "annotations": [],
          "description": "The id of the user to add to this organization",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "default": "member",
          "name": "role",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "role",
          "deprecation": {
            "description": "Static roles are being deprecated for role-based permissions."
          },
          "required": false
        },
        {
          "default": "[]",
          "name": "roles",
          "annotations": [
            "personal_data"
          ],
          "description": "The desired role(s) this user will play for the organization",
          "attributes": [],
          "type": "[flow_role]",
          "required": false
        }
      ]
    },
    {
      "plural": "membership_put_forms",
      "name": "membership_put_form",
      "description": "Top level resource to update a membership.",
      "attributes": [],
      "fields": [
        {
          "default": "member",
          "name": "role",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "role",
          "deprecation": {
            "description": "Static roles are being deprecated for role-based permissions."
          },
          "required": false
        },
        {
          "default": "[]",
          "name": "roles",
          "annotations": [
            "personal_data"
          ],
          "description": "The desired role(s) this user will play for the organization",
          "attributes": [],
          "type": "[flow_role]",
          "required": false
        }
      ]
    },
    {
      "plural": "membership_upserted_v2s",
      "name": "membership_upserted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "membership",
          "annotations": [],
          "attributes": [],
          "type": "membership",
          "required": true
        }
      ]
    },
    {
      "plural": "membership_versions",
      "name": "membership_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "membership",
          "annotations": [],
          "attributes": [],
          "type": "membership",
          "required": true
        }
      ]
    },
    {
      "plural": "merchant_gift_card_balances",
      "name": "merchant_gift_card_balance",
      "attributes": [],
      "fields": [
        {
          "name": "amount",
          "annotations": [],
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The base iso_4217_3 currency code as defined in http://reference.api.flow.io/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "USD"
        }
      ]
    },
    {
      "plural": "merchant_gift_card_balance_forms",
      "name": "merchant_gift_card_balance_form",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "The number of the gift card.",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "merchant_gift_card_errors",
      "name": "merchant_gift_card_error",
      "attributes": [],
      "fields": [
        {
          "name": "code",
          "annotations": [],
          "attributes": [],
          "type": "merchant_gift_card_error_code",
          "required": true
        },
        {
          "name": "messages",
          "annotations": [],
          "description": "If provided, the messages will be returned to the customer. Otherwise, Flow will return a message based on the type.",
          "attributes": [],
          "type": "[string]",
          "minimum": 1,
          "required": false
        }
      ]
    },
    {
      "plural": "merchant_gift_card_redemptions",
      "name": "merchant_gift_card_redemption",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "merchant_gift_card_redemption_forms",
      "name": "merchant_gift_card_redemption_form",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "The number of the gift card to redeem.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "Gift card amount to redeem. Always positive.",
          "attributes": [],
          "type": "decimal",
          "minimum": 0,
          "required": true
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The base iso_4217_3 currency code as defined in http://reference.api.flow.io/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "USD"
        }
      ]
    },
    {
      "plural": "merchant_gift_card_reversals",
      "name": "merchant_gift_card_reversal",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "merchant_gift_card_reversal_forms",
      "name": "merchant_gift_card_reversal_form",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "The number of the gift card to reverse.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "Gift card amount to reimburse. Always positive.",
          "attributes": [],
          "type": "decimal",
          "minimum": 0,
          "required": true
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The base iso_4217_3 currency code as defined in http://reference.api.flow.io/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "USD"
        }
      ]
    },
    {
      "plural": "merchant_of_record_authorization_forms",
      "name": "merchant_of_record_authorization_form",
      "description": "Creates an authorization for a transaction for which Flow is the merchant of record. In this case, you must provide your order number for a valid Flow order. An authorization is used to check and reserve funds w/ a given payment method. No funds are actually transferred; once you have you an authorization, you can capture up to the amount of the authorization",
      "attributes": [],
      "fields": [
        {
          "name": "token",
          "annotations": [
            "personal_data"
          ],
          "description": "The token of the payment method to use when authorizing this transaction",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "order_number",
          "annotations": [],
          "description": "Client order number for which to authorize payment. We will automatically verify that this order exists and will authorize the total amount of the order in the currency of the order.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "The amount to authorize - if specified, will be used to confirm that the amount exactly matches the order total",
          "attributes": [],
          "type": "decimal",
          "required": false,
          "example": "120.38"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "Required if amount is specified. The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "CAD"
        },
        {
          "name": "key",
          "annotations": [],
          "description": "Your unique identifier for this transaction, which if provided is used to implement idempotency. If not provided, we will assign.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "cvv",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The card verification number. Note this number is never stored and thus is presented on each auth. Presenting the CVV may increase acceptance rates",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "A set of key/value pairs that you can attach to an authorization object",
          "attributes": [],
          "type": "map[string]",
          "required": false
        },
        {
          "name": "ip",
          "annotations": [
            "personal_data"
          ],
          "description": "The IP address of the consumer",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "96.242.151.245"
        },
        {
          "name": "options",
          "annotations": [],
          "description": "Optional behaviors to enable for this authorization",
          "attributes": [],
          "type": "[authorization_option]",
          "required": false
        },
        {
          "name": "redirect_urls",
          "annotations": [],
          "description": "When using 3D Secure, this field specifies the success and optional failure URLs to which the user will be redirected after completing (or failing to complete) payment.",
          "attributes": [],
          "type": "post_payment_redirect_urls",
          "required": false
        },
        {
          "name": "browser_info",
          "annotations": [],
          "description": "Shopper browser info. If you are using 3DS2, this field is required.",
          "attributes": [],
          "type": "browser_info",
          "required": false
        }
      ]
    },
    {
      "plural": "merchant_of_record_entities",
      "name": "merchant_of_record_entity",
      "description": "The merchant of record entity provides the legal name and address of the specific Flow entity serving as merchant of record.",
      "attributes": [],
      "fields": [
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "organization_reference",
          "required": true,
          "example": "flow"
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "Flow Commerce Limited"
        },
        {
          "name": "vat",
          "annotations": [],
          "attributes": [],
          "type": "merchant_of_record_entity_registration",
          "required": true
        },
        {
          "name": "streets",
          "annotations": [],
          "description": "Street Address Lines",
          "attributes": [],
          "type": "[string]",
          "required": true
        },
        {
          "name": "city",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "province",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "postal",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "country",
          "annotations": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "IRL"
        },
        {
          "name": "phone",
          "annotations": [],
          "description": "Primary customer service phone number for this entity",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "email",
          "annotations": [],
          "description": "Primary customer service email address for this entity",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "merchant_of_record_entity_registrations",
      "name": "merchant_of_record_entity_registration",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "In Europe, this is the VAT registration number for the entity. In the US, this is the EIN.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "country",
          "annotations": [],
          "description": "The country in which this registration number is defined. The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAN"
        }
      ]
    },
    {
      "plural": "merchant_of_record_payment_forms",
      "name": "merchant_of_record_payment_form",
      "description": "Creates an online payment",
      "attributes": [],
      "fields": [
        {
          "name": "method",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "paypal"
        },
        {
          "name": "order_number",
          "annotations": [],
          "description": "Client order number for which to authorize payment. We will automatically verify that this order exists and will authorize the total amount of the order in the currency of the order.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "The amount to authorize - will be used to confirm that the amount exactly matches the order total",
          "attributes": [],
          "type": "decimal",
          "required": true,
          "example": "120.38"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        }
      ]
    },
    {
      "plural": "moneys",
      "name": "money",
      "description": "Money represents an amount in a given currency",
      "attributes": [],
      "fields": [
        {
          "name": "amount",
          "annotations": [],
          "attributes": [],
          "type": "double",
          "required": true,
          "example": "100"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        }
      ]
    },
    {
      "plural": "money_with_bases",
      "name": "money_with_base",
      "attributes": [],
      "fields": [
        {
          "name": "currency",
          "annotations": [],
          "description": "Iso 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        },
        {
          "name": "amount",
          "annotations": [],
          "attributes": [],
          "type": "double",
          "required": true,
          "example": "100"
        },
        {
          "name": "base",
          "annotations": [],
          "attributes": [],
          "type": "money",
          "required": true
        }
      ]
    },
    {
      "plural": "money_with_optional_bases",
      "name": "money_with_optional_base",
      "description": "Used to migrate older models to have a base value, without breaking compatibility",
      "attributes": [],
      "fields": [
        {
          "name": "currency",
          "annotations": [],
          "description": "Iso 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        },
        {
          "name": "amount",
          "annotations": [],
          "attributes": [],
          "type": "double",
          "required": true,
          "example": "100"
        },
        {
          "name": "base",
          "annotations": [],
          "attributes": [],
          "type": "money",
          "required": false
        }
      ]
    },
    {
      "plural": "names",
      "name": "name",
      "attributes": [],
      "fields": [
        {
          "name": "first",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "last",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "name_forms",
      "name": "name_form",
      "attributes": [],
      "fields": [
        {
          "name": "first",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "last",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "no_inventory_reservation_errors",
      "name": "no_inventory_reservation_error",
      "attributes": [],
      "fields": [
        {
          "name": "messages",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "items",
          "annotations": [],
          "attributes": [],
          "type": "[no_inventory_reservation_error_item]",
          "required": true
        }
      ]
    },
    {
      "plural": "no_inventory_reservation_error_items",
      "name": "no_inventory_reservation_error_item",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "requested_quantity",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "available_quantity",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        }
      ]
    },
    {
      "plural": "notification_deleteds",
      "name": "notification_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "notification_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "carrier_tracking_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "flow_tracking_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "destination",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "shipping_address",
          "required": true
        },
        {
          "name": "origin",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "shipping_address",
          "required": true
        },
        {
          "name": "carrier",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "service",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "order",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "package",
          "annotations": [],
          "attributes": [],
          "type": "shipping_label_package",
          "required": true
        }
      ]
    },
    {
      "plural": "notification_upserteds",
      "name": "notification_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "notification_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "carrier_tracking_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "flow_tracking_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "destination",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "shipping_address",
          "required": true
        },
        {
          "name": "origin",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "shipping_address",
          "required": true
        },
        {
          "name": "carrier",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "service",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "order",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "order_identifier",
          "annotations": [],
          "description": "The order identifier this notification is associated with. Will be blank if not specified when a notification is submitted.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "fulfillment_key",
          "annotations": [],
          "description": "The key of a fulfillment this notification is associated with. Will be blank if not specified when a notification is submitted.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "package",
          "annotations": [],
          "attributes": [],
          "type": "shipping_label_package",
          "required": true
        }
      ]
    },
    {
      "plural": "number_ranges",
      "name": "number_range",
      "attributes": [],
      "fields": [
        {
          "name": "min",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "max",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        }
      ]
    },
    {
      "plural": "online_authorizations",
      "name": "online_authorization",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "method",
          "annotations": [],
          "attributes": [],
          "type": "payment_method",
          "required": false
        },
        {
          "default": "flow",
          "name": "merchant_of_record",
          "annotations": [],
          "attributes": [],
          "type": "merchant_of_record",
          "required": false
        },
        {
          "name": "details",
          "annotations": [],
          "description": "The associated online authorization details, if any.",
          "attributes": [],
          "type": "online_authorization_details",
          "required": false
        },
        {
          "name": "payment",
          "annotations": [],
          "description": "The associated online payment",
          "attributes": [],
          "type": "object",
          "deprecation": {
            "description": "Remove after `method` and `details` fields are added to the authorization model."
          },
          "required": false
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "The amount to authorize",
          "attributes": [],
          "type": "decimal",
          "required": true,
          "example": "120.38"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        },
        {
          "name": "requested",
          "annotations": [],
          "description": "The amount/currency of the order when created.",
          "attributes": [],
          "type": "money",
          "required": false
        },
        {
          "name": "customer",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The customer who is actually receiving the goods. Providing name and email at a minimum will significantly increase the acceptance rate and are recommended.",
          "attributes": [],
          "type": "order_customer",
          "required": true
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "A set of key/value pairs that you can attach to an authorization object",
          "attributes": [],
          "type": "map[string]",
          "required": true
        },
        {
          "name": "destination",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Destination address, if relevant",
          "attributes": [],
          "type": "address",
          "required": false
        },
        {
          "name": "billing_address",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Billing address, if relevant",
          "attributes": [],
          "type": "billing_address",
          "required": false
        },
        {
          "name": "order",
          "annotations": [],
          "description": "If this authorization was made for a specific order number, that order will be referenced here",
          "attributes": [],
          "type": "authorization_order_reference",
          "required": false
        },
        {
          "name": "ip",
          "annotations": [
            "personal_data"
          ],
          "description": "The IP address of the consumer",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "96.242.151.245"
        },
        {
          "name": "result",
          "annotations": [],
          "attributes": [],
          "type": "authorization_result",
          "required": true
        },
        {
          "name": "created_at",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "expires_at",
          "annotations": [],
          "description": "The time at which this authorization expires, if any.",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "base",
          "annotations": [],
          "description": "The amount/currency of the authorization in base currency. Added in Summer 2018 and always present since then.",
          "attributes": [],
          "type": "money",
          "required": false
        }
      ]
    },
    {
      "plural": "online_authorization_deleted_v2s",
      "name": "online_authorization_deleted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "authorization",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "online_authorization",
          "required": true
        }
      ]
    },
    {
      "plural": "online_authorization_upserted_v2s",
      "name": "online_authorization_upserted_v2",
      "description": "Represents an authorization for a card payment method",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "authorization",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "online_authorization",
          "required": true
        }
      ]
    },
    {
      "plural": "optin_responses",
      "name": "optin_response",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "value",
          "annotations": [],
          "attributes": [],
          "type": "optin_response_type",
          "required": true
        }
      ]
    },
    {
      "plural": "option_weight_estimates",
      "name": "option_weight_estimates",
      "attributes": [],
      "fields": [
        {
          "name": "gravitational",
          "annotations": [],
          "attributes": [],
          "type": "measurement",
          "required": true
        },
        {
          "name": "dimensional",
          "annotations": [],
          "attributes": [],
          "type": "measurement",
          "required": true
        }
      ]
    },
    {
      "plural": "optionses",
      "name": "options",
      "description": "Flags to indicate whether a feature is enabled/disabled on a particular model (e.g. show/do not show attribute as a column in harmonization table view of items)",
      "attributes": [],
      "fields": [
        {
          "default": "false",
          "name": "required",
          "annotations": [],
          "description": "If true, when you create or update items in Flow, we will validate that data presented contains an attribute with this key.",
          "attributes": [],
          "type": "boolean",
          "required": true,
          "example": "brand"
        },
        {
          "default": "false",
          "name": "show_in_catalog",
          "annotations": [],
          "description": "Flag indicating that a feature is applicable to catalog and can be used in Console",
          "attributes": [],
          "type": "boolean",
          "required": true
        },
        {
          "default": "false",
          "name": "show_in_harmonization",
          "annotations": [],
          "description": "Flag indicating that a feature is applicable to harmoniztion and can be used in Console",
          "attributes": [],
          "type": "boolean",
          "required": true
        }
      ]
    },
    {
      "plural": "orders",
      "name": "order",
      "description": "An order represents all of the information about a particular set of line items, including pricing, currency rates, delivery options, etc. All information in an order is guaranteed by Flow - if an order is submitted before its expiration. The intended use case is to create an order as a consumer enters checkout, then to submit that order as part of the user submitting their order. Note that Flow will automatically mark an order submitted if we see payment authorization(s) covering the full balance of an order.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "merchant_of_record",
          "annotations": [],
          "description": "Once an order is fully paid, we record who the merchant of record for this order is.",
          "attributes": [],
          "type": "order_merchant_of_record",
          "required": false
        },
        {
          "name": "experience",
          "annotations": [],
          "description": "Contains information on the experience on which this order was submitted.",
          "attributes": [],
          "type": "expandable_experience",
          "required": false
        },
        {
          "name": "customer",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The customer who is actually making the purchase",
          "attributes": [],
          "type": "order_customer",
          "required": true
        },
        {
          "name": "delivered_duty",
          "annotations": [],
          "description": "Options returned will only use tiers with the matching delivered duty. This would also affect whether duties are included in the total or not. If not specified, defaults based on the experience default setting.",
          "attributes": [],
          "type": "delivered_duty",
          "required": true
        },
        {
          "name": "destination",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "order_address",
          "required": true
        },
        {
          "name": "expires_at",
          "annotations": [],
          "description": "The date and time on which this order will expire unless submitted. Used only when the order status is 'open'. New orders will expire 1 hour after creation.",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "items",
          "annotations": [],
          "attributes": [],
          "type": "[localized_line_item]",
          "required": true
        },
        {
          "name": "deliveries",
          "annotations": [],
          "attributes": [],
          "type": "[delivery]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "selections",
          "annotations": [],
          "description": "The currently selected delivery option ids. These IDs represent the shipping tiers that the customer has chosen (e.g. standard or express) for each delivery. The shipping price is then based on these selections (and included in the prices array). You can update an order before it has been submitted to change the delivery options, getting back accurate pricing for the order.",
          "attributes": [],
          "type": "[string]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "prices",
          "annotations": [],
          "attributes": [],
          "type": "[order_price_detail]",
          "required": true
        },
        {
          "name": "total",
          "annotations": [],
          "attributes": [],
          "type": "localized_total",
          "required": true
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "A set of key/value pairs that you can attach to the order. It can be useful for storing additional information about the charge in a structured format.",
          "attributes": [],
          "type": "map[string]",
          "required": true
        },
        {
          "name": "submitted_at",
          "annotations": [],
          "description": "The timestamp on which the order is submitted. Once submitted, production orders can no longer be deleted as they represent transactions in the real world",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "lines",
          "annotations": [],
          "description": "Provides display data for each of the line items belonging to this order.",
          "attributes": [],
          "type": "[line]",
          "required": false
        },
        {
          "name": "identifiers",
          "annotations": [],
          "description": "Other identifiers which are used to identify this order, if available.",
          "attributes": [],
          "type": "[string]",
          "required": false
        },
        {
          "name": "promotions",
          "annotations": [],
          "description": "The current available and applied promotions for this order",
          "attributes": [],
          "type": "promotions",
          "required": false
        },
        {
          "name": "payments",
          "annotations": [],
          "description": "Represents the list of payments on an order. Each payment will be typed - supporting options like a $25 account credit applied to an order plus a balance paid by a card, paypal, cash on delivery, etc. The list of payments here is summary information only for display back to the user; each individual payment will have varying levels of detail based on the actual type of the payment",
          "attributes": [],
          "type": "[order_payment]",
          "required": false
        },
        {
          "name": "balance",
          "annotations": [],
          "description": "The remaining balance on this order. Will be marked required in a future version of the Flow API",
          "attributes": [],
          "type": "localized_total",
          "required": false
        },
        {
          "name": "rules",
          "annotations": [],
          "description": "Represents a summary of the rules related to this order.",
          "attributes": [],
          "type": "order_rules_summary",
          "required": false
        },
        {
          "name": "tax_registration",
          "annotations": [],
          "description": "Represents the tax registration on an order, if applicable.",
          "attributes": [],
          "type": "tax_registration",
          "required": false
        },
        {
          "name": "geo",
          "annotations": [],
          "description": "If present, provides the geo ip related information for this order",
          "attributes": [],
          "type": "order_geo",
          "required": false
        }
      ]
    },
    {
      "plural": "order_addresses",
      "name": "order_address",
      "attributes": [],
      "fields": [
        {
          "name": "text",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Full text version of address",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "streets",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Array for street line 1, street line 2, etc., in order",
          "attributes": [],
          "type": "[string]",
          "required": false
        },
        {
          "name": "city",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "province",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "postal",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "country",
          "annotations": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "CAN"
        },
        {
          "name": "latitude",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "longitude",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "contact",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Contact information of entity at the address",
          "attributes": [],
          "type": "contact",
          "required": false
        }
      ]
    },
    {
      "plural": "order_builders",
      "name": "order_builder",
      "description": "The Order Builder model is used to incrementally build up an order until it is complete and can be submitted.",
      "attributes": [],
      "fields": [
        {
          "name": "order",
          "annotations": [],
          "description": "The order in its current state. Will always be present unless there is a global error (e.g. no experience defined) that makes it impossible to create an order",
          "attributes": [],
          "type": "order",
          "required": false
        },
        {
          "name": "errors",
          "annotations": [],
          "description": "A list of order errors that must be resolved prior to submitted the order. If there are no errors in the model, than the order can be submitted.",
          "attributes": [],
          "type": "[order_error]",
          "minimum": 1,
          "required": false
        }
      ]
    },
    {
      "plural": "order_builder_attributes_forms",
      "name": "order_builder_attributes_form",
      "attributes": [],
      "fields": [
        {
          "name": "attributes",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "required": true
        }
      ]
    },
    {
      "plural": "order_builder_customer_invoice_address_forms",
      "name": "order_builder_customer_invoice_address_form",
      "attributes": [],
      "fields": [
        {
          "name": "address",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "billing_address",
          "required": true
        }
      ]
    },
    {
      "plural": "order_builder_delivered_duty_forms",
      "name": "order_builder_delivered_duty_form",
      "attributes": [],
      "fields": [
        {
          "name": "delivered_duty",
          "annotations": [],
          "attributes": [],
          "type": "delivered_duty",
          "required": true
        }
      ]
    },
    {
      "plural": "order_builder_destination_country_forms",
      "name": "order_builder_destination_country_form",
      "attributes": [],
      "fields": [
        {
          "name": "country",
          "annotations": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAN"
        }
      ]
    },
    {
      "plural": "order_builder_destination_forms",
      "name": "order_builder_destination_form",
      "attributes": [],
      "fields": [
        {
          "name": "destination",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "order_address",
          "required": true
        }
      ]
    },
    {
      "plural": "order_customers",
      "name": "order_customer",
      "description": "A customer represents the actual person purchasing from you. This information is needed primarily to support logistics (delivery to this person), fraud management (verification of who the person is), and reporting. We also recommend including your customer number whenever possible as doing so will allow Flow to link up transactions for this customer making customer service easier.",
      "attributes": [],
      "fields": [
        {
          "name": "name",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "name",
          "required": true
        },
        {
          "name": "number",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "phone",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Customer phone number. Useful for both fraud and order delivery.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "email",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Customer email address. Useful for fraud.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "address",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "billing_address",
          "required": false
        },
        {
          "name": "invoice",
          "annotations": [],
          "description": "Customer invoice details.",
          "attributes": [],
          "type": "customer_invoice",
          "required": false
        }
      ]
    },
    {
      "plural": "order_customer_forms",
      "name": "order_customer_form",
      "attributes": [],
      "fields": [
        {
          "name": "name",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "name",
          "required": false
        },
        {
          "name": "number",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "phone",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Customer phone number. Useful for both fraud and order delivery.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "email",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Customer email address. Useful for fraud.",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "user@flow.io"
        },
        {
          "name": "address",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "billing_address",
          "required": false
        },
        {
          "name": "invoice",
          "annotations": [],
          "description": "Customer invoice details.",
          "attributes": [],
          "type": "customer_invoice",
          "required": false
        }
      ]
    },
    {
      "plural": "order_deleteds",
      "name": "order_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "order_deleted_v2s",
      "name": "order_deleted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "order",
          "annotations": [],
          "attributes": [],
          "type": "order",
          "required": true
        }
      ]
    },
    {
      "plural": "order_destination_put_forms",
      "name": "order_destination_put_form",
      "description": "Purpose-built form specifically for only address-related changes to destination on an order",
      "attributes": [],
      "fields": [
        {
          "name": "destination",
          "annotations": [],
          "attributes": [],
          "type": "order_address",
          "required": true
        }
      ]
    },
    {
      "plural": "order_errors",
      "name": "order_error",
      "attributes": [],
      "fields": [
        {
          "name": "code",
          "annotations": [],
          "attributes": [],
          "type": "order_error_code",
          "required": true
        },
        {
          "name": "messages",
          "annotations": [],
          "description": "A summary of the errors",
          "attributes": [],
          "type": "[string]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "numbers",
          "annotations": [],
          "description": "A list of all of the item numbers that are not available",
          "attributes": [],
          "type": "[string]",
          "required": false
        },
        {
          "name": "destination_country",
          "annotations": [],
          "description": "Destination country of the order, if available.",
          "attributes": [],
          "type": "country",
          "required": false
        },
        {
          "name": "threshold",
          "annotations": [],
          "description": "When the order error is value_threshold_exceeded, we include the details on the threshold itself.",
          "attributes": [],
          "type": "value_threshold_exceeded_details",
          "required": false
        }
      ]
    },
    {
      "plural": "order_estimates",
      "name": "order_estimate",
      "description": "Lightweight estimate for a group of items without any customer-related information. This will contain available estimates on shipping, taxes, and duties.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "items",
          "annotations": [],
          "attributes": [],
          "type": "[localized_line_item]",
          "required": true
        },
        {
          "name": "destination",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "order_address",
          "required": true
        },
        {
          "name": "deliveries",
          "annotations": [],
          "attributes": [],
          "type": "[delivery]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "prices",
          "annotations": [],
          "attributes": [],
          "type": "[order_price_detail]",
          "required": true
        },
        {
          "name": "selections",
          "annotations": [],
          "description": "The currently selected delivery option ids. These IDs represent the shipping tiers that the customer has chosen (e.g. standard or express) for each delivery. The shipping price is then based on these selections (and included in the prices array). You can update an order before it has been submitted to change the delivery options, getting back accurate pricing for the order.",
          "attributes": [],
          "type": "[string]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "total",
          "annotations": [],
          "attributes": [],
          "type": "localized_total",
          "required": true
        },
        {
          "name": "lines",
          "annotations": [],
          "description": "Provides display data for each of the line items belonging to this order estimate.",
          "attributes": [],
          "type": "[line]",
          "required": false
        },
        {
          "name": "promotions",
          "annotations": [],
          "description": "The current available and applied promotions for this order",
          "attributes": [],
          "type": "promotions",
          "required": false
        }
      ],
      "deprecation": {
        "description": "Estimates are deprecated. Please use orders with optional destination"
      }
    },
    {
      "plural": "order_estimate_forms",
      "name": "order_estimate_form",
      "description": "Form to get a lightweight estimate of an order.",
      "attributes": [],
      "fields": [
        {
          "name": "items",
          "annotations": [],
          "attributes": [],
          "type": "[line_item_form]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "destination",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "order_address",
          "required": false
        },
        {
          "name": "selections",
          "annotations": [],
          "description": "Selected list of delivery options for this quote. The original order will contain one or more deliveries. Each delivery will contain one or more shipping options (e.g. standard or express). We need to know which shipping options the user selected in order to provide accurate, local shipping pricing. You should only specify if you are explicitly changing the delivery options",
          "attributes": [],
          "type": "[string]",
          "minimum": 1,
          "required": false
        }
      ],
      "deprecation": {
        "description": "Estimates are deprecated. Please use orders with optional destination"
      }
    },
    {
      "plural": "order_export_types",
      "name": "order_export_type",
      "description": "Exports orders",
      "attributes": [],
      "fields": [
        {
          "name": "numbers",
          "annotations": [],
          "description": "The specific list of order numbers to export",
          "attributes": [],
          "type": "[string]",
          "required": false
        },
        {
          "name": "min_hours_since_submitted_at",
          "annotations": [],
          "description": "The minimum number of hours since submission. For example, specifying 24 would select all orders submitted at least 24 hours ago.",
          "attributes": [],
          "type": "integer",
          "required": false,
          "example": "24"
        },
        {
          "name": "submitted_on_or_before",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "submitted_on_or_after",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "order_status",
          "required": false
        },
        {
          "name": "has_tracking_label",
          "annotations": [],
          "description": "If true, we filter to orders with a tracking label. If false, we filter orders that do not have any tracking label events.",
          "attributes": [],
          "type": "boolean",
          "required": false
        },
        {
          "name": "sort",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "number"
        }
      ]
    },
    {
      "plural": "order_forms",
      "name": "order_form",
      "description": "The order form is used to create an open order, providing the details on pricing and delivery options for destination and items/quantities specified",
      "attributes": [],
      "fields": [
        {
          "name": "customer",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The customer who actually is making the purchase. We recommend providing as much information as you have, notably email address which can be used to increase acceptance rates if Flow is processing payment for this order. If you can also provide your customer number - we can link multiple orders for each customer in the Flow console.",
          "attributes": [],
          "type": "order_customer_form",
          "required": false
        },
        {
          "name": "items",
          "annotations": [],
          "attributes": [],
          "type": "[line_item_form]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "delivered_duty",
          "annotations": [],
          "description": "Options returned will only use tiers with the matching delivered duty. This would also affect whether duties are included in the total or not. If not specified, defaults based on the experience default setting.",
          "attributes": [],
          "type": "delivered_duty",
          "required": false
        },
        {
          "name": "number",
          "annotations": [],
          "description": "If not provided, will default to the generated unique order identifier.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "destination",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "order_address",
          "required": false
        },
        {
          "name": "discount",
          "annotations": [],
          "description": "An optional discount to apply to the entire order",
          "attributes": [],
          "type": "money",
          "required": false
        },
        {
          "name": "discounts",
          "annotations": [],
          "description": "Optional discount(s) to apply to the entire order.",
          "attributes": [],
          "type": "discounts_form",
          "required": false
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "A set of key/value pairs that you can attach to the order. It can be useful for storing additional information about the charge in a structured format.",
          "attributes": [],
          "type": "map[string]",
          "required": false
        },
        {
          "name": "authorization_keys",
          "annotations": [],
          "description": "Sets the authorization keys to associate with this order. Each authorization, if valid, will then be added to the order.payments field.",
          "attributes": [],
          "type": "[string]",
          "required": false
        },
        {
          "name": "options",
          "annotations": [],
          "description": "Optional behaviors to enable for this order",
          "attributes": [],
          "type": "order_options",
          "required": false
        }
      ]
    },
    {
      "plural": "order_fraud_statuses",
      "name": "order_fraud_status",
      "description": "The fraud status for an order.",
      "attributes": [],
      "fields": [
        {
          "name": "order",
          "annotations": [],
          "description": "The order reference details.",
          "attributes": [],
          "type": "order_reference",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "description": "The current fraud status.",
          "attributes": [],
          "type": "fraud_status",
          "required": true
        }
      ]
    },
    {
      "plural": "order_geos",
      "name": "order_geo",
      "description": "The geolocated information for an order",
      "attributes": [],
      "fields": [
        {
          "name": "ip",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "country",
          "annotations": [],
          "description": "ISO 3166 3 currency code as defined in https://api.flow.io/reference/countries",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAN"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "CAD"
        },
        {
          "name": "language",
          "annotations": [],
          "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "en"
        }
      ]
    },
    {
      "plural": "order_identifiers",
      "name": "order_identifier",
      "description": "Represents alternate identifiers that can be used to lookup an order. Common use cases are to support attaching a primary identifier (e.g. a nice order number) post order submission or attaching IDs that are used by the warehouse to ship the orders.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "order",
          "annotations": [],
          "attributes": [],
          "type": "order_reference",
          "required": true
        },
        {
          "default": "external",
          "name": "name",
          "annotations": [],
          "description": "The name of the identifier is used to identify where this identifier was set. It is informational only",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "identifier",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "primary",
          "annotations": [],
          "description": "An order can optionally have a single additional primary identifier. Common pattern here is using a random UUID in checkout sessions, then later assigning a human readable order number.",
          "attributes": [],
          "type": "boolean",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "deprecation": {
            "description": "This field was renamed to 'identifier'"
          },
          "required": false
        }
      ]
    },
    {
      "plural": "order_identifier_deleteds",
      "name": "order_identifier_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "order_identifier_deleted_v2s",
      "name": "order_identifier_deleted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "order_identifier_forms",
      "name": "order_identifier_form",
      "attributes": [],
      "fields": [
        {
          "name": "order",
          "annotations": [],
          "description": "The order number for which you are assigning this identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "description": "The name of the identifier is used to identify where this identifier was set. It is informational only",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "identifier",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "deprecation": {
            "description": "This field is deprecated. Please use the 'identifier' field"
          },
          "required": false
        },
        {
          "name": "primary",
          "annotations": [],
          "description": "If you set this to true, creates the order identifier and marks it as primary. If there already exists a prior primary identifier, that identifier will be updated to no longer by the primary",
          "attributes": [],
          "type": "boolean",
          "required": false
        }
      ]
    },
    {
      "plural": "order_identifier_put_forms",
      "name": "order_identifier_put_form",
      "attributes": [],
      "fields": [
        {
          "name": "order",
          "annotations": [],
          "description": "The order number for which you are assigning this identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "description": "The name of the identifier is used to identify where this identifier was set. It is informational only",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "primary",
          "annotations": [],
          "description": "If you set this to true, creates the order identifier and marks it as primary. If there already exists a prior primary identifier, that identifier will be updated to no longer by the primary",
          "attributes": [],
          "type": "boolean",
          "required": false
        }
      ]
    },
    {
      "plural": "order_identifier_upserteds",
      "name": "order_identifier_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "order_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "order_identifier_upserted_v2s",
      "name": "order_identifier_upserted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "order_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "identifier",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "primary",
          "annotations": [],
          "attributes": [],
          "type": "boolean",
          "required": true
        }
      ]
    },
    {
      "plural": "order_identifier_upserted_v3s",
      "name": "order_identifier_upserted_v3",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "identifier",
          "annotations": [],
          "attributes": [],
          "type": "order_identifier",
          "required": true
        }
      ]
    },
    {
      "plural": "order_identifier_versions",
      "name": "order_identifier_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "order_identifier",
          "annotations": [],
          "attributes": [],
          "type": "order_identifier",
          "required": true
        }
      ]
    },
    {
      "plural": "order_number_generator_defaults",
      "name": "order_number_generator_defaults",
      "attributes": [],
      "fields": [
        {
          "default": "1001",
          "name": "starts_with",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "default": "6",
          "name": "min_hex_length",
          "annotations": [],
          "attributes": [],
          "type": "integer",
          "required": true
        },
        {
          "default": "1",
          "name": "min_starts_with",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        }
      ]
    },
    {
      "plural": "order_number_generator_fixed_lengths",
      "name": "order_number_generator_fixed_length",
      "attributes": [],
      "fields": [
        {
          "name": "length",
          "annotations": [],
          "attributes": [],
          "type": "integer",
          "required": true
        },
        {
          "name": "padding",
          "annotations": [],
          "maximum": 1,
          "attributes": [],
          "type": "string",
          "minimum": 1,
          "required": true
        }
      ]
    },
    {
      "plural": "order_number_generator_hexadecimals",
      "name": "order_number_generator_hexadecimal",
      "description": "Hexadecimal generator generates a random string, starting with a letter, of a given length",
      "attributes": [],
      "fields": [
        {
          "name": "length",
          "annotations": [],
          "attributes": [],
          "type": "integer",
          "minimum": 6,
          "required": true
        }
      ]
    },
    {
      "plural": "order_number_generator_prefix_suffixes",
      "name": "order_number_generator_prefix_suffix",
      "description": "Generator with an optional prefix, followed by an integer and an optional suffix",
      "attributes": [],
      "fields": [
        {
          "name": "prefix",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "starts_with",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": false
        },
        {
          "name": "suffix",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "fixed_length",
          "annotations": [],
          "description": "Optionally force a fixed length with padding. For example, an order number of F1234 with fixed length '6' and padding '0' would become 'F01234'",
          "attributes": [],
          "type": "order_number_generator_fixed_length",
          "required": false
        }
      ]
    },
    {
      "plural": "order_number_generator_uuids",
      "name": "order_number_generator_uuid",
      "description": "Generates an order number based on a UUID (no dashes or other formatting). This is the default for Flow orders (with order number prefixed by ord-)",
      "attributes": [],
      "fields": [
        {
          "default": "ord-",
          "name": "prefix",
          "annotations": [],
          "description": "Optional prefix to prepend to the UUID",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "order_number_references",
      "name": "order_number_reference",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "order_optionses",
      "name": "order_options",
      "description": "Optional behaviors to enable for this order",
      "attributes": [],
      "fields": [
        {
          "default": "persist",
          "name": "storage",
          "annotations": [],
          "attributes": [],
          "type": "order_storage",
          "required": true
        }
      ]
    },
    {
      "plural": "order_payments",
      "name": "order_payment",
      "description": "An Order Payment represents an individual payment applied to an order. The type of the payment can be used to further lookup transaction level detail",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "order_payment_type",
          "required": true
        },
        {
          "default": "flow",
          "name": "merchant_of_record",
          "annotations": [],
          "attributes": [],
          "type": "merchant_of_record",
          "required": false
        },
        {
          "name": "reference",
          "annotations": [],
          "description": "The reference identifier for the details behind this order payment. For example, if this payment was a card payment, the reference will be the unique authorization key.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "description",
          "annotations": [],
          "description": "Human understandable description of this payment method",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "VISA ending with 4111"
        },
        {
          "name": "total",
          "annotations": [],
          "attributes": [],
          "type": "price_with_base",
          "required": true
        },
        {
          "name": "address",
          "annotations": [],
          "description": "Billing address associated with this payment",
          "attributes": [],
          "type": "billing_address",
          "required": false
        },
        {
          "name": "date",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "default": "{}",
          "name": "attributes",
          "annotations": [],
          "description": "Integration-specific attributes of this payment.",
          "attributes": [],
          "type": "map[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "order_placeds",
      "name": "order_placed",
      "description": "Sent when an order is submitted, allocations are generated and the total value of the order is accounted for by discounts, subsidies, credits and authorized payments -- but may not ready to fulfill (e.g. pending assignment of a DC or fraud review). Intended to fuel customer feedback and alert merchants that an order is coming.",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "order_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "order",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The order as submitted",
          "attributes": [],
          "type": "order",
          "required": true
        },
        {
          "name": "allocation",
          "annotations": [],
          "description": "Order prices allocated among the items of this order.",
          "attributes": [],
          "type": "allocation_v2",
          "required": true
        }
      ],
      "deprecation": {
        "description": "Use 'order_placed_v2'"
      }
    },
    {
      "plural": "order_placed_detailses",
      "name": "order_placed_details",
      "description": "Order is submitted, allocations are generated and the total value of the order is accounted for by discounts, subsidies, credits and authorized payments -- but may not ready to fulfill (e.g. pending assignment of a DC or fraud review).",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "order",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The order as submitted",
          "attributes": [],
          "type": "order",
          "required": true
        },
        {
          "name": "allocation",
          "annotations": [],
          "description": "Order prices allocated among the items of this order.",
          "attributes": [],
          "type": "allocation_v2",
          "required": true
        }
      ]
    },
    {
      "plural": "order_placed_v2s",
      "name": "order_placed_v2",
      "description": "Sent when an order is submitted, allocations are generated and the total value of the order is accounted for by discounts, subsidies, credits and authorized payments -- but may not ready to fulfill (e.g. pending assignment of a DC or fraud review). Intended to fuel customer feedback and alert merchants that an order is coming.",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "order_placed",
          "annotations": [],
          "attributes": [],
          "type": "order_placed_details",
          "required": true
        }
      ]
    },
    {
      "plural": "order_price_details",
      "name": "order_price_detail",
      "description": "Represents a top-level order price detail, e.g. 'Subtotal' or 'VAT'.",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "description": "The key indicating what this price detail represents.",
          "attributes": [],
          "type": "order_price_detail_key",
          "required": true
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The ISO-4217 3 character currency code in which the amount is calculated.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "The total cost of the price detail in the currency of the experience in which the order is placed.",
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "label",
          "annotations": [],
          "description": "The formatted label for this price detail that should be displayed to the user.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "base",
          "annotations": [],
          "description": "The amount of this price detail in the base currency of the organization.",
          "attributes": [],
          "type": "price",
          "required": true
        },
        {
          "name": "components",
          "annotations": [],
          "description": "Contains the components of this price detail that are used to calculate the total.",
          "attributes": [],
          "type": "[order_price_detail_component]",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "description": "The display name for this order price detail.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "rate",
          "annotations": [],
          "description": "Optional rate for this order price detail if the key relates to a VAT or Duty.",
          "attributes": [],
          "type": "decimal",
          "required": false,
          "example": "0.2"
        },
        {
          "default": "calculated",
          "name": "accuracy",
          "annotations": [],
          "description": "Used to flag prices that are estimated and why. Missing values will be considered calculated. An order may only be submitted if all price components are calculated.",
          "attributes": [],
          "type": "price_accuracy",
          "required": false
        },
        {
          "name": "rate_label",
          "annotations": [],
          "description": "Optional rate label for this order price detail if the key relates to a VAT or Duty in the format XX.XXX%.",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "8.875%"
        }
      ]
    },
    {
      "plural": "order_price_detail_components",
      "name": "order_price_detail_component",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "order_price_detail_component_key",
          "required": true
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The ISO-4217 3 character currency code in which the amount is calculated.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "The total cost of the price detail component in the currency of the experience in which the order is placed.",
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "label",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "base",
          "annotations": [],
          "description": "The amount of this price detail component in the base currency of the organization.",
          "attributes": [],
          "type": "price",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "description": "The display name for this order price detail component.",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "order_promotion_triggers",
      "name": "order_promotion_trigger",
      "attributes": [],
      "fields": [
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "promotion_trigger_type",
          "required": true,
          "example": "order_subtotal"
        },
        {
          "name": "min",
          "annotations": [],
          "description": "Minimum amount to be eligible for the trigger",
          "attributes": [],
          "type": "price",
          "required": false
        }
      ]
    },
    {
      "plural": "order_put_forms",
      "name": "order_put_form",
      "description": "The order put form is used to upsert an order, providing the details on pricing and delivery options for destination and items/quantities specified.",
      "attributes": [],
      "fields": [
        {
          "name": "items",
          "annotations": [],
          "attributes": [],
          "type": "[line_item_form]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "customer",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The customer who actually is making the purchase. We recommend providing as much information as you have, notably email address which can be used to increase acceptance rates if Flow is processing payment for this order. If you can also provide your customer number - we can link multiple orders for each customer in the Flow console.",
          "attributes": [],
          "type": "order_customer_form",
          "required": false
        },
        {
          "name": "delivered_duty",
          "annotations": [],
          "description": "Options returned will only use tiers with the matching delivered duty. This would also affect whether duties are included in the total or not. If not specified, defaults based on the experience default setting.",
          "attributes": [],
          "type": "delivered_duty",
          "required": false
        },
        {
          "name": "selections",
          "annotations": [],
          "description": "Selected list of delivery options for this quote. The original order will contain one or more deliveries. Each delivery will contain one or more shipping options (e.g. standard or express). We need to know which shipping options the user selected in order to provide accurate, local shipping pricing. You should only specify if you are explicitly changing the delivery options",
          "attributes": [],
          "type": "[string]",
          "minimum": 1,
          "required": false
        },
        {
          "name": "destination",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "order_address",
          "required": false
        },
        {
          "name": "discount",
          "annotations": [],
          "description": "An optional discount to apply to the entire order",
          "attributes": [],
          "type": "money",
          "required": false
        },
        {
          "name": "discounts",
          "annotations": [],
          "description": "Optional discount(s) to apply to the entire order.",
          "attributes": [],
          "type": "discounts_form",
          "required": false
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "A set of key/value pairs that you can attach to the order. It can be useful for storing additional information about the charge in a structured format.",
          "attributes": [],
          "type": "map[string]",
          "required": false
        },
        {
          "name": "authorization_keys",
          "annotations": [],
          "description": "Sets the authorization keys to associate with this order. Each authorization, if valid, will then be added to the order.payments field.",
          "attributes": [],
          "type": "[string]",
          "required": false
        },
        {
          "name": "options",
          "annotations": [],
          "description": "Optional behaviors to enable for this order",
          "attributes": [],
          "type": "order_options",
          "required": false
        }
      ]
    },
    {
      "plural": "order_references",
      "name": "order_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "order_rule_references",
      "name": "order_rule_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "order_rules_summaries",
      "name": "order_rules_summary",
      "attributes": [],
      "fields": [
        {
          "name": "applied",
          "annotations": [],
          "attributes": [],
          "type": "[order_rule_reference]",
          "required": true
        }
      ]
    },
    {
      "plural": "order_service_changes",
      "name": "order_service_change",
      "description": "Manual change for a shipping method used for an order. Currently only available to orders with a single calculated delivery.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "from",
          "annotations": [],
          "attributes": [],
          "type": "carrier_service",
          "required": true
        },
        {
          "name": "to",
          "annotations": [],
          "attributes": [],
          "type": "carrier_service",
          "required": true
        }
      ]
    },
    {
      "plural": "order_service_change_forms",
      "name": "order_service_change_form",
      "description": "Manual change for a shipping method used for an order. Currently only available to orders with a single calculated delivery. To help with orders with multiple deliveries, we will require verification of both the current service level (from) and the new service level (to).",
      "attributes": [],
      "fields": [
        {
          "name": "from_service_id",
          "annotations": [],
          "description": "Valid carrier service level ID of the order delivery to be changed.",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "landmark-global"
        },
        {
          "name": "to_service_id",
          "annotations": [],
          "description": "Valid carrier service level ID to use for the delivery.",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "dhl-express-worldwide"
        }
      ]
    },
    {
      "plural": "order_service_change_requests",
      "name": "order_service_change_request",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "request",
          "annotations": [],
          "attributes": [],
          "type": "order_service_change_request_data",
          "required": true
        }
      ]
    },
    {
      "plural": "order_service_change_request_data",
      "name": "order_service_change_request_data",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "source_url",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "filename",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "order_submission_forms",
      "name": "order_submission_form",
      "description": "Optional data to be processed during order submission",
      "attributes": [],
      "fields": [
        {
          "default": "[]",
          "name": "identifiers",
          "annotations": [],
          "description": "An optional list of order identifiers to associate with the order.",
          "attributes": [],
          "type": "[order_submission_identifier_form]",
          "required": false
        }
      ]
    },
    {
      "plural": "order_submission_identifier_forms",
      "name": "order_submission_identifier_form",
      "description": "Defines the data needed to attach an identifer to each order created by a checkout.",
      "attributes": [],
      "fields": [
        {
          "name": "identifier",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "description": "The name of the identifier is used to identify where this identifier was set. It is informational only",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "primary",
          "annotations": [],
          "description": "If you set this to true, creates the order identifier and marks it as primary. If there already exists a prior primary identifier, that identifier will be updated to no longer by the primary",
          "attributes": [],
          "type": "boolean",
          "required": false
        }
      ]
    },
    {
      "plural": "order_summaries",
      "name": "order_summary",
      "description": "The order summary is a view of the order summary object with the order prices flattened to keys.",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "The order number",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "subtotal",
          "annotations": [],
          "attributes": [],
          "type": "order_summary_price_detail",
          "required": true
        },
        {
          "name": "shipping",
          "annotations": [],
          "attributes": [],
          "type": "order_summary_price_detail",
          "required": false
        },
        {
          "name": "tax",
          "annotations": [],
          "attributes": [],
          "type": "order_summary_price_detail",
          "required": false
        },
        {
          "name": "duty",
          "annotations": [],
          "attributes": [],
          "type": "order_summary_price_detail",
          "required": false
        },
        {
          "name": "insurance",
          "annotations": [],
          "attributes": [],
          "type": "order_summary_price_detail",
          "required": false
        },
        {
          "name": "discount",
          "annotations": [],
          "attributes": [],
          "type": "order_summary_price_detail",
          "required": false
        },
        {
          "name": "surcharges",
          "annotations": [],
          "attributes": [],
          "type": "order_summary_price_detail",
          "required": false
        },
        {
          "name": "adjustment",
          "annotations": [],
          "attributes": [],
          "type": "order_summary_price_detail",
          "required": false
        },
        {
          "name": "total",
          "annotations": [],
          "attributes": [],
          "type": "order_summary_price_detail",
          "required": true
        },
        {
          "name": "lines",
          "annotations": [],
          "attributes": [],
          "type": "[order_summary_line_item]",
          "required": true
        },
        {
          "name": "identifiers",
          "annotations": [],
          "description": "The identifiers object is a map where the key will be the name of the identifier and the value is the identifier itself. For example, if you have an identifer named external_id, you will have an object here with a key named external_id",
          "attributes": [],
          "type": "map[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "order_summary_images",
      "name": "order_summary_image",
      "attributes": [],
      "fields": [
        {
          "name": "url",
          "annotations": [],
          "description": "The full URL to the image",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png"
        }
      ]
    },
    {
      "plural": "order_summary_items",
      "name": "order_summary_item",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "description",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "Returns a list of item attributes w/ intent 'checkout_content'",
          "attributes": [],
          "type": "[checkout_item_content_attribute]",
          "minimum": 0,
          "required": true
        },
        {
          "name": "image",
          "annotations": [],
          "description": "Provides the primary image to use in checkout. This image will be selected by finding the item image with tag 'checkout', defaulting to another available image if there is one.",
          "attributes": [],
          "type": "order_summary_image",
          "required": false
        },
        {
          "name": "price",
          "annotations": [],
          "attributes": [],
          "type": "price",
          "required": true
        },
        {
          "name": "discount",
          "annotations": [],
          "attributes": [],
          "type": "price",
          "required": false
        },
        {
          "name": "tax",
          "annotations": [],
          "attributes": [],
          "type": "order_summary_levy",
          "required": false
        },
        {
          "name": "duty",
          "annotations": [],
          "attributes": [],
          "type": "order_summary_levy",
          "required": false
        },
        {
          "name": "price_attributes",
          "annotations": [],
          "description": "All attributes with intent price as keys of this map - with each of those attributes mapped to its value in the local currency. For example, given an attribute named 'msrp' with intent 'price', this map will contain a key named 'msrp'",
          "attributes": [],
          "type": "map[price]",
          "required": true
        }
      ]
    },
    {
      "plural": "order_summary_levies",
      "name": "order_summary_levy",
      "attributes": [],
      "fields": [
        {
          "name": "rate",
          "annotations": [],
          "attributes": [],
          "type": "decimal",
          "required": true,
          "example": "0.2"
        },
        {
          "name": "rate_label",
          "annotations": [],
          "description": "Optional rate label for this order price detail if the key relates to a VAT or Duty in the format XX.XXX%",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "8.875%"
        },
        {
          "name": "value",
          "annotations": [],
          "attributes": [],
          "type": "price",
          "required": true
        }
      ]
    },
    {
      "plural": "order_summary_line_items",
      "name": "order_summary_line_item",
      "attributes": [],
      "fields": [
        {
          "name": "item",
          "annotations": [],
          "attributes": [],
          "type": "order_summary_item",
          "required": true
        },
        {
          "name": "quantity",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "minimum": 1,
          "required": true
        },
        {
          "name": "discount",
          "annotations": [],
          "attributes": [],
          "type": "price",
          "required": false
        },
        {
          "name": "tax",
          "annotations": [],
          "attributes": [],
          "type": "order_summary_levy",
          "required": false
        },
        {
          "name": "duty",
          "annotations": [],
          "attributes": [],
          "type": "order_summary_levy",
          "required": false
        },
        {
          "name": "total",
          "annotations": [],
          "description": "The total price of quantity 1 of the item in this line. Computed as price - discount + tax + duty",
          "attributes": [],
          "type": "price",
          "required": true
        },
        {
          "name": "price_attributes",
          "annotations": [],
          "description": "All attributes with intent price as keys of this map - with each of those attributes mapped to its value in the local currency. For example, given an attribute named 'msrp' with intent 'price', this map will contain a key named 'msrp' which represents the line total of the msrp (e.g. item msrp * quantity)",
          "attributes": [],
          "type": "map[price]",
          "required": true
        }
      ]
    },
    {
      "plural": "order_summary_price_details",
      "name": "order_summary_price_detail",
      "description": "Summaries the io.flow.order.price.v0.models.order_price_detail, removing components and accuracy which are not needed for summary views",
      "attributes": [],
      "fields": [
        {
          "name": "price",
          "annotations": [],
          "description": "The key indicating what this price detail represents.",
          "attributes": [],
          "type": "price",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "description": "The display name for this order price detail if appropriate.",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "GST"
        },
        {
          "name": "rate",
          "annotations": [],
          "description": "Optional rate for this order price detail if the key relates to a tax or Duty.",
          "attributes": [],
          "type": "decimal",
          "required": false,
          "example": "0.2"
        },
        {
          "name": "rate_label",
          "annotations": [],
          "description": "Optional rate label for this order price detail if the key relates to a VAT or Duty in the format XX.XXX%",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "8.875%"
        }
      ]
    },
    {
      "plural": "order_upserteds",
      "name": "order_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "environment",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "experience_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "expires_at",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "customer",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "order_customer",
          "required": true
        },
        {
          "name": "selections",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "required": true
        },
        {
          "name": "items",
          "annotations": [],
          "attributes": [],
          "type": "[localized_line_item]",
          "required": true
        },
        {
          "name": "destination",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "order_address",
          "required": true
        },
        {
          "name": "deliveries",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "[delivery]",
          "required": true
        },
        {
          "name": "prices",
          "annotations": [],
          "attributes": [],
          "type": "[order_price_detail]",
          "required": true
        },
        {
          "name": "order_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "payments",
          "annotations": [],
          "attributes": [],
          "type": "[order_payment]",
          "required": false
        },
        {
          "name": "discount",
          "annotations": [],
          "attributes": [],
          "type": "money",
          "required": false
        },
        {
          "name": "delivered_duty",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "total",
          "annotations": [],
          "attributes": [],
          "type": "localized_total",
          "required": true
        },
        {
          "name": "created_at",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "updated_at",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "submitted_at",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "lines",
          "annotations": [],
          "attributes": [],
          "type": "[line]",
          "required": false
        },
        {
          "name": "attributes",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "required": false
        },
        {
          "name": "geo",
          "annotations": [],
          "attributes": [],
          "type": "order_geo",
          "required": false
        },
        {
          "name": "merchant_of_record",
          "annotations": [],
          "attributes": [],
          "type": "order_merchant_of_record",
          "required": false
        },
        {
          "name": "tax_registration",
          "annotations": [],
          "description": "Represents the tax registration on an order, if applicable.",
          "attributes": [],
          "type": "tax_registration",
          "required": false
        }
      ]
    },
    {
      "plural": "order_upserted_v2s",
      "name": "order_upserted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "order",
          "annotations": [],
          "attributes": [],
          "type": "order",
          "required": true
        }
      ]
    },
    {
      "plural": "order_versions",
      "name": "order_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "order",
          "annotations": [],
          "attributes": [],
          "type": "order",
          "required": true
        }
      ]
    },
    {
      "plural": "order_with_discounts_forms",
      "name": "order_with_discounts_form",
      "attributes": [],
      "fields": [
        {
          "name": "order",
          "annotations": [],
          "attributes": [],
          "type": "order_form",
          "required": true
        },
        {
          "default": "[]",
          "name": "discounts",
          "annotations": [],
          "description": "A list of discount codes to apply to the order.",
          "attributes": [],
          "type": "[string]",
          "required": true,
          "example": "WELCOME20"
        }
      ]
    },
    {
      "plural": "organizations",
      "name": "organization",
      "description": "Represents a single organization in the system, and what environment it is currently operating in.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "environment",
          "annotations": [],
          "attributes": [],
          "type": "environment",
          "required": true
        },
        {
          "name": "parent",
          "annotations": [],
          "description": "When creating an organization in the test environment, it is linked to your production organization. This allows you to have as many test organizations as you like.",
          "attributes": [],
          "type": "organization_reference",
          "required": false
        },
        {
          "name": "defaults",
          "annotations": [],
          "description": "Always present. Marked optional for backwards compatibility.",
          "attributes": [],
          "type": "organization_defaults",
          "required": false
        },
        {
          "name": "created_at",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        }
      ]
    },
    {
      "plural": "organization_authorizations",
      "name": "organization_authorization",
      "description": "Defines the data used for broad authorization of user access to org level data",
      "attributes": [],
      "fields": [
        {
          "name": "role",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "role",
          "deprecation": {
            "description": "Static roles are being deprecated for role-based permissions."
          },
          "required": false
        },
        {
          "name": "environment",
          "annotations": [],
          "attributes": [],
          "type": "environment",
          "required": true
        }
      ]
    },
    {
      "plural": "organization_authorization_forms",
      "name": "organization_authorization_form",
      "attributes": [],
      "fields": [
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "environment",
          "annotations": [],
          "attributes": [],
          "type": "environment",
          "required": true
        }
      ]
    },
    {
      "plural": "organization_configuration_references",
      "name": "organization_configuration_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "organization_currency_settings",
      "name": "organization_currency_setting",
      "description": "Represents organization-specific currency conversion adjustments.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "base",
          "annotations": [],
          "description": "The base currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "target",
          "annotations": [],
          "description": "The target currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "margin",
          "annotations": [],
          "description": "A percent of the base currency value added to the base currency before conversion.",
          "attributes": [],
          "type": "decimal",
          "required": true,
          "example": "5.0"
        }
      ]
    },
    {
      "plural": "organization_currency_setting_forms",
      "name": "organization_currency_setting_form",
      "description": "Represents the parts of an organization setting that can be updated.",
      "attributes": [],
      "fields": [
        {
          "name": "base",
          "annotations": [],
          "description": "The base currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "target",
          "annotations": [],
          "description": "The target currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "margin",
          "annotations": [],
          "description": "A percent of the base currency value added to the base currency before conversion.",
          "attributes": [],
          "type": "decimal",
          "required": true,
          "example": "5.0"
        }
      ]
    },
    {
      "plural": "organization_currency_setting_versions",
      "name": "organization_currency_setting_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "organization_currency_setting",
          "annotations": [],
          "attributes": [],
          "type": "organization_currency_setting",
          "required": true
        }
      ]
    },
    {
      "plural": "organization_default_configurations",
      "name": "organization_default_configurations",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "checkout_configuration",
          "annotations": [],
          "attributes": [],
          "type": "organization_configuration_reference",
          "required": true
        }
      ]
    },
    {
      "plural": "organization_default_configurations_deleteds",
      "name": "organization_default_configurations_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "default_configurations",
          "annotations": [],
          "attributes": [],
          "type": "organization_default_configurations",
          "required": true
        }
      ]
    },
    {
      "plural": "organization_default_configurations_forms",
      "name": "organization_default_configurations_form",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "organization_default_configurations_upserteds",
      "name": "organization_default_configurations_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "default_configurations",
          "annotations": [],
          "attributes": [],
          "type": "organization_default_configurations",
          "required": true
        }
      ]
    },
    {
      "plural": "organization_defaults",
      "name": "organization_defaults",
      "attributes": [],
      "fields": [
        {
          "name": "country",
          "annotations": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAN"
        },
        {
          "name": "base_currency",
          "annotations": [],
          "description": "ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        },
        {
          "name": "language",
          "annotations": [],
          "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "en"
        },
        {
          "name": "locale",
          "annotations": [],
          "description": "The locale id as defined in https://api.flow.io/reference/locales",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "fr-CA"
        },
        {
          "name": "timezone",
          "annotations": [],
          "description": "The name of the timezone as defined in https://api.flow.io/reference/timezones",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "America/New_York"
        }
      ]
    },
    {
      "plural": "organization_deleteds",
      "name": "organization_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "organization_deleted_v2s",
      "name": "organization_deleted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "organization",
          "required": true
        }
      ]
    },
    {
      "plural": "organization_forms",
      "name": "organization_form",
      "description": "Either id or name is required.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Defaults to a URL safe and unique version of the name",
          "attributes": [],
          "type": "string",
          "minimum": 3,
          "required": false
        },
        {
          "name": "name",
          "annotations": [],
          "description": "Defaults to the id",
          "attributes": [],
          "type": "string",
          "minimum": 3,
          "required": false
        },
        {
          "default": "production",
          "name": "environment",
          "annotations": [],
          "attributes": [
            {
              "name": "value-substitute",
              "value": {
                "substitute": "sandbox"
              }
            }
          ],
          "type": "environment",
          "required": true
        },
        {
          "name": "parent_id",
          "annotations": [],
          "description": "When creating an organization in the test environment, you must specify your production organization id.",
          "attributes": [
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.organization.v0",
                "resource_type": "io.flow.common.v0.models.organization",
                "operation_method": "GET",
                "operation_path": "/organizations",
                "identifier_field": "id",
                "query_params": {
                  "environment": "production"
                }
              }
            }
          ],
          "type": "string",
          "required": false
        },
        {
          "name": "defaults",
          "annotations": [],
          "description": "Used to override (if needed) the geolocation-based organization defaults",
          "attributes": [],
          "type": "organization_defaults",
          "required": false
        }
      ]
    },
    {
      "plural": "organization_put_forms",
      "name": "organization_put_form",
      "description": "Data required to upsert an organization.",
      "attributes": [],
      "fields": [
        {
          "name": "name",
          "annotations": [],
          "description": "Defaults to the id",
          "attributes": [],
          "type": "string",
          "minimum": 3,
          "required": false
        },
        {
          "name": "environment",
          "annotations": [],
          "description": "If updating, defaults to the current environment. If creating, defaults to production",
          "attributes": [],
          "type": "environment",
          "required": false
        },
        {
          "name": "parent_id",
          "annotations": [],
          "description": "When creating an organization in the test environment, you must specify your production organization id.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "defaults",
          "annotations": [],
          "description": "Used to override (if needed) the geolocation-based organization defaults",
          "attributes": [],
          "type": "organization_defaults",
          "required": false
        }
      ]
    },
    {
      "plural": "organization_rates_data",
      "name": "organization_rates_data",
      "attributes": [],
      "fields": [
        {
          "name": "rates",
          "annotations": [],
          "attributes": [],
          "type": "[rate]",
          "required": true
        }
      ]
    },
    {
      "plural": "organization_rates_publisheds",
      "name": "organization_rates_published",
      "description": "Represents the full list of exchange rates in effect for an organization. This is a bulk event - meaning any time an individual rate changes, we publish the new complete list of exchange rates. Note this event is published a few minutes after a rate is published, allowing us to aggregate multiple changes in a short period of time to reduce the number of organization_rates_published we publish.",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "data",
          "annotations": [],
          "attributes": [],
          "type": "organization_rates_data",
          "required": true
        }
      ]
    },
    {
      "plural": "organization_references",
      "name": "organization_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "organization_sessions",
      "name": "organization_session",
      "description": "Represents a session created for an organization. Primary method to select an experience for a given user session and ensure that experience does not change throughout the user's activity. Provides authentication to objects created during this session (e.g. order).",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "visitor",
          "annotations": [],
          "attributes": [],
          "type": "session_visitor",
          "required": true
        },
        {
          "name": "visit",
          "annotations": [],
          "attributes": [],
          "type": "session_visit",
          "required": true
        },
        {
          "name": "environment",
          "annotations": [],
          "description": "The Flow organization environment",
          "attributes": [],
          "type": "environment",
          "required": true,
          "example": "sandbox"
        },
        {
          "name": "attributes",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "required": true
        },
        {
          "name": "ip",
          "annotations": [
            "personal_data"
          ],
          "description": "The latest IP Address associated with this session, if known",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "local",
          "annotations": [],
          "attributes": [],
          "type": "local_session",
          "required": false
        },
        {
          "name": "geo",
          "annotations": [],
          "description": "The geolocated information for this particular session. Note will always be present. Marked optional for backwards compatibility",
          "attributes": [],
          "type": "session_geo",
          "required": false
        },
        {
          "name": "experience",
          "annotations": [],
          "description": "Present if the session maps to an enabled experience",
          "attributes": [],
          "type": "experience_geo",
          "required": false
        },
        {
          "name": "format",
          "annotations": [],
          "attributes": [],
          "type": "session_format",
          "required": false
        },
        {
          "name": "experiment",
          "annotations": [],
          "attributes": [],
          "type": "session_experiment",
          "required": false
        }
      ]
    },
    {
      "plural": "organization_session_authorizations",
      "name": "organization_session_authorization",
      "description": "Represents a session authorized access to the specified organization's data",
      "attributes": [],
      "fields": [
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "organization_reference",
          "required": true
        },
        {
          "name": "environment",
          "annotations": [],
          "attributes": [],
          "type": "environment",
          "required": true
        }
      ]
    },
    {
      "plural": "organization_short_ids",
      "name": "organization_short_id",
      "description": "A short identifier for an organization that is used to setup account IDs, invoice Prefixes, etc.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "organization_reference",
          "required": true
        },
        {
          "name": "short_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "organization_short_id_deleteds",
      "name": "organization_short_id_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization_short_id",
          "annotations": [],
          "attributes": [],
          "type": "organization_short_id",
          "required": true
        }
      ]
    },
    {
      "plural": "organization_short_id_upserteds",
      "name": "organization_short_id_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization_short_id",
          "annotations": [],
          "attributes": [],
          "type": "organization_short_id",
          "required": true
        }
      ]
    },
    {
      "plural": "organization_summaries",
      "name": "organization_summary",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "organization_tokens",
      "name": "organization_token",
      "description": "All of the metadata associated with a given token.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "organization_reference",
          "required": true
        },
        {
          "name": "user",
          "annotations": [],
          "attributes": [],
          "type": "user_reference",
          "required": true
        },
        {
          "name": "environment",
          "annotations": [],
          "attributes": [],
          "type": "environment",
          "required": true
        },
        {
          "name": "partial",
          "annotations": [],
          "description": "The partial API token",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "a21TK-XXXXX-lJ38i"
        },
        {
          "name": "created_at",
          "annotations": [],
          "description": "The date/time on which this token was created",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "description",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "organization_token_forms",
      "name": "organization_token_form",
      "description": "Used to create a new token. User making the request must be authorized to create a token for this organization.",
      "attributes": [],
      "fields": [
        {
          "name": "environment",
          "annotations": [],
          "attributes": [],
          "type": "environment",
          "required": true
        },
        {
          "name": "description",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "organization_token_references",
      "name": "organization_token_reference",
      "description": "Summary data for a given token",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "organization_reference",
          "required": true
        },
        {
          "name": "environment",
          "annotations": [],
          "attributes": [],
          "type": "environment",
          "required": true
        },
        {
          "name": "user",
          "annotations": [],
          "attributes": [],
          "type": "user_reference",
          "required": true
        }
      ]
    },
    {
      "plural": "organization_upserteds",
      "name": "organization_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "environment",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "currencies",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "deprecation": {
            "description": "Replaced by default base currency"
          },
          "minimum": 0,
          "required": true
        },
        {
          "name": "parent_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "default_base_currency",
          "annotations": [],
          "description": "Unless otherwise specified, this is the currency in which all 'base' prices will be presented in. Will be made required once deployed.",
          "maximum": 3,
          "attributes": [],
          "type": "string",
          "minimum": 3,
          "required": false
        },
        {
          "name": "default_country",
          "annotations": [],
          "description": "ISO 3166 3-character country code. See https://api.flow.io/reference/countries",
          "maximum": 3,
          "attributes": [],
          "type": "string",
          "minimum": 3,
          "required": false
        },
        {
          "name": "default_language",
          "annotations": [],
          "description": "ISO 639 2-character language code. See https://api.flow.io/reference/languages",
          "maximum": 2,
          "attributes": [],
          "type": "string",
          "minimum": 2,
          "required": false
        },
        {
          "name": "default_locale",
          "annotations": [],
          "description": "The ID of the default locale for this organization. See https://api.flow.io/reference/locales",
          "maximum": 2,
          "attributes": [],
          "type": "string",
          "minimum": 2,
          "required": false,
          "example": "en-US"
        },
        {
          "name": "default_timezone",
          "annotations": [],
          "description": "The name of the default timezone for this organization. See https://api.flow.io/reference/timezones",
          "maximum": 3,
          "attributes": [],
          "type": "string",
          "minimum": 3,
          "required": false,
          "example": "America/New_York"
        }
      ]
    },
    {
      "plural": "organization_upserted_v2s",
      "name": "organization_upserted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "organization",
          "required": true
        }
      ]
    },
    {
      "plural": "organization_versions",
      "name": "organization_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "organization",
          "required": true
        }
      ]
    },
    {
      "plural": "original_prices",
      "name": "original_prices",
      "description": "Model representing original and max values and currencies.",
      "attributes": [],
      "fields": [
        {
          "name": "value",
          "annotations": [],
          "attributes": [],
          "type": "price",
          "required": true
        },
        {
          "name": "max",
          "annotations": [],
          "attributes": [],
          "type": "price",
          "required": true
        }
      ]
    },
    {
      "plural": "outbound_carton_fees",
      "name": "outbound_carton_fee",
      "attributes": [],
      "fields": [
        {
          "name": "amount",
          "annotations": [],
          "attributes": [],
          "type": "money",
          "required": true
        }
      ]
    },
    {
      "plural": "oversized_shipment_ratecard_fees",
      "name": "oversized_shipment_ratecard_fee",
      "attributes": [],
      "fields": [
        {
          "name": "weight_threshold",
          "annotations": [],
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "weight_unit",
          "annotations": [],
          "attributes": [],
          "type": "unit_of_measurement",
          "required": true
        },
        {
          "name": "margin",
          "annotations": [],
          "description": "margin to charge",
          "attributes": [],
          "type": "double",
          "required": false
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "actual amount to charge",
          "attributes": [],
          "type": "double",
          "required": false
        }
      ]
    },
    {
      "plural": "packagings",
      "name": "packaging",
      "description": "Represents packaging available to ship items",
      "attributes": [],
      "fields": [
        {
          "name": "dimensions",
          "annotations": [],
          "attributes": [],
          "type": "dimensions",
          "minimum": 1,
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "description": "User-friendly name for the package. Defaults to concatenation of dimension values. e.g. box-12x4x30",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "partner_centers",
      "name": "partner_center",
      "description": "Represents information about a partner (e.g. external 3PL) running the fulfillment center",
      "attributes": [],
      "fields": [
        {
          "name": "partner_reference",
          "annotations": [],
          "description": "Partner that is associated with this crossdock center",
          "attributes": [],
          "type": "partner_reference",
          "required": true,
          "example": "Flexe"
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Identifier used by the partner for this center",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "fees",
          "annotations": [],
          "attributes": [],
          "type": "[partner_center_fee]",
          "required": false
        }
      ]
    },
    {
      "plural": "partner_center_forms",
      "name": "partner_center_form",
      "attributes": [],
      "fields": [
        {
          "name": "partner_id",
          "annotations": [],
          "description": "Partner that is associated with this crossdock center",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "Flexe"
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Identifier used by the partner for this center",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "fees",
          "annotations": [],
          "attributes": [],
          "type": "[partner_center_fee]",
          "required": false
        }
      ]
    },
    {
      "plural": "partner_references",
      "name": "partner_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "partner_tokens",
      "name": "partner_token",
      "description": "All of the metadata associated with a given token.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "partner",
          "annotations": [],
          "attributes": [],
          "type": "token_partner_reference",
          "required": true
        },
        {
          "name": "user",
          "annotations": [],
          "attributes": [],
          "type": "user_reference",
          "required": true
        },
        {
          "name": "environment",
          "annotations": [],
          "attributes": [],
          "type": "environment",
          "required": true
        },
        {
          "name": "partial",
          "annotations": [],
          "description": "The partial API token",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "a21TK-XXXXX-lJ38i"
        },
        {
          "name": "created_at",
          "annotations": [],
          "description": "The date/time on which this token was created",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "description",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "partner_token_forms",
      "name": "partner_token_form",
      "description": "Used to create a new token. User making the request must be authorized to create a token for this partner.",
      "attributes": [],
      "fields": [
        {
          "name": "environment",
          "annotations": [],
          "attributes": [],
          "type": "environment",
          "required": true
        },
        {
          "name": "description",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "partner_token_references",
      "name": "partner_token_reference",
      "description": "Summary data for a given token",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "partner",
          "annotations": [],
          "description": "The Id of the partner for which this token was created",
          "attributes": [],
          "type": "token_partner_reference",
          "required": true
        },
        {
          "name": "environment",
          "annotations": [],
          "attributes": [],
          "type": "environment",
          "required": true
        },
        {
          "name": "user",
          "annotations": [],
          "attributes": [],
          "type": "user_reference",
          "required": true
        }
      ]
    },
    {
      "plural": "password_change_forms",
      "name": "password_change_form",
      "attributes": [],
      "fields": [
        {
          "name": "current",
          "annotations": [
            "personal_data"
          ],
          "description": "The current valid account password",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "new",
          "annotations": [
            "personal_data"
          ],
          "description": "The new password",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "password_reset_forms",
      "name": "password_reset_form",
      "attributes": [],
      "fields": [
        {
          "name": "token",
          "annotations": [
            "personal_data"
          ],
          "description": "The token for the password reset request",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "password",
          "annotations": [
            "personal_data"
          ],
          "description": "The new password",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "password_reset_request_forms",
      "name": "password_reset_request_form",
      "attributes": [],
      "fields": [
        {
          "name": "email",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "payment_deleteds",
      "name": "payment_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "payment_errors",
      "name": "payment_error",
      "description": "Details for why a payment failed",
      "attributes": [],
      "fields": [
        {
          "default": "payment_error",
          "name": "code",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "messages",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "codes",
          "annotations": [],
          "attributes": [],
          "type": "[payment_error_code]",
          "minimum": 1,
          "required": true
        }
      ]
    },
    {
      "plural": "payment_methods",
      "name": "payment_method",
      "description": "Represents a single payment method - e.g VISA or Paypal - and any associated metadata required for processing",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "visa"
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "payment_method_type",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "VISA"
        },
        {
          "name": "images",
          "annotations": [],
          "attributes": [],
          "type": "payment_method_images",
          "required": true
        },
        {
          "name": "regions",
          "annotations": [],
          "description": "List of region ids in which this payment method is available",
          "attributes": [],
          "type": "[string]",
          "required": true
        }
      ]
    },
    {
      "plural": "single_payment_method_images",
      "name": "payment_method_image",
      "attributes": [],
      "fields": [
        {
          "name": "url",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "https://www.paypalobjects.com/webstatic/mktg/logo-center/PP_Acceptance_Marks_for_LogoCenter_150x94.png"
        },
        {
          "name": "width",
          "annotations": [],
          "attributes": [],
          "type": "integer",
          "required": true,
          "example": "150"
        },
        {
          "name": "height",
          "annotations": [],
          "attributes": [],
          "type": "integer",
          "required": true,
          "example": "94"
        }
      ]
    },
    {
      "plural": "payment_method_images",
      "name": "payment_method_images",
      "attributes": [],
      "fields": [
        {
          "name": "small",
          "annotations": [],
          "attributes": [],
          "type": "payment_method_image",
          "required": true
        },
        {
          "name": "medium",
          "annotations": [],
          "attributes": [],
          "type": "payment_method_image",
          "required": true
        },
        {
          "name": "large",
          "annotations": [],
          "attributes": [],
          "type": "payment_method_image",
          "required": true
        }
      ]
    },
    {
      "plural": "payment_method_issuers",
      "name": "payment_method_issuer",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "payment_method_rules",
      "name": "payment_method_rule",
      "attributes": [],
      "fields": [
        {
          "name": "tags",
          "annotations": [],
          "description": "A collection of active tags for this payment such as whether it is denied for an organization or to be displayed at checkout.",
          "attributes": [],
          "type": "[payment_method_tag]",
          "required": true
        },
        {
          "name": "payment_method",
          "annotations": [],
          "description": "The payment method associated with this rule.",
          "attributes": [],
          "type": "payment_method",
          "required": true
        },
        {
          "name": "display_position",
          "annotations": [],
          "description": "The order in which payment methods will be displayed. Lower numbers will have priority.",
          "attributes": [],
          "type": "integer",
          "required": true
        },
        {
          "name": "content",
          "annotations": [],
          "description": "Contains content necessary to render the given payment method, such as instructions that explain how to pay.",
          "attributes": [],
          "type": "[payment_method_rule_content]",
          "required": false
        },
        {
          "name": "issuers",
          "annotations": [],
          "description": "Certain payment methods, such as iDEAL, require the customer to select an issuing bank before they are redirected to submit payment details. If any issuers are present in this field, the customer must select one which will then be included in the call to get the redirect URL.",
          "attributes": [],
          "type": "[payment_method_issuer]",
          "required": false
        },
        {
          "name": "programs",
          "annotations": [],
          "description": "Deprecated - will always be provided and empty. Will be removed shortly.",
          "attributes": [],
          "type": "[object]",
          "required": false
        },
        {
          "name": "q",
          "annotations": [],
          "description": "Query used to filter payment methods shown on the experience checkout. For example, only show PayPal for the canada experience when the order's destination is Canda and is below 1000 CAD",
          "attributes": [],
          "type": "query",
          "required": false,
          "example": "country:CAN and price < 1000 CAD"
        }
      ]
    },
    {
      "plural": "payment_method_rule_contents",
      "name": "payment_method_rule_content",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "description": "The key identifying the value of this content.",
          "attributes": [],
          "type": "payment_method_rule_content_key",
          "required": true
        },
        {
          "name": "value",
          "annotations": [],
          "description": "The value of this content.",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "payment_paypals",
      "name": "payment_paypal",
      "description": "Represents an online payment processed through PayPal.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "order",
          "annotations": [],
          "description": "If this authorization was made for a specific order number, that order will be referenced here.",
          "attributes": [],
          "type": "authorization_order_reference",
          "required": false
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "The amount to authorize",
          "attributes": [],
          "type": "decimal",
          "required": true,
          "example": "120.38"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        },
        {
          "name": "paypal",
          "annotations": [],
          "description": "Specific data from PayPal.",
          "attributes": [],
          "type": "payment_paypal_data",
          "required": true
        }
      ],
      "deprecation": {
        "description": "Remove after paypal_authorization_details goes live."
      }
    },
    {
      "plural": "payment_paypal_data",
      "name": "payment_paypal_data",
      "description": "Represents on line payment",
      "attributes": [],
      "fields": [
        {
          "name": "payment_id",
          "annotations": [],
          "description": "The payment ID in PayPal.",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "PAY-lkj23lk4j23l42341123"
        }
      ],
      "deprecation": {
        "description": "Remove after paypal_authorization_details goes live."
      }
    },
    {
      "plural": "payment_references",
      "name": "payment_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "payment_source_confirmation_actions",
      "name": "payment_source_confirmation_action",
      "description": "Represents confirmation details & any additional confirmation actions required to execute the payment.",
      "attributes": [],
      "fields": [
        {
          "name": "type",
          "annotations": [],
          "description": "Indicates the type of action to take before the source can be used.",
          "attributes": [],
          "type": "payment_source_confirmation_action_type",
          "required": true
        }
      ]
    },
    {
      "plural": "payment_upserteds",
      "name": "payment_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "payment",
          "annotations": [],
          "attributes": [],
          "type": "payment",
          "required": true
        }
      ]
    },
    {
      "plural": "payment_versions",
      "name": "payment_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "payment",
          "annotations": [],
          "attributes": [],
          "type": "payment",
          "required": true
        }
      ]
    },
    {
      "plural": "paypal_authorization_detailses",
      "name": "paypal_authorization_details",
      "description": "Represents on line payment",
      "attributes": [],
      "fields": [
        {
          "name": "payment_id",
          "annotations": [],
          "description": "The payment ID in paypal",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "PAY-lkj23lk4j23l42341123"
        }
      ]
    },
    {
      "plural": "paypal_authorization_forms",
      "name": "paypal_authorization_form",
      "description": "Executes the PayPal payment",
      "attributes": [],
      "fields": [
        {
          "name": "paypal_payment_id",
          "annotations": [],
          "description": "The PayPal payment id",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "paypal_payer_id",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The PayPal id of the person who is paying",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "description": "Your unique identifier for this transaction, which if provided is used to implement idempotency. If not provided, we will assign.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "A set of key/value pairs that you can attach to an authorization object",
          "attributes": [],
          "type": "map[string]",
          "required": false
        },
        {
          "name": "ip",
          "annotations": [
            "personal_data"
          ],
          "description": "The IP address of the consumer",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "96.242.151.245"
        }
      ]
    },
    {
      "plural": "percent_margins",
      "name": "percent_margin",
      "description": "Rule outcome where shipping surfaced in quote is actual cost plus a predefined margin percentage",
      "attributes": [],
      "fields": [
        {
          "name": "percentage",
          "annotations": [],
          "description": "Percentage of the cost to be added to actual cost to get quote amount to show to customer",
          "attributes": [],
          "type": "double",
          "required": true
        }
      ]
    },
    {
      "plural": "permission_audits",
      "name": "permission_audit",
      "description": "Returns all known permissions, along with their authorization technique and all of the roles which contain them.",
      "attributes": [],
      "fields": [
        {
          "name": "routes",
          "annotations": [],
          "attributes": [],
          "type": "[route_audit]",
          "required": true
        },
        {
          "name": "behaviors",
          "annotations": [],
          "attributes": [],
          "type": "[behavior_audit]",
          "required": true
        }
      ]
    },
    {
      "plural": "permission_checks",
      "name": "permission_check",
      "description": "Used to test an integration's permissions, including identifying the authentication technique that will be used for similar requests.",
      "attributes": [],
      "fields": [
        {
          "name": "authentication_technique",
          "annotations": [],
          "description": "The authentication technique currently being used.",
          "attributes": [],
          "type": "authentication_technique",
          "required": true
        },
        {
          "name": "user",
          "annotations": [],
          "attributes": [],
          "type": "expandable_user",
          "required": false
        },
        {
          "name": "roles",
          "annotations": [],
          "attributes": [],
          "type": "[flow_role]",
          "required": true
        },
        {
          "name": "behaviors",
          "annotations": [],
          "attributes": [],
          "type": "[flow_behavior]",
          "required": true
        },
        {
          "name": "routes",
          "annotations": [],
          "description": "All the routes this request would be able to access.",
          "attributes": [],
          "type": "[permitted_route]",
          "required": true
        }
      ]
    },
    {
      "plural": "permission_errors",
      "name": "permission_error",
      "description": "Returned if no permissions are available for a request.",
      "attributes": [],
      "fields": [
        {
          "name": "code",
          "annotations": [],
          "attributes": [],
          "type": "generic_error_code",
          "required": true
        },
        {
          "name": "messages",
          "annotations": [],
          "description": "A summary of the error.",
          "attributes": [],
          "type": "[string]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "granting_roles",
          "annotations": [],
          "description": "A collection of roles the user does not have that would grant the permission. Not returned if user is not a member of this org.",
          "attributes": [],
          "type": "[flow_role]",
          "required": false
        },
        {
          "name": "admin_users",
          "annotations": [],
          "description": "A brief list of users who could grant one of the missing roles. Not returned if user is not a member of this org",
          "maximum": 5,
          "attributes": [],
          "type": "[user]",
          "required": false
        }
      ]
    },
    {
      "plural": "permitted_routes",
      "name": "permitted_route",
      "description": "A Flow API route and method.",
      "attributes": [],
      "fields": [
        {
          "name": "method",
          "annotations": [],
          "attributes": [],
          "type": "permitted_http_method",
          "required": true
        },
        {
          "name": "path",
          "annotations": [],
          "description": "An API Builder path, starting with / and excluding query strings.",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "pfs_inventory_check_responses",
      "name": "pfs_inventory_check_response",
      "attributes": [],
      "fields": [
        {
          "name": "items",
          "annotations": [],
          "attributes": [],
          "type": "map[pfs_inventory_check_response_item]",
          "required": true
        }
      ]
    },
    {
      "plural": "pfs_inventory_check_response_items",
      "name": "pfs_inventory_check_response_item",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "ats",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "in_stock",
          "annotations": [],
          "attributes": [],
          "type": "boolean",
          "required": true
        }
      ]
    },
    {
      "plural": "pfs_inventory_statuses",
      "name": "pfs_inventory_status",
      "attributes": [],
      "fields": [
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "physical_deliveries",
      "name": "physical_delivery",
      "description": "Represents a collection of items, the available delivery option tier for that collection of items, and metadata about those options",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "description": "A key for a delivery. These will be unique identifiers for a delivery within an order, but may be re-used across quotes.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "center",
          "annotations": [],
          "description": "Origin center for this delivery.",
          "attributes": [],
          "type": "center_summary",
          "required": false
        },
        {
          "name": "items",
          "annotations": [],
          "attributes": [],
          "type": "[delivery_item]",
          "required": true
        },
        {
          "name": "options",
          "annotations": [],
          "attributes": [],
          "type": "[delivery_option]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "special_services",
          "annotations": [],
          "description": "List of special services associated with transport or delivery of this physical shipment.",
          "attributes": [],
          "type": "[physical_delivery_special_serivce]",
          "required": false,
          "example": "hazardous"
        },
        {
          "name": "prices",
          "annotations": [],
          "description": "Prices of the goods within this delivery.",
          "attributes": [],
          "type": "[order_price_detail]",
          "required": false
        },
        {
          "name": "total",
          "annotations": [],
          "description": "Total of the goods within this delivery",
          "attributes": [],
          "type": "localized_total",
          "required": false
        },
        {
          "name": "goods_supply",
          "annotations": [],
          "description": "How goods in this delivery will be supplied with respect to borders.",
          "attributes": [],
          "type": "goods_supply",
          "required": false,
          "example": "export"
        }
      ]
    },
    {
      "plural": "post_payment_redirect_urlses",
      "name": "post_payment_redirect_urls",
      "description": "The URLs to which the customer will be redirected based on the authorization status.",
      "attributes": [],
      "fields": [
        {
          "name": "success",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "failure",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "prices",
      "name": "price",
      "description": "Represents an amount-currency pair for a basic price",
      "attributes": [],
      "fields": [
        {
          "name": "amount",
          "annotations": [],
          "attributes": [],
          "type": "double",
          "required": true,
          "example": "100"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        },
        {
          "name": "label",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CA$100.00"
        }
      ]
    },
    {
      "plural": "price_books",
      "name": "price_book",
      "description": "Represents a list of target prices in a specific currency that can override any subset of item prices within an experience.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "A unique string that identifies a price book within Flow.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "description": "A unique string that identifies a price book within an organization, which defaults to the id if none is set.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The currency for which the price book is valid.",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "USD"
        },
        {
          "name": "name",
          "annotations": [],
          "description": "A display name for the price book.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "includes",
          "annotations": [],
          "description": "Describes which levies are included in the price book item prices.",
          "attributes": [],
          "type": "included_levies",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "description": "Represents the status of a price book within Flow.",
          "attributes": [],
          "type": "price_book_status",
          "required": true
        }
      ]
    },
    {
      "plural": "price_book_deleteds",
      "name": "price_book_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "price_book_forms",
      "name": "price_book_form",
      "description": "Represents a price book for a specific currency that can override any subset of item prices within an experience.",
      "attributes": [],
      "fields": [
        {
          "name": "currency",
          "annotations": [],
          "description": "The currency for which the price book is valid.",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "USD"
        },
        {
          "name": "name",
          "annotations": [],
          "description": "A display name for the price book.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "includes",
          "annotations": [],
          "description": "Describes which levies are included in the price book item prices.",
          "attributes": [],
          "type": "included_levy_key",
          "required": true
        },
        {
          "default": "draft",
          "name": "status",
          "annotations": [],
          "description": "Represents the status of a price book within Flow.",
          "attributes": [],
          "type": "price_book_status",
          "required": false
        }
      ]
    },
    {
      "plural": "price_book_items",
      "name": "price_book_item",
      "description": "Represents the price of a single item within a price book.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "price_book",
          "annotations": [],
          "attributes": [],
          "type": "price_book_reference",
          "required": true
        },
        {
          "name": "price",
          "annotations": [],
          "attributes": [],
          "type": "price",
          "required": true
        },
        {
          "name": "item_number",
          "annotations": [],
          "description": "Corresponds with the product id from the ingested price book.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "schedule",
          "annotations": [],
          "description": "The schedule used to indicate when the price applies to the price book item.",
          "attributes": [],
          "type": "price_book_item_schedule",
          "required": true
        },
        {
          "name": "item_attributes",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "price_book_item_deleteds",
      "name": "price_book_item_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "price_book_item_export_types",
      "name": "price_book_item_export_type",
      "description": "Defines the filters that can be applied when requesting a price book item data export",
      "attributes": [],
      "fields": [
        {
          "name": "price_book_key",
          "annotations": [],
          "description": "The price book that you want to export items from",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "item_numbers",
          "annotations": [],
          "description": "The specific list of item numbers to export",
          "attributes": [],
          "type": "[string]",
          "required": false
        },
        {
          "name": "start_date",
          "annotations": [],
          "description": "If specified, we select items that start on or after this date",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "end_date",
          "annotations": [],
          "description": "If specified, we select items that end on or before this date",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        }
      ]
    },
    {
      "plural": "price_book_item_forms",
      "name": "price_book_item_form",
      "description": "Represents the form to create an item in a pricebook.",
      "attributes": [],
      "fields": [
        {
          "name": "price_book_key",
          "annotations": [],
          "description": "Corresponds with the price book key to which this price book item belongs.",
          "attributes": [
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "io.flow.price.v0.models.price_book",
                "operation_method": "POST",
                "operation_path": "/:organization/price/books",
                "identifier_field": "key",
                "delete_operation_path": "/:organization/price/books/:key"
              }
            }
          ],
          "type": "string",
          "required": true
        },
        {
          "name": "item_number",
          "annotations": [],
          "description": "Corresponds with the unique product id from the ingested price book.",
          "attributes": [
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "item",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/items",
                "identifier_field": "number",
                "delete_operation_path": "/:organization/catalog/items/:number"
              }
            }
          ],
          "type": "string",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "The item price amount, in the currency of the price book",
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "schedule",
          "annotations": [],
          "description": "The schedule used to indicate when the price applies to the price book item.",
          "attributes": [],
          "type": "price_book_item_schedule",
          "required": false
        },
        {
          "name": "item_attributes",
          "annotations": [],
          "description": "Optionally specify values for any of the catalog item attributes that have an intent of price, e.g. add a 'compare_at' or 'msrp' price here.",
          "attributes": [
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "attribute",
                "operation_method": "POST",
                "operation_path": "/:organization/attributes",
                "identifier_field": "key",
                "delete_operation_path": "/:organization/attributes/:key"
              }
            }
          ],
          "type": "map[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "price_book_item_query_forms",
      "name": "price_book_item_query_form",
      "description": "Used to create price book items for multiple items matching a query",
      "attributes": [],
      "fields": [
        {
          "name": "price_book_key",
          "annotations": [],
          "description": "Corresponds with the price book key to which this price book item belongs.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "item_query",
          "annotations": [],
          "description": "This query will be used to select all matching items, setting the price for all the items that match this query.",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "number:xxx or sku:yyy"
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "The item price amount, in the currency of the price book",
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "schedule",
          "annotations": [],
          "description": "The schedule used to indicate when the price applies to the price book item.",
          "attributes": [],
          "type": "price_book_item_schedule",
          "required": false
        },
        {
          "name": "item_attributes",
          "annotations": [],
          "description": "Optionally specify values for any of the catalog item attributes that have an intent of price, e.g. add a 'compare_at' or 'msrp' price here.",
          "attributes": [],
          "type": "map[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "price_book_item_schedules",
      "name": "price_book_item_schedule",
      "description": "Represents schedule applied to a price book item",
      "attributes": [],
      "fields": [
        {
          "name": "starts_at",
          "annotations": [],
          "description": "The date and time for the price to take effect.",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "ends_at",
          "annotations": [],
          "description": "The date and time for the price to stop taking effect. If not provided, no default end time will be set.",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        }
      ]
    },
    {
      "plural": "price_book_item_upserteds",
      "name": "price_book_item_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "price_book_item",
          "annotations": [],
          "attributes": [],
          "type": "price_book_item",
          "required": true
        }
      ]
    },
    {
      "plural": "price_book_references",
      "name": "price_book_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "price_book_upserteds",
      "name": "price_book_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "price_book",
          "annotations": [],
          "attributes": [],
          "type": "price_book",
          "required": true
        }
      ]
    },
    {
      "plural": "price_checks",
      "name": "price_check",
      "attributes": [],
      "fields": [
        {
          "name": "display",
          "annotations": [],
          "description": "Contains the (estimated) price details that are displayed to the user. These details will never change.",
          "attributes": [],
          "type": "local_price_details",
          "required": true
        },
        {
          "name": "final",
          "annotations": [],
          "description": "Contains the final price details, which are initially equal to the display details. At the order level (when shipping address is known), these details may be adjusted.",
          "attributes": [],
          "type": "local_price_details",
          "required": true
        }
      ]
    },
    {
      "plural": "price_details",
      "name": "price_detail",
      "description": "Represents a top-level price detail, e.g. 'Subtotal' or 'VAT'.",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "description": "The key indicating what this price detail represents.",
          "attributes": [],
          "type": "price_detail_key",
          "required": true
        },
        {
          "name": "components",
          "annotations": [],
          "attributes": [],
          "type": "[price_detail_component]",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "label",
          "annotations": [],
          "description": "The formatted label to display for this detail, e.g. '$123.45 CAD'.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "description": "The display name for this price detail.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "basis",
          "annotations": [],
          "description": "The taxable/dutiable basis from which this levy component was produced. Should be equal to total / rate.",
          "attributes": [],
          "type": "decimal",
          "required": false
        }
      ]
    },
    {
      "plural": "price_detail_components",
      "name": "price_detail_component",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "price_detail_component_key",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "label",
          "annotations": [],
          "description": "The formatted label to display for this component, e.g. '$123.45 CAD'.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "description": "The display name for this price detail component.",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "price_detailses",
      "name": "price_details",
      "description": "Detailed information for the pricing of a given item within an experience.",
      "attributes": [],
      "fields": [
        {
          "name": "currency",
          "annotations": [],
          "description": "The currency in which these price details were calculated.",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "USD"
        },
        {
          "name": "item_price",
          "annotations": [],
          "description": "Details of the item's base price from the master catalog, including any applicable discounts.",
          "attributes": [],
          "type": "price_detail",
          "required": true
        },
        {
          "name": "margins",
          "annotations": [],
          "description": "Contains the currency margin, percent item margin, and fixed item margin.",
          "attributes": [],
          "type": "price_detail",
          "required": true
        },
        {
          "name": "vat",
          "annotations": [],
          "description": "The total amount of VAT applied. VAT is applied to the item price and optionally to the duty/shipping prices based on the destination country.",
          "attributes": [],
          "type": "price_detail",
          "required": true
        },
        {
          "name": "duty",
          "annotations": [],
          "description": "The total amount of DUTY applied. Duty is applied to the item price and optionally to the shipping prices based on the destination country, and also will take into account de minimis (thus amount may be zero if de minimis applies).",
          "attributes": [],
          "type": "price_detail",
          "required": true
        },
        {
          "name": "rounding",
          "annotations": [],
          "description": "The amount required to meet the rounding requirements from the experience's settings. For example, if an item price is 121.50, and the rounding setting is up to the nearest '1.00', rounding would return .50 here.",
          "attributes": [],
          "type": "price_detail",
          "required": true
        },
        {
          "name": "price",
          "annotations": [],
          "description": "The rounded price of the item as seen by customers in price detail pages, which takes into account VAT and duty pricing settings of the experience.",
          "attributes": [],
          "type": "price",
          "required": true
        },
        {
          "name": "total",
          "annotations": [],
          "description": "The total price of the item as seen by customers at checkout, which includes the base price, discount, margins, VAT, duty, and rounding.",
          "attributes": [],
          "type": "price",
          "required": true
        },
        {
          "name": "adjustment",
          "annotations": [],
          "description": "The total amount the total price was altered due to sales margins. A negative value indicates a discount.",
          "attributes": [],
          "type": "price_detail",
          "required": false
        }
      ]
    },
    {
      "plural": "price_equations",
      "name": "price_equation",
      "attributes": [],
      "fields": [
        {
          "name": "contracted_rate",
          "annotations": [],
          "description": "The value of the contracted currency conversion rate between Flow and an organization.",
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "rate",
          "annotations": [],
          "description": "The value of the currency conversion rate that includes an organization-specific margin if applicable.",
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "pricing",
          "annotations": [],
          "description": "Contains pricing settings for VAT, duty, and rounding.",
          "attributes": [],
          "type": "pricing",
          "required": true
        },
        {
          "name": "base_price",
          "annotations": [],
          "description": "The base price of the product.",
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "discount",
          "annotations": [],
          "description": "The discount to apply to the base price of the product in the same currency as the base product.",
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "fixed_margin",
          "annotations": [],
          "description": "A fixed amount to add, e.g 2.5 would add an absolute margin of 2.5 in the base currency of your item.",
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "percent_margin",
          "annotations": [],
          "description": "A percent of the base cost to add, e.g. 1.2 would represent a 1.2% increase.",
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "insurance",
          "annotations": [],
          "description": "The insurance information associated with the product.",
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "freight",
          "annotations": [],
          "description": "The freight information associated with the product.",
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "duty",
          "annotations": [],
          "description": "The duty rate applicable to the product. A value of 15 indicates a duty rate of 15%.",
          "attributes": [],
          "type": "duty",
          "required": false,
          "example": "15.25"
        },
        {
          "name": "tax",
          "annotations": [],
          "description": "The tax rate applicable to the product. A value of 17 indicates a tax rate of 17%.",
          "attributes": [],
          "type": "tax",
          "required": false,
          "example": "17"
        },
        {
          "default": "0",
          "name": "percent_sales_margin",
          "annotations": [],
          "description": "A percent sales margin to apply after the other margins, duties, taxes and margins. A value of 17 indicates an increase of 17%. A value of 5.5 indicates a discount of 5.5%",
          "attributes": [],
          "type": "decimal",
          "required": true
        }
      ]
    },
    {
      "plural": "price_forms",
      "name": "price_form",
      "description": "Amount-currency paid for a basic price to be used in model forms, before a price label is created. Label in the main price model is created by the implementing api.",
      "attributes": [],
      "fields": [
        {
          "name": "amount",
          "annotations": [],
          "attributes": [],
          "type": "double",
          "required": true,
          "example": "100"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        }
      ]
    },
    {
      "plural": "price_source_catalogs",
      "name": "price_source_catalog",
      "attributes": [],
      "fields": [
        {
          "name": "price",
          "annotations": [],
          "description": "Catalog item price.",
          "attributes": [],
          "type": "money",
          "required": true
        }
      ]
    },
    {
      "plural": "price_source_price_books",
      "name": "price_source_price_book",
      "attributes": [],
      "fields": [
        {
          "name": "price",
          "annotations": [],
          "description": "Price book item price.",
          "attributes": [],
          "type": "money",
          "required": true
        },
        {
          "name": "includes",
          "annotations": [],
          "description": "Describes which levies are included in the price book price.",
          "attributes": [],
          "type": "included_levies",
          "required": true
        },
        {
          "name": "price_book_reference",
          "annotations": [],
          "attributes": [],
          "type": "price_source_price_book_reference",
          "required": true
        }
      ]
    },
    {
      "plural": "price_source_price_book_references",
      "name": "price_source_price_book_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "price_source_provideds",
      "name": "price_source_provided",
      "attributes": [],
      "fields": [
        {
          "name": "price",
          "annotations": [],
          "description": "Provided item price.",
          "attributes": [],
          "type": "money",
          "required": true
        }
      ]
    },
    {
      "plural": "price_with_bases",
      "name": "price_with_base",
      "attributes": [],
      "fields": [
        {
          "name": "currency",
          "annotations": [],
          "description": "Iso 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        },
        {
          "name": "amount",
          "annotations": [],
          "attributes": [],
          "type": "double",
          "required": true,
          "example": "100"
        },
        {
          "name": "label",
          "annotations": [],
          "description": "The localized label of the amount and currency",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "$125.00 CAD"
        },
        {
          "name": "base",
          "annotations": [],
          "attributes": [],
          "type": "price",
          "required": false
        }
      ]
    },
    {
      "plural": "price_with_base_and_detailses",
      "name": "price_with_base_and_details",
      "attributes": [],
      "fields": [
        {
          "name": "currency",
          "annotations": [],
          "description": "Iso 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        },
        {
          "name": "amount",
          "annotations": [],
          "attributes": [],
          "type": "double",
          "required": true
        },
        {
          "name": "label",
          "annotations": [],
          "description": "The localized label of the amount and currency",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "$125.00 CAD"
        },
        {
          "name": "base",
          "annotations": [],
          "attributes": [],
          "type": "price",
          "required": false
        },
        {
          "name": "details",
          "annotations": [],
          "attributes": [],
          "type": "[delivery_option_cost_detail]",
          "required": false
        }
      ]
    },
    {
      "plural": "pricings",
      "name": "pricing",
      "description": "Pricing determines how the item price is calculated when items are requests via the experience.",
      "attributes": [],
      "fields": [
        {
          "name": "vat",
          "annotations": [],
          "description": "Determines how VAT is treated within this experience - whether it is included in the item price, displayed as a stand alone line item, or ignored - and only used in checkout (see the orders resource)",
          "attributes": [],
          "type": "pricing_levy_setting",
          "required": true
        },
        {
          "name": "duty",
          "annotations": [],
          "description": "Determines how Duty is treated within this experience - whether it is included in the item price, displayed as a stand alone line item, or ignored - and only used in checkout (see the orders resource)",
          "attributes": [],
          "type": "pricing_levy_setting",
          "required": true
        },
        {
          "name": "rounding",
          "annotations": [],
          "description": "If specified, we will round prices in this experience",
          "attributes": [],
          "type": "rounding",
          "required": false
        }
      ]
    },
    {
      "plural": "pricing_deleteds",
      "name": "pricing_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "experience_key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "pricing_settingses",
      "name": "pricing_settings",
      "attributes": [],
      "fields": [
        {
          "name": "editable",
          "annotations": [],
          "description": "Indicates whether the pricing display settings may be edited.",
          "attributes": [],
          "type": "boolean",
          "required": true
        },
        {
          "name": "default_tax_display",
          "annotations": [],
          "description": "Default tax display setting.",
          "attributes": [],
          "type": "pricing_levy_setting",
          "required": true
        },
        {
          "name": "default_duty_display",
          "annotations": [],
          "description": "Default duty display setting.",
          "attributes": [],
          "type": "pricing_levy_setting",
          "required": true
        }
      ]
    },
    {
      "plural": "pricing_upserteds",
      "name": "pricing_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "experience_key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "vat",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "duty",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "rounding_type",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "rounding_method",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "rounding_value",
          "annotations": [],
          "attributes": [],
          "type": "decimal",
          "required": false
        }
      ]
    },
    {
      "plural": "processing_estimates",
      "name": "processing_estimate",
      "attributes": [],
      "fields": [
        {
          "name": "location",
          "annotations": [],
          "description": "Location of where the package is being processed",
          "attributes": [],
          "type": "delivery_window_location",
          "required": true
        },
        {
          "name": "min_date",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "max_date",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "source",
          "annotations": [],
          "description": "Did this come from Flow, carrier, organization, center, etc.",
          "attributes": [],
          "type": "delivery_window_component_source",
          "required": true
        }
      ]
    },
    {
      "plural": "promotion_triggers",
      "name": "promotion_trigger",
      "attributes": [],
      "fields": [
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "promotion_trigger_type",
          "required": true,
          "example": "order_subtotal"
        },
        {
          "name": "min",
          "annotations": [],
          "description": "Minimum amount to be eligible for the trigger",
          "attributes": [],
          "type": "price",
          "required": true
        },
        {
          "name": "remaining",
          "annotations": [],
          "description": "Remaining value necessary to apply the trigger",
          "attributes": [],
          "type": "price",
          "required": true
        }
      ]
    },
    {
      "plural": "promotion_trigger_forms",
      "name": "promotion_trigger_form",
      "attributes": [],
      "fields": [
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "promotion_trigger_type",
          "required": true,
          "example": "order_subtotal"
        },
        {
          "name": "min",
          "annotations": [],
          "description": "Minimum amount to be eligible for the trigger",
          "attributes": [],
          "type": "price_form",
          "required": false
        }
      ]
    },
    {
      "plural": "promotionses",
      "name": "promotions",
      "attributes": [],
      "fields": [
        {
          "name": "applied",
          "annotations": [],
          "description": "List of promotions that have been applied to this order. For example, free shipping promotion is applied to the shipping price.",
          "attributes": [],
          "type": "[promotion]",
          "required": true
        },
        {
          "name": "available",
          "annotations": [],
          "description": "List of available promotions that are applicable for this order. If a promotion is here, the promo is not yet applied to the order, but the order can become eligible for it given some criteria.",
          "attributes": [],
          "type": "[promotion]",
          "required": true
        }
      ]
    },
    {
      "plural": "provinces",
      "name": "province",
      "description": "A subdivision/province/state within a country. These conform to the ISO 3166-2 standard for country subdivisions. See https://api.flow.io/reference/provinces",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "AUS-NSW"
        },
        {
          "name": "iso_3166_2",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "NSW"
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "New South Wales"
        },
        {
          "name": "country",
          "annotations": [],
          "description": "ISO 3166 3 code of the country for this subdivision",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "AUS"
        },
        {
          "name": "province_type",
          "annotations": [],
          "attributes": [],
          "type": "province_type",
          "required": true,
          "example": "province"
        },
        {
          "name": "translations",
          "annotations": [],
          "attributes": [],
          "type": "[localized_translation]",
          "required": false
        }
      ]
    },
    {
      "plural": "public_keys",
      "name": "public_key",
      "description": "A public key is used to encrypt cards client side prior to submitting to the Flow vault.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "RSA Public Key, base 64 encoded",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "queries",
      "name": "query",
      "description": "The query model is used to present a query to a user, containing both the raw query as well as the filter representation of the query.",
      "attributes": [],
      "fields": [
        {
          "name": "q",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "filters",
          "annotations": [],
          "attributes": [],
          "type": "[query_filter]",
          "minimum": 0,
          "required": true
        }
      ]
    },
    {
      "plural": "query_builders",
      "name": "query_builder",
      "description": "The query builder model is used to build a query using structured filters. The end result is a single 'q' string - e.g. 'category:jewelry and brand:Flow'",
      "attributes": [],
      "fields": [
        {
          "name": "q",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "filters",
          "annotations": [],
          "attributes": [],
          "type": "[query_filter]",
          "minimum": 0,
          "required": true
        },
        {
          "name": "available",
          "annotations": [],
          "attributes": [],
          "type": "[available_filter]",
          "minimum": 0,
          "required": true
        }
      ]
    },
    {
      "plural": "query_builder_filter_forms",
      "name": "query_builder_filter_form",
      "attributes": [],
      "fields": [
        {
          "name": "filters",
          "annotations": [],
          "attributes": [],
          "type": "[query_filter_form]",
          "minimum": 1,
          "required": true
        }
      ]
    },
    {
      "plural": "query_builder_query_forms",
      "name": "query_builder_query_form",
      "attributes": [],
      "fields": [
        {
          "name": "q",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "query_filter_structureds",
      "name": "query_filter_structured",
      "attributes": [],
      "fields": [
        {
          "name": "q",
          "annotations": [],
          "description": "A string representation of this query filter",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "category in ('rugs', 'furniture')"
        },
        {
          "name": "field",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "operator",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "values",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "required": true
        }
      ]
    },
    {
      "plural": "query_filter_structured_forms",
      "name": "query_filter_structured_form",
      "attributes": [],
      "fields": [
        {
          "name": "field",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "operator",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "values",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "required": true
        }
      ]
    },
    {
      "plural": "query_filter_unstructureds",
      "name": "query_filter_unstructured",
      "attributes": [],
      "fields": [
        {
          "name": "q",
          "annotations": [],
          "description": "A keyword search query",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "foo and bar"
        }
      ]
    },
    {
      "plural": "query_filter_unstructured_forms",
      "name": "query_filter_unstructured_form",
      "attributes": [],
      "fields": [
        {
          "name": "q",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "quotes",
      "name": "quote",
      "description": "Represents a collection of deliveries and available options for fulfillment of that delivery",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "destination",
          "annotations": [],
          "attributes": [],
          "type": "shipping_address",
          "required": true
        },
        {
          "name": "deliveries",
          "annotations": [],
          "attributes": [],
          "type": "[delivery]",
          "required": true
        },
        {
          "name": "selections",
          "annotations": [],
          "description": "Selected options for the quote. This is used to prepare accurate fully-landed costs of an order and can also be used to pre-select a delivery option on a typical checkout page. By default, the option(s) shown here are part of the default tier of an experience. If no default tier has been designated for the tier group, the default selection would be the first option in the list.",
          "attributes": [],
          "type": "[delivery_option_reference]",
          "required": true
        },
        {
          "default": "paid",
          "name": "delivered_duty",
          "annotations": [],
          "description": "Desired delivered duty options to be returned as part of this quote. If not provided, default to paid.",
          "attributes": [],
          "type": "delivered_duty",
          "required": true
        },
        {
          "name": "delivered_duties",
          "annotations": [],
          "description": "Desired delivered duty options to be returned as part of this quote",
          "attributes": [],
          "type": "[delivered_duty]",
          "minimum": 1,
          "required": true
        }
      ]
    },
    {
      "plural": "quote_errors",
      "name": "quote_error",
      "attributes": [],
      "fields": [
        {
          "name": "code",
          "annotations": [],
          "attributes": [],
          "type": "quote_error_code",
          "required": true
        },
        {
          "name": "messages",
          "annotations": [],
          "description": "A summary of the errors",
          "attributes": [],
          "type": "[string]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "item_numbers",
          "annotations": [],
          "description": "A list of of the item numbers that are not available in inventory",
          "attributes": [],
          "type": "[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "quote_forms",
      "name": "quote_form",
      "attributes": [],
      "fields": [
        {
          "name": "destination",
          "annotations": [],
          "attributes": [],
          "type": "shipping_address",
          "required": true
        },
        {
          "name": "experience",
          "annotations": [],
          "description": "Experience to use for the region of this quote",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "items",
          "annotations": [],
          "attributes": [],
          "type": "[quote_line_item_form]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "delivered_duty",
          "annotations": [],
          "description": "Desired delivered duty options to be returned as part of this quote. If not provided, service will use all available rates.",
          "attributes": [],
          "type": "delivered_duty",
          "required": false
        },
        {
          "name": "delivered_duties",
          "annotations": [],
          "description": "Desired delivered duty options to be returned as part of this quote. If not provided, service will use all available rates.",
          "attributes": [],
          "type": "[delivered_duty]",
          "required": false
        },
        {
          "name": "direction",
          "annotations": [],
          "description": "Quote is for outbound shipment or return shipment. If not provided, will assume status quo of outbound shipment.",
          "attributes": [],
          "type": "lane_direction",
          "required": false
        }
      ]
    },
    {
      "plural": "quote_line_item_forms",
      "name": "quote_line_item_form",
      "description": "Line items and relevant attributes. Similar to common.line_item_form, but price is a money_with_optional_base",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "quantity",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "minimum": 1,
          "required": true
        },
        {
          "name": "shipment_estimate",
          "annotations": [],
          "description": "For items that may not immediately ship out from the origin because of different models of inventory (e.g. drop-ship, sell-first), this is a way for a client to communicate when the items can ship out. This will be used to calculate delivery option windows.",
          "attributes": [],
          "type": "datetime_range",
          "required": false
        },
        {
          "name": "price",
          "annotations": [],
          "description": "The price of this item for this order.",
          "attributes": [],
          "type": "money_with_base",
          "required": true
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "A set of key/value pairs that you can attach to the order. It can be useful for storing additional information about the charge in a structured format.",
          "attributes": [],
          "type": "map[string]",
          "required": false
        },
        {
          "name": "center",
          "annotations": [],
          "description": "Optional center key associated with this item. Used for orders and quotes to specify where to ship an item from. If not specified, Flow will infer based on inventory setup.",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "quote_summaries",
      "name": "quote_summary",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "destination",
          "annotations": [],
          "attributes": [],
          "type": "shipping_address",
          "required": true
        }
      ]
    },
    {
      "plural": "quote_versions",
      "name": "quote_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "quote",
          "annotations": [],
          "attributes": [],
          "type": "quote_summary",
          "required": true
        }
      ]
    },
    {
      "plural": "rates",
      "name": "rate",
      "description": "Represents an organization-specific currency conversion rate at a point in time.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "base",
          "annotations": [],
          "description": "The base currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "target",
          "annotations": [],
          "description": "The target currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "effective_at",
          "annotations": [],
          "description": "The time at which this rate is effective.",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "value",
          "annotations": [],
          "description": "The actual conversion rate from the base currency to target currency including any applicable margins.",
          "attributes": [],
          "type": "decimal",
          "required": true
        }
      ]
    },
    {
      "plural": "rate_deleteds",
      "name": "rate_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "rate_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "rate_deleted_v3s",
      "name": "rate_deleted_v3",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "rate",
          "annotations": [],
          "attributes": [],
          "type": "rate",
          "required": true
        }
      ]
    },
    {
      "plural": "rate_forms",
      "name": "rate_form",
      "description": "Represents the parts of an organization rate that can be updated.",
      "attributes": [],
      "fields": [
        {
          "name": "base",
          "annotations": [],
          "description": "The base currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "target",
          "annotations": [],
          "description": "The target currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "effective_at",
          "annotations": [],
          "description": "The time at which this rate is effective.",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        }
      ]
    },
    {
      "plural": "rate_upserteds",
      "name": "rate_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "rate_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "organization_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "base",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "target",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "effective_at",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "value",
          "annotations": [],
          "description": "The actual conversion rate after all margins have been applied.",
          "attributes": [],
          "type": "decimal",
          "required": true
        }
      ]
    },
    {
      "plural": "rate_upserted_v3s",
      "name": "rate_upserted_v3",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "rate",
          "annotations": [],
          "attributes": [],
          "type": "rate",
          "required": true
        }
      ]
    },
    {
      "plural": "rate_versions",
      "name": "rate_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "rate",
          "annotations": [],
          "attributes": [],
          "type": "rate",
          "required": true
        }
      ]
    },
    {
      "plural": "ratecards",
      "name": "ratecard",
      "description": "Snapshot of all lanes and rows across all service levels of an organization",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "direction",
          "annotations": [],
          "description": "Tells us whether the ratecard is for outbound or reverse logistics. This will determine what fees, if any, to apply on an estimate.",
          "attributes": [],
          "type": "direction",
          "required": true
        },
        {
          "name": "effective_at",
          "annotations": [],
          "description": "Timestamp when ratecard should become effective in the future.",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "origination_zones",
          "annotations": [],
          "description": "Valid list of origination zones for this ratecard",
          "attributes": [],
          "type": "[zone]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "service",
          "annotations": [],
          "description": "Carrier service level. See https://docs.flow.io/services.html",
          "attributes": [],
          "type": "ratecard_service_summary",
          "required": true,
          "example": "dhl-express-worldwide"
        },
        {
          "name": "published_at",
          "annotations": [],
          "description": "Timestamp when the ratecard was published and would be used to generate rates. Until this field is filled out, then ratecard is still in draft mode and cannot be used to generate cost estimates.",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "ratecard_owner",
          "annotations": [],
          "description": "Describes who owns this ratecard and is responsible for paying the carrier.",
          "attributes": [],
          "type": "ratecard_owner",
          "required": true
        }
      ]
    },
    {
      "plural": "ratecard_carrier_summaries",
      "name": "ratecard_carrier_summary",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "ratecard_deleteds",
      "name": "ratecard_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "ratecard",
          "annotations": [],
          "attributes": [],
          "type": "ratecard",
          "required": true
        }
      ]
    },
    {
      "plural": "ratecard_estimate_form_v1s",
      "name": "ratecard_estimate_form_v1",
      "attributes": [],
      "fields": [
        {
          "name": "origin",
          "annotations": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "USA"
        },
        {
          "name": "destination",
          "annotations": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "CHN"
        },
        {
          "name": "weight_unit",
          "annotations": [],
          "description": "Type of unit measurement used to calculate gravitational weight",
          "attributes": [],
          "type": "unit_of_measurement",
          "required": false,
          "example": "pound, kilogram"
        },
        {
          "name": "distance_unit",
          "annotations": [],
          "description": "Type of unit measurement used to calculate dimensional weight",
          "attributes": [],
          "type": "unit_of_measurement",
          "required": false,
          "example": "inch, centimeter"
        },
        {
          "name": "service",
          "annotations": [],
          "description": "Carrier service level to use",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "ups-ground, dhl-express-worldwide"
        },
        {
          "name": "weight",
          "annotations": [],
          "description": "Part of gravitational weight calculation",
          "attributes": [],
          "type": "double",
          "required": false
        },
        {
          "name": "length",
          "annotations": [],
          "description": "Part of dimensional weight calculation",
          "attributes": [],
          "type": "double",
          "required": false
        },
        {
          "name": "width",
          "annotations": [],
          "description": "Part of dimensional weight calculation",
          "attributes": [],
          "type": "double",
          "required": false
        },
        {
          "name": "depth",
          "annotations": [],
          "description": "Part of dimensional weight calculation",
          "attributes": [],
          "type": "double",
          "required": false
        },
        {
          "name": "delivered_duty",
          "annotations": [],
          "description": "Delivered duty type for the estimate. This is taken from the ratecard lane.",
          "attributes": [],
          "type": "delivered_duty",
          "required": false
        },
        {
          "name": "line_items",
          "annotations": [],
          "description": "Items included in the package, if available.",
          "attributes": [],
          "type": "[line_item_form]",
          "required": false
        }
      ]
    },
    {
      "plural": "ratecard_estimate_form_v2s",
      "name": "ratecard_estimate_form_v2",
      "attributes": [],
      "fields": [
        {
          "name": "origin_address",
          "annotations": [],
          "description": "Address the package is originating from",
          "attributes": [],
          "type": "address",
          "required": true
        },
        {
          "name": "destination_address",
          "annotations": [],
          "description": "Address the package is going to",
          "attributes": [],
          "type": "address",
          "required": true
        },
        {
          "name": "weight_unit",
          "annotations": [],
          "description": "Type of unit measurement used to calculate gravitational weight",
          "attributes": [],
          "type": "unit_of_measurement",
          "required": false,
          "example": "pound, kilogram"
        },
        {
          "name": "distance_unit",
          "annotations": [],
          "description": "Type of unit measurement used to calculate dimensional weight",
          "attributes": [],
          "type": "unit_of_measurement",
          "required": false,
          "example": "inch, centimeter"
        },
        {
          "name": "service",
          "annotations": [],
          "description": "Carrier service level to use",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "ups-ground, dhl-express-worldwide"
        },
        {
          "name": "weight",
          "annotations": [],
          "description": "Part of gravitational weight calculation",
          "attributes": [],
          "type": "double",
          "required": false
        },
        {
          "name": "length",
          "annotations": [],
          "description": "Part of dimensional weight calculation",
          "attributes": [],
          "type": "double",
          "required": false
        },
        {
          "name": "width",
          "annotations": [],
          "description": "Part of dimensional weight calculation",
          "attributes": [],
          "type": "double",
          "required": false
        },
        {
          "name": "depth",
          "annotations": [],
          "description": "Part of dimensional weight calculation",
          "attributes": [],
          "type": "double",
          "required": false
        },
        {
          "name": "delivered_duty",
          "annotations": [],
          "description": "Delivered duty type for the estimate. This is taken from the ratecard lane.",
          "attributes": [],
          "type": "delivered_duty",
          "required": false
        },
        {
          "name": "line_items",
          "annotations": [],
          "description": "Items included in the package, if available.",
          "attributes": [],
          "type": "[line_item_form]",
          "required": false
        },
        {
          "name": "center_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "ratecard_estimate_summary_forms",
      "name": "ratecard_estimate_summary_form",
      "attributes": [],
      "fields": [
        {
          "name": "origin",
          "annotations": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "USA"
        },
        {
          "name": "destination",
          "annotations": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "CHN"
        },
        {
          "name": "service",
          "annotations": [],
          "description": "Carrier service level to use",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "ups-ground, dhl-express-worldwide"
        },
        {
          "name": "center_key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "ratecard_estimate_v1s",
      "name": "ratecard_estimate_v1",
      "description": "Represents a summary of a cost estimate based on rate card data for an origin/destination and weight, either gravitational or dimensional",
      "attributes": [],
      "fields": [
        {
          "name": "service",
          "annotations": [],
          "description": "Carrier service used for this estimate",
          "attributes": [],
          "type": "ratecard_service_summary",
          "required": true,
          "example": "dhl-express-worldwide"
        },
        {
          "name": "shipment_window",
          "annotations": [],
          "description": "Represents min/max days transit time for a shipment in this estimate",
          "attributes": [],
          "type": "shipment_window",
          "required": true
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The base iso_4217_3 currency code as defined in http://reference.api.flow.io/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "USD"
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "Base amount for this shipment based on rates on the appropriate lane on the rate card",
          "attributes": [],
          "type": "double",
          "required": true
        },
        {
          "name": "fees",
          "annotations": [],
          "description": "Fees applicable for this estimate",
          "attributes": [],
          "type": "[ratecard_fee]",
          "required": true
        },
        {
          "name": "total",
          "annotations": [],
          "description": "Total of the amount plus any applicable fees",
          "attributes": [],
          "type": "double",
          "required": true
        },
        {
          "name": "delivered_duty",
          "annotations": [],
          "description": "Delivered duty type for the estimate. This is taken from the ratecard lane.",
          "attributes": [],
          "type": "delivered_duty",
          "required": true,
          "example": "paid"
        },
        {
          "name": "dimensional_weight",
          "annotations": [],
          "description": "Estimated dimensional weight (i.e. length x width x depth / dim factor) based on dimensions provided to estimates endpoint or organization dimension estimates. Provided for transparency and any future troubleshooting.",
          "attributes": [],
          "type": "measurement",
          "required": false
        },
        {
          "name": "gravitational_weight",
          "annotations": [],
          "description": "Estimated gravitational weight (i.e. actual weight) based on dimensions provided to estimates endpoint or organization weight estimates. Provided for transparency and any future troubleshooting.",
          "attributes": [],
          "type": "measurement",
          "required": false
        },
        {
          "name": "line_items",
          "annotations": [],
          "description": "Items included in the package, if available.",
          "attributes": [],
          "type": "[line_item_form]",
          "required": false
        }
      ]
    },
    {
      "plural": "ratecard_estimate_v2s",
      "name": "ratecard_estimate_v2",
      "description": "Represents a summary of a cost estimate based on rate card data for an origin/destination and weight, either gravitational or dimensional",
      "attributes": [],
      "fields": [
        {
          "name": "hops",
          "annotations": [],
          "attributes": [],
          "type": "[hop]",
          "required": true
        },
        {
          "name": "delivered_duty",
          "annotations": [],
          "description": "Delivered duty type for the estimate. This is taken from the ratecard lane.",
          "attributes": [],
          "type": "delivered_duty",
          "required": true,
          "example": "paid"
        },
        {
          "name": "dimensional_weight",
          "annotations": [],
          "description": "Estimated dimensional weight (i.e. length x width x depth / dim factor) based on dimensions provided to estimates endpoint or organization dimension estimates. Provided for transparency and any future troubleshooting.",
          "attributes": [],
          "type": "measurement",
          "required": false
        },
        {
          "name": "gravitational_weight",
          "annotations": [],
          "description": "Estimated gravitational weight (i.e. actual weight) based on dimensions provided to estimates endpoint or organization weight estimates. Provided for transparency and any future troubleshooting.",
          "attributes": [],
          "type": "measurement",
          "required": false
        },
        {
          "name": "line_items",
          "annotations": [],
          "description": "Items included in the package, if available.",
          "attributes": [],
          "type": "[line_item_form]",
          "required": false
        },
        {
          "name": "ratecard_owner",
          "annotations": [],
          "description": "Describes which party would be responsible for paying the carrier.",
          "attributes": [],
          "type": "ratecard_owner",
          "required": false
        }
      ]
    },
    {
      "plural": "ratecard_forms",
      "name": "ratecard_form",
      "attributes": [],
      "fields": [
        {
          "name": "direction",
          "annotations": [],
          "description": "Tells us whether the ratecard is for outbound or reverse logistics",
          "attributes": [],
          "type": "direction",
          "required": true
        },
        {
          "name": "effective_at",
          "annotations": [],
          "description": "The date and time where rates in this lane will take effect and produce shipping estimates.",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "origination_zones",
          "annotations": [],
          "description": "Valid list of origination zones for this ratecard",
          "attributes": [],
          "type": "[zone]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "service",
          "annotations": [],
          "description": "Carrier service level associated with this",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "default": "flow",
          "name": "ratecard_owner",
          "annotations": [],
          "description": "Describes who owns this ratecard and is responsible for paying the carrier.",
          "attributes": [],
          "type": "ratecard_owner",
          "required": false
        }
      ]
    },
    {
      "plural": "ratecard_lanes",
      "name": "ratecard_lane",
      "description": "Describe list of rates applicable for a lane on the ratecard - defined by origin and destination zone",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "ratecard",
          "annotations": [],
          "attributes": [],
          "type": "ratecard_reference",
          "required": true
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The base iso_4217_3 currency code as defined in http://reference.api.flow.io/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "USD"
        },
        {
          "name": "delivered_duty",
          "annotations": [],
          "attributes": [],
          "type": "delivered_duty",
          "required": true
        },
        {
          "name": "shipment_window",
          "annotations": [],
          "attributes": [],
          "type": "shipment_window",
          "required": true
        },
        {
          "name": "destination",
          "annotations": [],
          "attributes": [],
          "type": "zone",
          "required": true
        },
        {
          "name": "dim_factor",
          "annotations": [],
          "description": "Factor used to compute dimensional weight. Contact your Flow or specific carrier's account representative.",
          "attributes": [],
          "type": "double",
          "required": true
        },
        {
          "name": "fees",
          "annotations": [],
          "attributes": [],
          "type": "[ratecard_fee]",
          "required": true
        },
        {
          "name": "origin",
          "annotations": [],
          "attributes": [],
          "type": "zone",
          "required": true
        },
        {
          "name": "service",
          "annotations": [],
          "description": "Carrier service level. See https://docs.flow.io/services.html",
          "attributes": [],
          "type": "ratecard_service_summary",
          "required": true,
          "example": "dhl-express-worldwide"
        },
        {
          "name": "rates",
          "annotations": [],
          "description": "Line item rows on the rate card. Shows a list of weight thresholds and corresponding costs.",
          "attributes": [],
          "type": "[ratecard_rate]",
          "required": true
        },
        {
          "name": "rounding",
          "annotations": [],
          "attributes": [],
          "type": "rounding",
          "required": true
        },
        {
          "name": "weight_unit",
          "annotations": [],
          "description": "Type of unit measurement used to calculate gravitational weight",
          "attributes": [],
          "type": "unit_of_measurement",
          "required": true,
          "example": "gram, pound"
        },
        {
          "name": "distance_unit",
          "annotations": [],
          "description": "Type of unit measurement used to calculate dimensional weight",
          "attributes": [],
          "type": "unit_of_measurement",
          "required": true,
          "example": "inch, feet"
        }
      ]
    },
    {
      "plural": "ratecard_lane_deleteds",
      "name": "ratecard_lane_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "ratecard_lane_forms",
      "name": "ratecard_lane_form",
      "attributes": [],
      "fields": [
        {
          "name": "ratecard_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The base iso_4217_3 currency code as defined in http://reference.api.flow.io/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "USD"
        },
        {
          "name": "destination",
          "annotations": [],
          "attributes": [],
          "type": "zone",
          "required": true
        },
        {
          "name": "shipment_window",
          "annotations": [],
          "attributes": [],
          "type": "shipment_window",
          "required": true
        },
        {
          "name": "delivered_duty",
          "annotations": [],
          "attributes": [],
          "type": "delivered_duty",
          "required": true
        },
        {
          "name": "dim_factor",
          "annotations": [],
          "description": "Factor used to compute dimensional weight. Contact your Flow or specific carrier's account representative.",
          "attributes": [],
          "type": "double",
          "required": true
        },
        {
          "name": "fees",
          "annotations": [],
          "attributes": [],
          "type": "[ratecard_fee]",
          "required": true
        },
        {
          "name": "origin",
          "annotations": [],
          "attributes": [],
          "type": "zone",
          "required": true
        },
        {
          "name": "rounding",
          "annotations": [],
          "attributes": [],
          "type": "rounding",
          "required": true
        },
        {
          "name": "rates",
          "annotations": [],
          "description": "Line item rows on the rate card. Shows a list of weight thresholds and corresponding costs.",
          "attributes": [],
          "type": "[ratecard_rate_form]",
          "required": true
        },
        {
          "name": "weight_unit",
          "annotations": [],
          "description": "Type of unit measurement used to calculate gravitational weight",
          "attributes": [],
          "type": "unit_of_measurement",
          "required": true,
          "example": "gram, pound"
        },
        {
          "name": "distance_unit",
          "annotations": [],
          "description": "Type of unit measurement used to calculate dimensional weight",
          "attributes": [],
          "type": "unit_of_measurement",
          "required": true,
          "example": "inch, feet"
        }
      ]
    },
    {
      "plural": "ratecard_lane_import_forms",
      "name": "ratecard_lane_import_form",
      "description": "Represents a line in a ratecard lane import file to be used with bulk CSV imports of multiple ratecard lanes across different services in a single import file. This would represent a row in each file.",
      "attributes": [],
      "fields": [
        {
          "name": "ratecard_owner",
          "annotations": [],
          "description": "Describes which party would be responsible for paying the carrier.",
          "attributes": [],
          "type": "ratecard_owner",
          "required": true,
          "example": "flow"
        },
        {
          "name": "service",
          "annotations": [],
          "description": "Carrier service level associated with this lane. This should be a valid service defined in https://api.flow.io/reference/carrier/services",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "dhl-express-worldwide"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The base iso_4217_3 currency code as defined in http://reference.api.flow.io/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "USD"
        },
        {
          "name": "delivered_duty",
          "annotations": [],
          "attributes": [],
          "type": "delivered_duty",
          "required": true
        },
        {
          "name": "origin",
          "annotations": [],
          "attributes": [],
          "type": "zone",
          "required": true
        },
        {
          "name": "destination",
          "annotations": [],
          "attributes": [],
          "type": "zone",
          "required": true
        },
        {
          "name": "shipment_window",
          "annotations": [],
          "attributes": [],
          "type": "shipment_window",
          "required": true
        },
        {
          "name": "dim_factor",
          "annotations": [],
          "description": "Factor used to compute dimensional weight. Contact your Flow or specific carrier's account representative.",
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "weight_unit",
          "annotations": [],
          "description": "Type of unit measurement used to calculate gravitational weight",
          "attributes": [],
          "type": "unit_of_measurement",
          "required": true,
          "example": "gram, pound"
        },
        {
          "name": "distance_unit",
          "annotations": [],
          "description": "Type of unit measurement used to calculate dimensional weight",
          "attributes": [],
          "type": "unit_of_measurement",
          "required": true,
          "example": "inch, feet"
        },
        {
          "name": "rates",
          "annotations": [],
          "description": "Line item rows on the rate card. Shows a list of weight thresholds and corresponding costs.",
          "attributes": [],
          "type": "[ratecard_rate_form]",
          "required": true
        }
      ]
    },
    {
      "plural": "ratecard_lane_upserteds",
      "name": "ratecard_lane_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "ratecard_lane",
          "annotations": [],
          "attributes": [],
          "type": "ratecard_lane",
          "required": true
        }
      ]
    },
    {
      "plural": "ratecard_lane_versions",
      "name": "ratecard_lane_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "ratecard_lane",
          "annotations": [],
          "attributes": [],
          "type": "ratecard_lane",
          "required": true
        }
      ]
    },
    {
      "plural": "ratecard_lanes_import_request_data",
      "name": "ratecard_lanes_import_request_data",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "source_url",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "filename",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "ratecard_rates",
      "name": "ratecard_rate",
      "description": "Specific line item in a ratecard lane with information on a weight threshold and corresponding amount to charge",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "Contractual amount for this rate",
          "attributes": [],
          "type": "double",
          "required": true
        },
        {
          "name": "weight",
          "annotations": [],
          "description": "Minimum weight threshold for this rate",
          "attributes": [],
          "type": "double",
          "required": true
        }
      ]
    },
    {
      "plural": "ratecard_rate_forms",
      "name": "ratecard_rate_form",
      "attributes": [],
      "fields": [
        {
          "name": "amount",
          "annotations": [],
          "description": "Contractual amount for this rate",
          "attributes": [],
          "type": "double",
          "required": true
        },
        {
          "name": "weight",
          "annotations": [],
          "description": "Minimum weight threshold for this rate",
          "attributes": [],
          "type": "double",
          "required": true
        }
      ]
    },
    {
      "plural": "ratecard_rate_versions",
      "name": "ratecard_rate_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "ratecard_rate",
          "annotations": [],
          "attributes": [],
          "type": "ratecard_rate",
          "required": true
        }
      ]
    },
    {
      "plural": "ratecard_references",
      "name": "ratecard_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "ratecard_service_summaries",
      "name": "ratecard_service_summary",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "carrier",
          "annotations": [],
          "attributes": [],
          "type": "ratecard_carrier_summary",
          "required": true
        }
      ]
    },
    {
      "plural": "ratecard_upserteds",
      "name": "ratecard_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "ratecard",
          "annotations": [],
          "attributes": [],
          "type": "ratecard",
          "required": true
        }
      ]
    },
    {
      "plural": "ratecard_versions",
      "name": "ratecard_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "ratecard",
          "annotations": [],
          "attributes": [],
          "type": "ratecard",
          "required": true
        }
      ]
    },
    {
      "plural": "ready_to_fulfills",
      "name": "ready_to_fulfill",
      "description": "Sent when an order is assigned to a fulfillment center in whole or in part. All assigned fulfillments for all centers will be included on the message.",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "order_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "order",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The order as submitted",
          "attributes": [],
          "type": "order",
          "required": true
        },
        {
          "name": "fulfillments",
          "annotations": [],
          "description": "Current state of all fulfillments for this order",
          "attributes": [],
          "type": "[fulfillment]",
          "required": false
        },
        {
          "name": "fulfillment_item_allocation_details",
          "annotations": [],
          "description": "Allocations condensed and associated with each included fulfillment",
          "attributes": [],
          "type": "[fulfillment_item_allocation_details]",
          "required": false
        }
      ]
    },
    {
      "plural": "redirect_authorization_detailses",
      "name": "redirect_authorization_details",
      "description": "Represents an online payment that requires the user to redirect to another site before entering their payment information.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "The id of the record containing expanded authorization details for this authorization.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "payment_redirect_url",
          "annotations": [],
          "description": "The URL to which the customer should be redirected to complete payment.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "confirmation_details",
          "annotations": [],
          "description": "Confirmation details received from the redirect response",
          "attributes": [],
          "type": "confirmation_details",
          "required": false
        }
      ]
    },
    {
      "plural": "redirect_authorization_forms",
      "name": "redirect_authorization_form",
      "description": "Executes a redirect-based payment based on the provided payment method.",
      "attributes": [],
      "fields": [
        {
          "name": "method",
          "annotations": [],
          "description": "The name (or brand code) of the redirect-based payment method for which to create an authorization, e.g. 'unionpay'.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "issuer",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The id of the issuing bank, if required by the selected payment method. For payment methods such as iDEAL, the customer must select an issuer before being redirected to provide payment details.",
          "attributes": [],
          "type": "issuer_reference",
          "required": false
        },
        {
          "name": "order_number",
          "annotations": [],
          "description": "Client order number for which to authorize payment.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "The amount to authorize.",
          "attributes": [],
          "type": "decimal",
          "required": true,
          "example": "120.38"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        },
        {
          "name": "redirect_urls",
          "annotations": [],
          "description": "The success and optional failure URLs to which the user will be redirected after completing (or failing to complete) payment.",
          "attributes": [],
          "type": "post_payment_redirect_urls",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "description": "Your unique identifier for this transaction, which if provided is used to implement idempotency. If not provided, we will assign.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "A set of key/value pairs that you can attach to an authorization object",
          "attributes": [],
          "type": "map[string]",
          "required": false
        },
        {
          "name": "ip",
          "annotations": [
            "personal_data"
          ],
          "description": "The IP address of the consumer",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "96.242.151.245"
        }
      ]
    },
    {
      "plural": "refunds",
      "name": "refund",
      "description": "Refunds can be created against either a specific capture or an authorization (in which case we will select 1 or more specific captures against which to execute the refund).",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "authorization",
          "annotations": [],
          "attributes": [],
          "type": "authorization_reference",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "The amount to refund in the currency of the associated capture",
          "attributes": [],
          "type": "decimal",
          "required": true,
          "example": "120.38"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        },
        {
          "name": "requested",
          "annotations": [],
          "description": "The amount/currency of the request to refund.",
          "attributes": [],
          "type": "money",
          "required": false
        },
        {
          "name": "captures",
          "annotations": [],
          "description": "The specific captures and the amounts refunded against each to match the total refund amount.",
          "attributes": [],
          "type": "[refund_capture_summary]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "created_at",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "A set of key/value pairs that you can attach to a refund object",
          "attributes": [],
          "type": "map[string]",
          "required": false
        },
        {
          "default": "succeeded",
          "name": "status",
          "annotations": [],
          "description": "Indicates the status of the refund.",
          "attributes": [],
          "type": "refund_status",
          "required": false
        },
        {
          "name": "base",
          "annotations": [],
          "description": "The amount/currency of the refund in base currency. Added in Summer 2018 and always present since then.",
          "attributes": [],
          "type": "money",
          "required": false
        }
      ]
    },
    {
      "plural": "refund_captures",
      "name": "refund_capture",
      "description": "Refund captures provide the detailed information on the amount refunded against a specific capture",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "refund",
          "annotations": [],
          "attributes": [],
          "type": "refund",
          "required": true
        },
        {
          "name": "capture",
          "annotations": [],
          "attributes": [],
          "type": "capture",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "The amount refunded against this capture, in the currency of the refund",
          "attributes": [],
          "type": "decimal",
          "required": true,
          "example": "120.38"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        },
        {
          "name": "base",
          "annotations": [],
          "attributes": [],
          "type": "money",
          "required": true
        },
        {
          "default": "succeeded",
          "name": "status",
          "annotations": [],
          "description": "Indicates the status of the refund capture.",
          "attributes": [],
          "type": "refund_status",
          "required": false
        }
      ]
    },
    {
      "plural": "refund_capture_summaries",
      "name": "refund_capture_summary",
      "description": "Refund captures provide the detailed information on the amount refunded against a specific capture",
      "attributes": [],
      "fields": [
        {
          "name": "capture",
          "annotations": [],
          "attributes": [],
          "type": "capture",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "The amount refunded against this capture, in the currency of the refund",
          "attributes": [],
          "type": "decimal",
          "required": true,
          "example": "120.38"
        }
      ]
    },
    {
      "plural": "refund_capture_upserted_v2s",
      "name": "refund_capture_upserted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "refund_capture",
          "annotations": [],
          "attributes": [],
          "type": "refund_capture",
          "required": true
        }
      ]
    },
    {
      "plural": "refund_deleted_v2s",
      "name": "refund_deleted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "refund",
          "annotations": [],
          "attributes": [],
          "type": "refund",
          "required": true
        }
      ]
    },
    {
      "plural": "refund_errors",
      "name": "refund_error",
      "attributes": [],
      "fields": [
        {
          "default": "generic_error",
          "name": "code",
          "annotations": [],
          "description": "To maintain compatibility with generic_error",
          "attributes": [],
          "type": "generic_error_code",
          "required": true
        },
        {
          "name": "messages",
          "annotations": [],
          "description": "To maintain compatibility with generic_error",
          "attributes": [],
          "type": "[string]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "decline_code",
          "annotations": [],
          "description": "Contains details related to the reason for which a refund failed.",
          "attributes": [],
          "type": "refund_decline_code",
          "required": true
        }
      ]
    },
    {
      "plural": "refund_forms",
      "name": "refund_form",
      "description": "Refund actually transfers funds. You can refund as many times as you'd like up until the total amount of captured funds has been refunded. Note when creating a refund you can specify either an order authorization id, a capture id, or an order number (or all of them as long as they match).",
      "attributes": [],
      "fields": [
        {
          "name": "authorization_id",
          "annotations": [],
          "description": "The Id of the authorization against which to issue the refund. If specified, we will look at all captures for this authorization, selecting 1 or more captures against which to issue the refund of the requested amount.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "capture_id",
          "annotations": [],
          "description": "The Id of the capture against which to issue the refund. If specified, we will only consider this capture.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "order_number",
          "annotations": [],
          "description": "The order number if specified during authorization. If specified, we will lookup all authorizations made against this order number, and then selecting 1 or more authorizations against which to issue the refund of the requested amount.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "key",
          "annotations": [],
          "description": "Your unique identifier for this transaction, which if provided is used to implement idempotency. If not provided, we will assign.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "The amount to refund, in the currency of the associated capture. Defaults to the value of the capture minus any prior refunds.",
          "attributes": [],
          "type": "decimal",
          "required": false,
          "example": "120.38"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The ISO 4217-3 code for the currency. Required if amount is specified. Case insensitive. Note you will get an error if the currency does not match the related authorization's currency. See https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "CAD"
        },
        {
          "name": "rma_key",
          "annotations": [],
          "description": "The RMA key, if available. If specified, this will update the RMA status as refunded.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "A set of key/value pairs that you can attach to a refund object",
          "attributes": [],
          "type": "map[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "refund_identifiers",
      "name": "refund_identifier",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "refund",
          "annotations": [],
          "attributes": [],
          "type": "refund_reference",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "identifier",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "primary",
          "annotations": [],
          "attributes": [],
          "type": "boolean",
          "required": true
        }
      ]
    },
    {
      "plural": "refund_identifier_deleteds",
      "name": "refund_identifier_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "identifier",
          "annotations": [],
          "attributes": [],
          "type": "refund_identifier",
          "required": true
        }
      ]
    },
    {
      "plural": "refund_identifier_upserteds",
      "name": "refund_identifier_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "identifier",
          "annotations": [],
          "attributes": [],
          "type": "refund_identifier",
          "required": true
        }
      ]
    },
    {
      "plural": "refund_order_summaries",
      "name": "refund_order_summary",
      "description": "For merchant of record authorizations, we provide a summary of refund information primarily to support customer service workflow.",
      "attributes": [],
      "fields": [
        {
          "name": "order_number",
          "annotations": [],
          "description": "Client order number",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        },
        {
          "name": "captured",
          "annotations": [],
          "description": "The total amount of funds captured for this order. If there were multiple captures, this number will include the sum of the amounts captured.",
          "attributes": [],
          "type": "decimal",
          "required": true,
          "example": "120.38"
        },
        {
          "name": "refunded",
          "annotations": [],
          "description": "The total amount of refunds issued for this order. If there were multiple refunds, this number will include the sum of the amounts refunded.",
          "attributes": [],
          "type": "decimal",
          "required": true,
          "example": "20.00"
        },
        {
          "name": "amounts",
          "annotations": [],
          "description": "Suggested amounts to refund based on the most common use cases",
          "attributes": [],
          "type": "refund_order_summary_amounts",
          "required": true
        }
      ]
    },
    {
      "plural": "refund_order_summary_amounts",
      "name": "refund_order_summary_amounts",
      "description": "Detailed examples of amount to refund following common e-commerce use cases.",
      "attributes": [],
      "fields": [
        {
          "name": "balance",
          "annotations": [],
          "description": "The total amount of funds available to refund (sum of all captures minus all prior refunds).",
          "attributes": [],
          "type": "decimal",
          "required": true,
          "example": "110.38"
        },
        {
          "name": "balance_excluding_shipping",
          "annotations": [],
          "description": "The balance minus shipping costs. If there was either no shipping cost or the remaining balance is less than the shipping cost, this field will not be provided.",
          "attributes": [],
          "type": "decimal",
          "required": false,
          "example": "100.38"
        },
        {
          "name": "shipping",
          "annotations": [],
          "description": "The total amount of shipping on the order, if there was a shipping fee. We highlight this value separately to simplify use cases where a full refund minus shipping is used.",
          "attributes": [],
          "type": "decimal",
          "required": false,
          "example": "9.95"
        }
      ]
    },
    {
      "plural": "refund_references",
      "name": "refund_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "refund_upserted_v2s",
      "name": "refund_upserted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "refund",
          "annotations": [],
          "attributes": [],
          "type": "refund",
          "required": true
        }
      ]
    },
    {
      "plural": "refund_versions",
      "name": "refund_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "refund",
          "annotations": [],
          "attributes": [],
          "type": "refund",
          "required": true
        }
      ]
    },
    {
      "plural": "regions",
      "name": "region",
      "description": "A region represents a geographic area of the world. Regions can be countries, continents or other political areas (like the Eurozone). See https://api.flow.io/reference/regions",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "United States of America"
        },
        {
          "name": "countries",
          "annotations": [],
          "description": "A list of the countries as ISO 3166 3 codes in this region",
          "attributes": [],
          "type": "[string]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "currencies",
          "annotations": [],
          "description": "A list of the currencies as ISO 4217 3 codes in this region",
          "attributes": [],
          "type": "[string]",
          "minimum": 0,
          "required": true
        },
        {
          "name": "languages",
          "annotations": [],
          "description": "A list of the languages as ISO 639 2 codes spoken in this region",
          "attributes": [],
          "type": "[string]",
          "minimum": 0,
          "required": true
        },
        {
          "name": "measurement_systems",
          "annotations": [],
          "description": "A list of the measurement systems in use in this region (metric or imperial)",
          "attributes": [],
          "type": "[string]",
          "minimum": 0,
          "required": true
        },
        {
          "name": "timezones",
          "annotations": [],
          "description": "A list of canonical timezone IDs for the region. See http://joda-time.sourceforge.net/timezones.html",
          "attributes": [],
          "type": "[string]",
          "required": true,
          "example": "America/New_York"
        }
      ]
    },
    {
      "plural": "region_references",
      "name": "region_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "region_settings",
      "name": "region_setting",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "region",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "availability_status",
          "required": true
        }
      ]
    },
    {
      "plural": "region_setting_forms",
      "name": "region_setting_form",
      "attributes": [],
      "fields": [
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "availability_status",
          "required": true
        }
      ]
    },
    {
      "plural": "remote_area_ratecard_fees",
      "name": "remote_area_ratecard_fee",
      "attributes": [],
      "fields": [
        {
          "name": "amount",
          "annotations": [],
          "attributes": [],
          "type": "money",
          "required": true
        }
      ]
    },
    {
      "plural": "remote_area_service_fees",
      "name": "remote_area_service_fee",
      "attributes": [],
      "fields": [
        {
          "name": "amount",
          "annotations": [],
          "attributes": [],
          "type": "money",
          "required": true
        }
      ]
    },
    {
      "plural": "repeat_dailies",
      "name": "repeat_daily",
      "attributes": [],
      "fields": [
        {
          "name": "interval",
          "annotations": [],
          "attributes": [],
          "type": "integer",
          "minimum": 1,
          "required": true
        }
      ]
    },
    {
      "plural": "repeat_hourlies",
      "name": "repeat_hourly",
      "attributes": [],
      "fields": [
        {
          "name": "interval",
          "annotations": [],
          "attributes": [],
          "type": "integer",
          "minimum": 1,
          "required": true
        }
      ]
    },
    {
      "plural": "repeat_monthlies",
      "name": "repeat_monthly",
      "description": "Monthly on the {day} of each {interval} month. Note if you specify a day > 28 and the month does not have that day, the repeat schedule is assumed to be the last day of the month. Common examples are: Monthly on the 1st, monthly on the 15th and 31st, every 3 months on the 1st, etc.",
      "attributes": [],
      "fields": [
        {
          "name": "interval",
          "annotations": [],
          "attributes": [],
          "type": "integer",
          "minimum": 1,
          "required": true
        },
        {
          "name": "days",
          "annotations": [],
          "description": "A list of the days of the month on which to trigger the schedule",
          "attributes": [],
          "type": "[integer]",
          "minimum": 1,
          "required": true
        }
      ]
    },
    {
      "plural": "repeat_weeklies",
      "name": "repeat_weekly",
      "attributes": [],
      "fields": [
        {
          "name": "interval",
          "annotations": [],
          "attributes": [],
          "type": "integer",
          "minimum": 1,
          "required": true
        },
        {
          "name": "days_of_week",
          "annotations": [],
          "attributes": [],
          "type": "[day_of_week]",
          "minimum": 1,
          "required": true
        }
      ]
    },
    {
      "plural": "reservations",
      "name": "reservation",
      "description": "Inventory reservation for a set of items in organization that potentially expires at specified date/time",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "order",
          "annotations": [],
          "attributes": [],
          "type": "reservation_order_reference",
          "required": false
        },
        {
          "name": "items",
          "annotations": [],
          "attributes": [],
          "type": "[reservation_item]",
          "required": true
        },
        {
          "name": "reserved_until",
          "annotations": [],
          "description": "Records the length of this reservation. When omitted, inventory is to be treated as first-come, first-served.",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        }
      ]
    },
    {
      "plural": "reservation_forms",
      "name": "reservation_form",
      "attributes": [],
      "fields": [
        {
          "name": "order_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "items",
          "annotations": [],
          "attributes": [],
          "type": "[reservation_item_form]",
          "required": true
        }
      ]
    },
    {
      "plural": "reservation_items",
      "name": "reservation_item",
      "attributes": [],
      "fields": [
        {
          "name": "item",
          "annotations": [],
          "attributes": [],
          "type": "reservation_item_reference",
          "required": true
        },
        {
          "name": "quantity",
          "annotations": [],
          "description": "Number of reserved items.",
          "attributes": [],
          "type": "long",
          "minimum": 1,
          "required": true
        }
      ]
    },
    {
      "plural": "reservation_item_forms",
      "name": "reservation_item_form",
      "attributes": [],
      "fields": [
        {
          "name": "item_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "quantity",
          "annotations": [],
          "description": "Number of items to reserve.",
          "attributes": [],
          "type": "long",
          "minimum": 1,
          "required": true
        }
      ]
    },
    {
      "plural": "reservation_item_references",
      "name": "reservation_item_reference",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "reservation_order_references",
      "name": "reservation_order_reference",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "returns",
      "name": "return",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Human-readable string starting with F12.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "items",
          "annotations": [],
          "attributes": [],
          "type": "[return_line_item]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "labels",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "[shipping_label]",
          "required": true
        }
      ]
    },
    {
      "plural": "return_deleteds",
      "name": "return_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "return_forms",
      "name": "return_form",
      "attributes": [],
      "fields": [
        {
          "name": "items",
          "annotations": [],
          "attributes": [],
          "type": "[return_line_item]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "tier_id",
          "annotations": [],
          "description": "Return shipping tier to use for the return shipment. If not provided, will pick lowest cost by default.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "order_number",
          "annotations": [],
          "description": "Order associated with the return.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "service",
          "annotations": [],
          "description": "Service level to use for return package",
          "attributes": [],
          "type": "string",
          "deprecation": {
            "description": "Please use return shipping tiers."
          },
          "required": false
        },
        {
          "name": "destination",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Destination of the return. If not provided, will default to calculated destination based on original location of the product and carrier service level.",
          "attributes": [],
          "type": "shipping_address",
          "required": false
        },
        {
          "name": "key",
          "annotations": [],
          "description": "Organization's internal identifier for this return. If one is not available or provided, Flow will generate.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "origin",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Origin address of the return. If not provided, will default to destination address of the original order.",
          "attributes": [],
          "type": "shipping_address",
          "required": false
        },
        {
          "name": "center_key",
          "annotations": [],
          "description": "Return center to use for the return shipment. If not provided, will pick the default center.",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "return_item_references",
      "name": "return_item_reference",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "return_line_items",
      "name": "return_line_item",
      "attributes": [],
      "fields": [
        {
          "name": "item_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "order_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "quantity",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "minimum": 1,
          "required": true
        },
        {
          "name": "reason",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "return_reason",
          "required": false
        },
        {
          "name": "notes",
          "annotations": [
            "personal_data"
          ],
          "description": "Optional notes to provide explanation or context for the respective return reason.",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "return_order_references",
      "name": "return_order_reference",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "return_package_ratecard_fees",
      "name": "return_package_ratecard_fee",
      "attributes": [],
      "fields": [
        {
          "name": "amount",
          "annotations": [],
          "attributes": [],
          "type": "decimal",
          "required": true
        }
      ]
    },
    {
      "plural": "return_reasons",
      "name": "return_reason",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "return_reason_forms",
      "name": "return_reason_form",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "return_reason_put_forms",
      "name": "return_reason_put_form",
      "attributes": [],
      "fields": [
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "return_upserteds",
      "name": "return_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "destination",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "shipping_address",
          "required": true
        },
        {
          "name": "items",
          "annotations": [],
          "attributes": [],
          "type": "[return_line_item]",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "labels",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "[shipping_label]",
          "required": true
        },
        {
          "name": "service",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "origin",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "shipping_address",
          "required": true
        }
      ]
    },
    {
      "plural": "return_versions",
      "name": "return_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "return",
          "annotations": [],
          "attributes": [],
          "type": "return",
          "required": true
        }
      ]
    },
    {
      "plural": "reversals",
      "name": "reversal",
      "description": "A reversal is used to clear an authorization (full or partial).",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "authorization",
          "annotations": [],
          "description": "The authorization that this reversal undoes",
          "attributes": [],
          "type": "authorization_reference",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "reversal_status",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "The amount reversed",
          "attributes": [],
          "type": "decimal",
          "required": true,
          "example": "120.38"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        },
        {
          "name": "requested",
          "annotations": [],
          "description": "The requested amount/currency of the capture when created. We record this value as it will be converted to the currency of the authorization automatically if it does not match.",
          "attributes": [],
          "type": "money",
          "required": true
        },
        {
          "name": "created_at",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "A set of key/value pairs that you can attach to a reversal object",
          "attributes": [],
          "type": "map[string]",
          "required": true
        },
        {
          "name": "base",
          "annotations": [],
          "description": "The amount/currency of the reversal in base currency. Added in Summer 2018 and always present since then.",
          "attributes": [],
          "type": "money",
          "required": false
        }
      ]
    },
    {
      "plural": "reversal_deleteds",
      "name": "reversal_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "reversal",
          "annotations": [],
          "attributes": [],
          "type": "reversal",
          "required": true
        }
      ]
    },
    {
      "plural": "reversal_errors",
      "name": "reversal_error",
      "description": "Details for why a reversal could not be created",
      "attributes": [],
      "fields": [
        {
          "default": "reversal_error",
          "name": "code",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "messages",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "codes",
          "annotations": [],
          "attributes": [],
          "type": "[reversal_error_code]",
          "minimum": 1,
          "required": true
        }
      ]
    },
    {
      "plural": "reversal_forms",
      "name": "reversal_form",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "description": "Your unique identifier for this transaction, which if provided is used to implement idempotency. If not provided, we will assign.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "authorization_id",
          "annotations": [],
          "description": "The ID of the authorization to reverse.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "The amount to reverse. If not specified, reverse the full or remaining amount.",
          "attributes": [],
          "type": "decimal",
          "required": false,
          "example": "120.38"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The ISO 4217-3 code for the currency to reverse. Required if amount is provided. Case insensitive. See https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "CAD"
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "A set of key/value pairs that you can attach to a reversal object",
          "attributes": [],
          "type": "map[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "reversal_put_forms",
      "name": "reversal_put_form",
      "attributes": [],
      "fields": [
        {
          "name": "authorization_id",
          "annotations": [],
          "description": "The ID of the authorization to reverse.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "The amount to reverse. If not specified, reverse the full or remaining amount.",
          "attributes": [],
          "type": "decimal",
          "required": false,
          "example": "120.38"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The ISO 4217-3 code for the currency to reverse. Required if amount is provided. Case insensitive. See https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "CAD"
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "A set of key/value pairs that you can attach to a reversal object",
          "attributes": [],
          "type": "map[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "reversal_upserteds",
      "name": "reversal_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "reversal",
          "annotations": [],
          "attributes": [],
          "type": "reversal",
          "required": true
        }
      ]
    },
    {
      "plural": "reversal_versions",
      "name": "reversal_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "reversal",
          "annotations": [],
          "attributes": [],
          "type": "reversal",
          "required": true
        }
      ]
    },
    {
      "plural": "roundings",
      "name": "rounding",
      "attributes": [],
      "fields": [
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "rounding_type",
          "required": true
        },
        {
          "name": "method",
          "annotations": [],
          "attributes": [],
          "type": "rounding_method",
          "required": true
        },
        {
          "name": "value",
          "annotations": [],
          "attributes": [],
          "type": "decimal",
          "required": true
        }
      ]
    },
    {
      "plural": "route_audits",
      "name": "route_audit",
      "attributes": [],
      "fields": [
        {
          "name": "method",
          "annotations": [],
          "attributes": [],
          "type": "permitted_http_method",
          "required": true
        },
        {
          "name": "path",
          "annotations": [],
          "description": "An API Builder path, starting with / and excluding query strings.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "authentication_techniques",
          "annotations": [],
          "attributes": [],
          "type": "[authentication_technique]",
          "required": true
        },
        {
          "name": "roles",
          "annotations": [],
          "attributes": [],
          "type": "[flow_role]",
          "required": true
        }
      ]
    },
    {
      "plural": "rule_deleteds",
      "name": "rule_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "rule_upserteds",
      "name": "rule_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "rule",
          "annotations": [],
          "attributes": [],
          "type": "inventory_rule",
          "required": true
        }
      ]
    },
    {
      "plural": "schedules",
      "name": "schedule",
      "description": "Represents operating calendar and holidays of a center",
      "attributes": [],
      "fields": [
        {
          "name": "calendar",
          "annotations": [],
          "description": "Operating calendar used by origin center for shipment, if available. If not provided, assume they are never open.",
          "attributes": [],
          "type": "calendar",
          "required": false,
          "example": "Weekdays, 7 days, etc."
        },
        {
          "name": "holiday",
          "annotations": [],
          "description": "Standard holiday set to respect for this schedule",
          "attributes": [],
          "type": "holiday_calendar",
          "required": true,
          "example": "US bank holidays"
        },
        {
          "name": "exception",
          "annotations": [],
          "description": "Holiday calendar used by origin center for shipment, if available.",
          "attributes": [],
          "type": "[exception]",
          "required": true,
          "example": "Memorial Day, Independence Day, etc."
        },
        {
          "name": "cutoff",
          "annotations": [],
          "description": "Daily cutoff time for shipment fulfillment at origin center, if available. 24-hour time",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "16:45"
        },
        {
          "name": "min_lead_time",
          "annotations": [],
          "description": "Optional number of days a center takes to make a shipment",
          "attributes": [],
          "type": "long",
          "required": false
        },
        {
          "name": "max_lead_time",
          "annotations": [],
          "description": "Optional number of days a center takes to make a shipment",
          "attributes": [],
          "type": "long",
          "required": false
        }
      ]
    },
    {
      "plural": "scheduled_exports",
      "name": "scheduled_export",
      "description": "Allows a user to create a scheduled export that will be delivered on a schedule (currently only support once / day at a set time)",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "user",
          "annotations": [],
          "attributes": [],
          "type": "user_reference",
          "required": true
        },
        {
          "name": "organization_q",
          "annotations": [],
          "description": "Search query to select the organizations for which to export data",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "'*' or 'environment:production' or 'environment:production id:demo -id:demo2'"
        },
        {
          "name": "hour",
          "annotations": [],
          "maximum": 23,
          "attributes": [],
          "type": "integer",
          "minimum": 0,
          "required": true,
          "example": "14"
        },
        {
          "name": "minute",
          "annotations": [],
          "maximum": 59,
          "attributes": [],
          "type": "integer",
          "minimum": 0,
          "required": true,
          "example": "15"
        },
        {
          "name": "timezone",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "EST"
        },
        {
          "name": "types",
          "annotations": [],
          "description": "All the export types included in this scheduled export",
          "attributes": [],
          "type": "[export_type]",
          "required": true
        },
        {
          "name": "last_sent_at",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        }
      ]
    },
    {
      "plural": "scheduled_export_forms",
      "name": "scheduled_export_form",
      "attributes": [],
      "fields": [
        {
          "name": "user_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "organization_q",
          "annotations": [],
          "description": "Search query to select the organizations for which to export data",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "'*' or 'environment:production' or 'environment:production id:demo -id:demo2'"
        },
        {
          "name": "hour",
          "annotations": [],
          "maximum": 23,
          "attributes": [],
          "type": "integer",
          "minimum": 0,
          "required": true,
          "example": "14"
        },
        {
          "name": "minute",
          "annotations": [],
          "maximum": 59,
          "attributes": [],
          "type": "integer",
          "minimum": 0,
          "required": true,
          "example": "15"
        },
        {
          "name": "timezone",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "EST"
        },
        {
          "name": "types",
          "annotations": [],
          "description": "All the export types included in this scheduled export",
          "attributes": [],
          "type": "[export_type]",
          "required": true
        }
      ]
    },
    {
      "plural": "scheduled_pickups",
      "name": "scheduled_pickup",
      "attributes": [],
      "fields": [
        {
          "name": "day_of_week",
          "annotations": [],
          "description": "Day of week when a pickup might occur",
          "attributes": [],
          "type": "day_of_week",
          "required": true
        },
        {
          "name": "hour_of_day",
          "annotations": [],
          "description": "Local time hour of the day in military format. Valid values: 00-23",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "18"
        },
        {
          "name": "minute_of_hour",
          "annotations": [],
          "description": "Minute within the hour. Valid values: 00-59",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "30"
        }
      ]
    },
    {
      "plural": "serials",
      "name": "serial",
      "description": "A unique identifier assigned to an individual item.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "item_number",
          "annotations": [],
          "description": "The item number associated to the number.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "item_price",
          "annotations": [],
          "attributes": [],
          "type": "price",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "serial_status",
          "required": true
        },
        {
          "name": "center",
          "annotations": [],
          "description": "Indicates the Flow center where the item exists.",
          "attributes": [],
          "type": "center_reference",
          "required": true
        },
        {
          "default": "{}",
          "name": "attributes",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "required": true
        }
      ]
    },
    {
      "plural": "serial_deleteds",
      "name": "serial_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "serial_forms",
      "name": "serial_form",
      "description": "A unique identifier assigned to an individual item.",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "item_number",
          "annotations": [],
          "description": "The item number associated to the number.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "item_price",
          "annotations": [],
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "item_currency",
          "annotations": [],
          "description": "ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "usd"
        },
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "serial_status",
          "required": true
        },
        {
          "name": "center_key",
          "annotations": [],
          "description": "Indicates the Flow center where the item exists. If not provided, it is assumed there is a single center for the organization that will be chosen.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "attributes",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "serial_upserteds",
      "name": "serial_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "serial",
          "annotations": [],
          "attributes": [],
          "type": "serial",
          "required": true
        }
      ]
    },
    {
      "plural": "serial_versions",
      "name": "serial_version",
      "description": "Retrieve journaled history of a serial",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "serial",
          "annotations": [],
          "attributes": [],
          "type": "serial",
          "required": true
        }
      ]
    },
    {
      "plural": "service_references",
      "name": "service_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "service_summaries",
      "name": "service_summary",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "ups-ground"
        },
        {
          "name": "carrier",
          "annotations": [],
          "attributes": [],
          "type": "carrier_reference",
          "required": true,
          "example": "ups"
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "UPS Ground"
        },
        {
          "name": "center_code",
          "annotations": [],
          "description": "Optional identifier for the service level at the organization's center. This code can be used to communicate service level to the center/3PL.",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "UPSGND"
        }
      ]
    },
    {
      "plural": "session_authorization_forms",
      "name": "session_authorization_form",
      "description": "Authorize a request using a session id",
      "attributes": [],
      "fields": [
        {
          "name": "session",
          "annotations": [],
          "description": "The session Id",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "session_currency_formats",
      "name": "session_currency_format",
      "attributes": [],
      "fields": [
        {
          "name": "symbol",
          "annotations": [],
          "attributes": [],
          "type": "currency_symbol_format",
          "required": true
        },
        {
          "name": "label_formatters",
          "annotations": [],
          "attributes": [],
          "type": "[currency_label_formatter]",
          "required": true
        }
      ]
    },
    {
      "plural": "session_experiments",
      "name": "session_experiment",
      "description": "Experiment for A/B testing",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "variant",
          "annotations": [],
          "attributes": [],
          "type": "session_experiment_variant",
          "required": false
        }
      ]
    },
    {
      "plural": "session_experiment_forms",
      "name": "session_experiment_form",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "variant",
          "annotations": [],
          "attributes": [],
          "type": "session_experiment_variant_form",
          "required": false
        }
      ]
    },
    {
      "plural": "session_experiment_variants",
      "name": "session_experiment_variant",
      "description": "Experiment variant. Control or variant",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "session_experiment_variant_forms",
      "name": "session_experiment_variant_form",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "session_expiration_configs",
      "name": "session_expiration_config",
      "description": "Configures session expiration time. We default to 30 minutes to follow Google Analytics",
      "attributes": [],
      "fields": [
        {
          "default": "minute",
          "name": "unit",
          "annotations": [],
          "attributes": [],
          "type": "unit_of_time",
          "required": true
        },
        {
          "default": "30",
          "name": "value",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "minimum": 0,
          "required": true
        }
      ]
    },
    {
      "plural": "session_forms",
      "name": "session_form",
      "attributes": [],
      "fields": [
        {
          "name": "ip",
          "annotations": [
            "personal_data"
          ],
          "description": "If specified, we will geolocate the user by this IP address, and if successful, select the experience matching the country of the IP address.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "experience",
          "annotations": [],
          "description": "If specified, we will render the items in the context of the experience with this key.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "country",
          "annotations": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "CAN"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "Iso 4217 3 currency code as defined in https://api.flow.io/reference/currencies If specified, translate the pricing to this currency. Translation occurs using the current spot rate for this currency from the base currency in the experience.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "language",
          "annotations": [],
          "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages If specified, translate content to this language (where available)",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "en"
        },
        {
          "name": "locale",
          "annotations": [],
          "description": "Locale ID as defined in https://api.flow.io/reference/locales",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "en-US"
        },
        {
          "name": "attributes",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "required": false
        },
        {
          "name": "experiment",
          "annotations": [],
          "attributes": [],
          "type": "session_experiment_form",
          "required": false
        }
      ]
    },
    {
      "plural": "session_formats",
      "name": "session_format",
      "attributes": [],
      "fields": [
        {
          "name": "currency",
          "annotations": [],
          "attributes": [],
          "type": "session_currency_format",
          "required": true
        }
      ]
    },
    {
      "plural": "session_geos",
      "name": "session_geo",
      "description": "The geolocated information for this session",
      "attributes": [],
      "fields": [
        {
          "name": "country",
          "annotations": [],
          "attributes": [],
          "type": "country",
          "required": true
        },
        {
          "name": "currency",
          "annotations": [],
          "attributes": [],
          "type": "currency",
          "required": true
        },
        {
          "name": "language",
          "annotations": [],
          "attributes": [],
          "type": "language",
          "required": true
        },
        {
          "name": "locale",
          "annotations": [],
          "attributes": [],
          "type": "locale",
          "required": true
        }
      ]
    },
    {
      "plural": "session_put_forms",
      "name": "session_put_form",
      "attributes": [],
      "fields": [
        {
          "name": "ip",
          "annotations": [
            "personal_data"
          ],
          "description": "If specified, we will geolocate the user by this IP address, and if successful, select the experience matching the country of the IP address.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "experience",
          "annotations": [],
          "description": "If specified, we will render the items in the context of the experience with this key.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "country",
          "annotations": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "CAN"
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "Iso 4217 3 currency code as defined in https://api.flow.io/reference/currencies If specified, translate the pricing to this currency. Translation occurs using the current spot rate for this currency from the base currency in the experience.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "language",
          "annotations": [],
          "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages If specified, translate content to this language (where available)",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "en"
        },
        {
          "name": "locale",
          "annotations": [],
          "description": "Locale ID as defined in https://api.flow.io/reference/locales",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "en-US"
        },
        {
          "name": "attributes",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "required": false
        },
        {
          "name": "experiment",
          "annotations": [],
          "attributes": [],
          "type": "session_experiment_form",
          "required": false
        }
      ]
    },
    {
      "plural": "session_references",
      "name": "session_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "session_visits",
      "name": "session_visit",
      "description": "A session visit expires after a configurable period of inactivity (e.g. 30 minutes).",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "expires_at",
          "annotations": [],
          "description": "The date / time on which this visit expires. The default session duration may vary by organization.",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        }
      ]
    },
    {
      "plural": "session_visitors",
      "name": "session_visitor",
      "description": "A session visitor is a unique identifier for our best guess as to who the individual user is interacting with Flow.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "shipment_windows",
      "name": "shipment_window",
      "attributes": [],
      "fields": [
        {
          "name": "from",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "to",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        }
      ]
    },
    {
      "plural": "shipping_addresses",
      "name": "shipping_address",
      "attributes": [],
      "fields": [
        {
          "name": "contact",
          "annotations": [
            "personal_data"
          ],
          "description": "Contact information of entity at the address",
          "attributes": [],
          "type": "contact",
          "required": true
        },
        {
          "name": "location",
          "annotations": [],
          "description": "Attributes of the physical location",
          "attributes": [],
          "type": "address",
          "required": true
        },
        {
          "name": "center_key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "deprecation": {
            "description": "This field is deprecated. Please use the 'center_reference' field"
          },
          "required": false
        },
        {
          "name": "center_reference",
          "annotations": [],
          "description": "If this address corresponds to a center this is information about the center",
          "attributes": [],
          "type": "center_reference",
          "required": false
        },
        {
          "name": "service",
          "annotations": [],
          "description": "Carrier service ID going to intermediate destination in `send_to`",
          "attributes": [],
          "type": "service_summary",
          "required": false
        }
      ]
    },
    {
      "plural": "shipping_configurations",
      "name": "shipping_configuration",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "shipping_configuration_type",
          "required": true
        },
        {
          "name": "shipping_lanes",
          "annotations": [],
          "attributes": [],
          "type": "[shipping_lane]",
          "required": true
        }
      ]
    },
    {
      "plural": "shipping_configuration_copies",
      "name": "shipping_configuration_copy",
      "attributes": [],
      "fields": [
        {
          "name": "original",
          "annotations": [],
          "description": "The shipping configuration being copied",
          "attributes": [],
          "type": "shipping_configuration_reference",
          "required": true
        },
        {
          "name": "new",
          "annotations": [],
          "description": "The new shipping configuration",
          "attributes": [],
          "type": "shipping_configuration_reference",
          "required": true
        }
      ]
    },
    {
      "plural": "shipping_configuration_copy_forms",
      "name": "shipping_configuration_copy_form",
      "attributes": [],
      "fields": [
        {
          "name": "name",
          "annotations": [],
          "description": "The name of the shipping configuration to be added",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "shipping_configuration_deleteds",
      "name": "shipping_configuration_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "shipping_configuration_forms",
      "name": "shipping_configuration_form",
      "attributes": [],
      "fields": [
        {
          "name": "name",
          "annotations": [],
          "description": "The name of the shipping configuration to be added",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "shipping_configuration_item_availabilities",
      "name": "shipping_configuration_item_availability",
      "description": "Denormalized availability status of an item in a shipping configuration for a destination region",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "item",
          "annotations": [],
          "attributes": [],
          "type": "item_reference",
          "required": true
        },
        {
          "name": "shipping_configuration",
          "annotations": [],
          "attributes": [],
          "type": "shipping_configuration_summary",
          "required": true
        },
        {
          "name": "availabilities",
          "annotations": [],
          "attributes": [],
          "type": "[country_availability]",
          "required": true
        }
      ]
    },
    {
      "plural": "shipping_configuration_item_availability_deleteds",
      "name": "shipping_configuration_item_availability_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "shipping_configuration_item_availability",
          "annotations": [],
          "attributes": [],
          "type": "shipping_configuration_item_availability",
          "required": true
        }
      ]
    },
    {
      "plural": "shipping_configuration_item_availability_upserteds",
      "name": "shipping_configuration_item_availability_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "shipping_configuration_item_availability",
          "annotations": [],
          "attributes": [],
          "type": "shipping_configuration_item_availability",
          "required": true
        }
      ]
    },
    {
      "plural": "shipping_configuration_item_shipping_pricings",
      "name": "shipping_configuration_item_shipping_pricing",
      "description": "Denormalized shipping pricing available for a customer of an item in a shipping configuration for a destination region.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "item",
          "annotations": [],
          "attributes": [],
          "type": "item_reference",
          "required": true
        },
        {
          "name": "shipping_configuration",
          "annotations": [],
          "attributes": [],
          "type": "shipping_configuration_summary",
          "required": true
        },
        {
          "name": "country_shipping_pricings",
          "annotations": [],
          "attributes": [],
          "type": "[country_shipping_pricing]",
          "required": true
        }
      ]
    },
    {
      "plural": "shipping_configuration_item_shipping_pricing_deleteds",
      "name": "shipping_configuration_item_shipping_pricing_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "shipping_configuration_item_shipping_pricing",
          "annotations": [],
          "attributes": [],
          "type": "shipping_configuration_item_shipping_pricing",
          "required": true
        }
      ]
    },
    {
      "plural": "shipping_configuration_item_shipping_pricing_upserteds",
      "name": "shipping_configuration_item_shipping_pricing_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "shipping_configuration_item_shipping_pricing",
          "annotations": [],
          "attributes": [],
          "type": "shipping_configuration_item_shipping_pricing",
          "required": true
        }
      ]
    },
    {
      "plural": "shipping_configuration_references",
      "name": "shipping_configuration_reference",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "shipping_configuration_summaries",
      "name": "shipping_configuration_summary",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "shipping_configuration_type",
          "required": true
        }
      ]
    },
    {
      "plural": "shipping_configuration_upserteds",
      "name": "shipping_configuration_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "shipping_configuration",
          "annotations": [],
          "attributes": [],
          "type": "shipping_configuration",
          "required": true
        }
      ]
    },
    {
      "plural": "shipping_configuration_versions",
      "name": "shipping_configuration_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "shipping_configuration",
          "annotations": [],
          "attributes": [],
          "type": "shipping_configuration",
          "required": true
        }
      ]
    },
    {
      "plural": "shipping_labels",
      "name": "shipping_label",
      "description": "Represents information about a carrier-generated shipping label used by a shipper to transport a package from a given origin to destination",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "default": "{}",
          "name": "attributes",
          "annotations": [],
          "description": "Reference information included with the label, if carrier provides support for reference information.",
          "attributes": [],
          "type": "map[string]",
          "required": true
        },
        {
          "name": "carrier_tracking_number",
          "annotations": [],
          "description": "Carrier-issued or generated tracking number of the first carrier taking hold of the package",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "carrier_tracking_number_url",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "cost",
          "annotations": [],
          "description": "Estimated shipping cost to be charged to the merchant based on available ratecard with fulfilling carrier",
          "attributes": [],
          "type": "price",
          "required": true
        },
        {
          "name": "destination",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Destination contact information and structured address",
          "attributes": [],
          "type": "shipping_address",
          "required": true
        },
        {
          "name": "flow_tracking_number",
          "annotations": [],
          "description": "Flow-generated tracking number. 13 digit tracking number that begins with F70.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "flow_tracking_number_url",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "origin",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Origin contact information and structured address",
          "attributes": [],
          "type": "shipping_address",
          "required": true
        },
        {
          "name": "service",
          "annotations": [],
          "description": "Carrier service level used for generation and shipment of this label",
          "attributes": [],
          "type": "service_summary",
          "required": true,
          "example": "ups-ground, dhl-express-worldwide"
        },
        {
          "name": "window",
          "annotations": [],
          "description": "Estimated date range until delivery",
          "attributes": [],
          "type": "datetime_range",
          "required": true
        },
        {
          "name": "label",
          "annotations": [],
          "description": "Contains all the output documents for the shipping label",
          "attributes": [],
          "type": "shipping_label_document",
          "required": false
        },
        {
          "name": "invoice",
          "annotations": [],
          "description": "Contains all the output documents for the commercial invoice",
          "attributes": [],
          "type": "shipping_label_document",
          "required": false
        },
        {
          "name": "return",
          "annotations": [],
          "description": "Contains all the output documents for return cover sheets",
          "attributes": [],
          "type": "shipping_label_document",
          "required": false
        },
        {
          "name": "order",
          "annotations": [],
          "description": "Order number/key of the client organization. This will allow Flow to tie and track a label to a submitted order, if applicable.",
          "attributes": [],
          "type": "label_order_summary",
          "required": false
        },
        {
          "name": "package",
          "annotations": [],
          "description": "Package to be shipped, including dimensions and items included",
          "attributes": [],
          "type": "shipping_label_package",
          "required": false
        },
        {
          "name": "order_identifier",
          "annotations": [],
          "description": "The order identifier this label is associated with. Will be blank if not specified when a label was created.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "fulfillment_key",
          "annotations": [],
          "description": "The key of a fulfillment this label is associated with. Will be blank if not specified when a label was created.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "shipment_recipient",
          "annotations": [],
          "description": "Tells us who the recipient of the package is. This will determine information passed on to carriers to make sure the correct label and accounts are used",
          "attributes": [],
          "type": "shipment_recipient",
          "required": true
        }
      ]
    },
    {
      "plural": "shipping_label_documents",
      "name": "shipping_label_document",
      "description": "Output data or downloadable links for shipping label documents such as labels or commercial invoices",
      "attributes": [],
      "fields": [
        {
          "name": "zpl",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Base64 encoded ZPL2-formatted data of the shipping label",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "pdf",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Pre-signed URL containing PDF copy of the shipping label. This is generated asynchronously and may not be immediately available.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "png",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Pre-signed URL containing PNG copy of the shipping label. This is generated asynchronously and may not be immediately available.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "html",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Base64 encoded ZPL2-formatted HTML data for use with Return cover sheets",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "default": "true",
          "name": "required",
          "annotations": [],
          "description": "Indicates whether this document required to be printed by the center transfering the shipment to the carrier",
          "attributes": [],
          "type": "boolean",
          "required": true
        }
      ]
    },
    {
      "plural": "shipping_label_packages",
      "name": "shipping_label_package",
      "description": "Describes a package to be shipped, including dimensions and items included",
      "attributes": [],
      "fields": [
        {
          "name": "dimensions",
          "annotations": [],
          "description": "Packaging dimensions for the shipment using the requested shipping label",
          "attributes": [],
          "type": "dimension",
          "required": true
        },
        {
          "name": "items",
          "annotations": [],
          "description": "List of items and quantities going into this shipment",
          "attributes": [],
          "type": "[line_item_form]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "reference_number",
          "annotations": [],
          "description": "A unique identifiers for a package, generated by a fulfillment partner. Where possible, this reference will be included on any labels printed. Not all carriers support printing a package reference.",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "shipping_label_summaries",
      "name": "shipping_label_summary",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "flow_tracking_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "carrier_tracking_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "shipping_label_versions",
      "name": "shipping_label_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "shipping_label",
          "annotations": [],
          "attributes": [],
          "type": "shipping_label",
          "required": true
        }
      ]
    },
    {
      "plural": "shipping_lanes",
      "name": "shipping_lane",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "shipping_configuration",
          "annotations": [],
          "description": "The shipping configuration reference this lane belongs to",
          "attributes": [],
          "type": "shipping_configuration_reference",
          "required": true
        },
        {
          "name": "region",
          "annotations": [],
          "description": "The destination region for this shipping lane",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "centers",
          "annotations": [],
          "description": "The origin centers this lane can ship from",
          "attributes": [],
          "type": "[expandable_center]",
          "required": true
        },
        {
          "name": "tiers",
          "annotations": [],
          "attributes": [],
          "type": "[tier]",
          "required": true
        },
        {
          "name": "query",
          "annotations": [],
          "description": "Query used to retrieve centers",
          "attributes": [],
          "type": "query",
          "required": true
        },
        {
          "default": "oldest",
          "name": "strategy",
          "annotations": [],
          "description": "Specifies strategy for picking center that will fulfill deliveries for the shipping lane when multiple centers are available as origins and are capable of shipping to the destination",
          "attributes": [],
          "type": "lane_strategy",
          "required": true
        },
        {
          "name": "direction",
          "annotations": [],
          "attributes": [],
          "type": "lane_direction",
          "required": false
        },
        {
          "name": "preference",
          "annotations": [],
          "description": "Strategy to use for preselecting a delivery option corresponding to a shipping tier in the lane",
          "attributes": [],
          "type": "lane_preselect_preference",
          "required": false
        }
      ]
    },
    {
      "plural": "shipping_lane_default_tiers",
      "name": "shipping_lane_default_tier",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "tier",
          "annotations": [],
          "attributes": [],
          "type": "tier_reference",
          "required": true
        }
      ]
    },
    {
      "plural": "shipping_lane_default_tier_forms",
      "name": "shipping_lane_default_tier_form",
      "attributes": [],
      "fields": [
        {
          "name": "tier_id",
          "annotations": [],
          "description": "Tier to make the default for the shipping lane",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "shipping_lane_deleteds",
      "name": "shipping_lane_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "shipping_lane",
          "annotations": [],
          "attributes": [],
          "type": "shipping_lane",
          "required": true
        }
      ]
    },
    {
      "plural": "shipping_lane_forms",
      "name": "shipping_lane_form",
      "attributes": [],
      "fields": [
        {
          "name": "from",
          "annotations": [],
          "description": "The query used to select the origin centers for this shipping lane",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "to",
          "annotations": [],
          "description": "The destination region for this shipping lane",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "strategy",
          "annotations": [],
          "description": "Specifies strategy for picking center that will fulfill deliveries for the shipping lane when multiple centers are available as origins and are capable of shipping to the destination",
          "attributes": [],
          "type": "lane_strategy",
          "required": false
        },
        {
          "name": "direction",
          "annotations": [],
          "description": "Specifies the direction for this shipping lane",
          "attributes": [],
          "type": "lane_direction",
          "required": false
        },
        {
          "name": "preference",
          "annotations": [],
          "description": "Strategy to use for preselecting a delivery option corresponding to a shipping tier in the lane",
          "attributes": [],
          "type": "lane_preselect_preference",
          "required": false
        }
      ]
    },
    {
      "plural": "shipping_lane_summaries",
      "name": "shipping_lane_summary",
      "attributes": [],
      "fields": [
        {
          "name": "shipping_lane_id",
          "annotations": [],
          "description": "This field corresponding the shipping lane id",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "region",
          "annotations": [],
          "description": "The destination region for this shipping lane",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "centers",
          "annotations": [],
          "description": "Centers associated with this shopping lane",
          "attributes": [],
          "type": "[expandable_center]",
          "required": true
        }
      ]
    },
    {
      "plural": "shipping_lane_upserteds",
      "name": "shipping_lane_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "shipping_lane",
          "annotations": [],
          "attributes": [],
          "type": "shipping_lane",
          "required": true
        }
      ]
    },
    {
      "plural": "shipping_lane_versions",
      "name": "shipping_lane_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "shipping_lane",
          "annotations": [],
          "attributes": [],
          "type": "shipping_lane",
          "required": true
        }
      ]
    },
    {
      "plural": "shipping_notifications",
      "name": "shipping_notification",
      "description": "Represents information about a client-facilitated shipment where the shipping label and fulfillment was not handled by Flow. For merchant-of-record and tracking purposes, clients doing their own shipping will need to notify Flow of shipped packages.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "default": "{}",
          "name": "attributes",
          "annotations": [],
          "description": "Reference information included with the label, if carrier provides support for reference information.",
          "attributes": [],
          "type": "map[string]",
          "required": true
        },
        {
          "name": "carrier_tracking_number",
          "annotations": [],
          "description": "Carrier-issued or generated tracking number of the first carrier taking hold of the package",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "destination",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Destination contact information and structured address",
          "attributes": [],
          "type": "shipping_address",
          "required": true
        },
        {
          "name": "flow_tracking_number",
          "annotations": [],
          "description": "Flow-generated tracking number. 13 digit tracking number that begins with F70.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "origin",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Origin contact information and structured address",
          "attributes": [],
          "type": "shipping_address",
          "required": true
        },
        {
          "name": "package",
          "annotations": [],
          "description": "Package to be shipped, including dimensions and items included",
          "attributes": [],
          "type": "shipping_label_package",
          "required": true
        },
        {
          "name": "service",
          "annotations": [],
          "description": "Carrier service level used for generation and shipment of this label",
          "attributes": [],
          "type": "service_summary",
          "required": true,
          "example": "ups-ground, dhl-express-worldwide"
        },
        {
          "name": "window",
          "annotations": [],
          "description": "Estimated date range until delivery, based on ratecard delivery window days",
          "attributes": [],
          "type": "datetime_range",
          "required": true
        },
        {
          "name": "order",
          "annotations": [],
          "description": "Order number/key of the client organization. This will allow Flow to tie and track a label to a submitted order, if applicable.",
          "attributes": [],
          "type": "label_order_summary",
          "required": false
        },
        {
          "name": "order_identifier",
          "annotations": [],
          "description": "The order identifier this notification is associated with. Will be blank if not specified when a notification is submitted.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "fulfillment_key",
          "annotations": [],
          "description": "The key of a fulfillment this notification is associated with. Will be blank if not specified when a notification is submitted.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "shipment_recipient",
          "annotations": [],
          "description": "Tells us who the recipient of the package is. This will determine information passed on to carriers to make sure the correct label and accounts are used",
          "attributes": [],
          "type": "shipment_recipient",
          "required": false
        }
      ]
    },
    {
      "plural": "shipping_notification_versions",
      "name": "shipping_notification_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "shipping_notification",
          "annotations": [],
          "attributes": [],
          "type": "shipping_notification",
          "required": true
        }
      ]
    },
    {
      "plural": "shopify_carts",
      "name": "shopify_cart",
      "description": "Representation of a Shopify cart exactly as defined by shopify.com",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Equivalent of the cart token",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "items",
          "annotations": [],
          "attributes": [],
          "type": "[shopify_cart_item]",
          "required": true
        },
        {
          "name": "item_count",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "total_price",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "local",
          "annotations": [],
          "attributes": [],
          "type": "shopify_local_cart_metadata",
          "required": true
        },
        {
          "name": "attributes",
          "annotations": [],
          "attributes": [],
          "type": "object",
          "required": false
        },
        {
          "name": "note",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "default": "true",
          "name": "requires_shipping",
          "annotations": [],
          "attributes": [],
          "type": "boolean",
          "required": true
        },
        {
          "name": "total_weight",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": false
        }
      ]
    },
    {
      "plural": "shopify_cart_add_multiple_forms",
      "name": "shopify_cart_add_multiple_form",
      "attributes": [],
      "fields": [
        {
          "name": "items",
          "annotations": [],
          "attributes": [],
          "type": "[shopify_cart_add_single_form]",
          "required": true
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "Optional order level attributes",
          "attributes": [],
          "type": "map[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "shopify_cart_add_single_forms",
      "name": "shopify_cart_add_single_form",
      "attributes": [
        {
          "name": "linter",
          "description": "id is a long in shopify",
          "value": {
            "ignore": [
              "common_field_types"
            ]
          }
        }
      ],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "quantity",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "properties",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "shopify_cart_change_forms",
      "name": "shopify_cart_change_form",
      "description": "Must provide either line or id. If you provide both, they must match",
      "attributes": [
        {
          "name": "linter",
          "description": "id is a long in shopify",
          "value": {
            "ignore": [
              "common_field_types"
            ]
          }
        }
      ],
      "fields": [
        {
          "name": "quantity",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "line",
          "annotations": [],
          "description": "This correlates to the position of the item line in the cart. First item in shopify cart has line=1",
          "attributes": [],
          "type": "long",
          "minimum": 1,
          "required": false
        },
        {
          "name": "id",
          "annotations": [],
          "description": "The variant id",
          "attributes": [],
          "type": "long",
          "required": false
        },
        {
          "name": "properties",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "shopify_cart_conversions",
      "name": "shopify_cart_conversion",
      "attributes": [],
      "fields": [
        {
          "name": "flow",
          "annotations": [],
          "attributes": [],
          "type": "shopify_cart_conversion_flow_order",
          "required": true
        },
        {
          "name": "shopify",
          "annotations": [],
          "attributes": [],
          "type": "shopify_cart_conversion_shopify_cart",
          "required": true
        }
      ]
    },
    {
      "plural": "shopify_cart_conversion_flow_orders",
      "name": "shopify_cart_conversion_flow_order",
      "attributes": [],
      "fields": [
        {
          "name": "order",
          "annotations": [],
          "attributes": [],
          "type": "order",
          "required": true
        },
        {
          "name": "errors",
          "annotations": [],
          "attributes": [],
          "type": "[order_error]",
          "required": false
        }
      ]
    },
    {
      "plural": "shopify_cart_conversion_shopify_carts",
      "name": "shopify_cart_conversion_shopify_cart",
      "attributes": [],
      "fields": [
        {
          "name": "cart",
          "annotations": [],
          "attributes": [],
          "type": "io.flow.shopify.external.v0.models.shopify_cart",
          "required": true
        }
      ]
    },
    {
      "plural": "shopify_cart_items",
      "name": "shopify_cart_item",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "handle",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "line_price",
          "annotations": [],
          "attributes": [],
          "type": "double",
          "required": true
        },
        {
          "name": "price",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "product_id",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "product_title",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "quantity",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "title",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "url",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "variant_id",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "local",
          "annotations": [],
          "attributes": [],
          "type": "shopify_local_cart_item_metadata",
          "required": true
        },
        {
          "default": "false",
          "name": "gift_card",
          "annotations": [],
          "attributes": [],
          "type": "boolean",
          "required": true
        },
        {
          "name": "image",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "product_description",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "product_type",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "properties",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "required": false
        },
        {
          "default": "true",
          "name": "requires_shipping",
          "annotations": [],
          "attributes": [],
          "type": "boolean",
          "required": true
        },
        {
          "name": "sku",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "variant_title",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "variant_options",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "required": false
        },
        {
          "name": "vendor",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "shopify_customer_metafield_values",
      "name": "shopify_customer_metafield_value",
      "description": "Model to represent details available in a customer metafield.",
      "attributes": [],
      "fields": [
        {
          "name": "flow_consumer_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "shopify_item_event_buckets",
      "name": "shopify_item_event_bucket",
      "attributes": [],
      "fields": [
        {
          "name": "range",
          "annotations": [],
          "description": "Interval bounds for the current event bucket",
          "attributes": [],
          "type": "datetime_range",
          "required": true
        },
        {
          "name": "count",
          "annotations": [],
          "description": "Number of events within the period",
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "data",
          "annotations": [],
          "description": "Deeper level item summary information representing the oldest events in the bucket",
          "maximum": 1000,
          "attributes": [],
          "type": "[shopify_item_event_data]",
          "required": true
        }
      ]
    },
    {
      "plural": "shopify_item_event_data",
      "name": "shopify_item_event_data",
      "attributes": [],
      "fields": [
        {
          "name": "created_at",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "experience",
          "annotations": [],
          "attributes": [],
          "type": "experience_reference",
          "required": true
        },
        {
          "name": "item",
          "annotations": [],
          "attributes": [],
          "type": "catalog_item_summary",
          "required": true
        }
      ]
    },
    {
      "plural": "shopify_lines",
      "name": "shopify_line",
      "attributes": [],
      "fields": [
        {
          "name": "variant_id",
          "annotations": [],
          "description": "Shopify variant id",
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "quantity",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "minimum": 1,
          "required": true
        },
        {
          "name": "price",
          "annotations": [],
          "attributes": [],
          "type": "shopify_price",
          "required": true
        },
        {
          "name": "total",
          "annotations": [],
          "attributes": [],
          "type": "shopify_price",
          "required": true
        },
        {
          "name": "price_source",
          "annotations": [],
          "description": "Indicates the source of the item price.",
          "attributes": [],
          "type": "price_source",
          "required": false
        }
      ]
    },
    {
      "plural": "shopify_local_cart_item_metadata",
      "name": "shopify_local_cart_item_metadata",
      "attributes": [],
      "fields": [
        {
          "name": "line_price",
          "annotations": [],
          "attributes": [],
          "type": "price_with_base",
          "required": true
        },
        {
          "name": "price",
          "annotations": [],
          "attributes": [],
          "type": "price_with_base",
          "required": true
        }
      ]
    },
    {
      "plural": "shopify_local_cart_metadata",
      "name": "shopify_local_cart_metadata",
      "attributes": [],
      "fields": [
        {
          "name": "total_price",
          "annotations": [],
          "attributes": [],
          "type": "price_with_base",
          "required": true
        },
        {
          "name": "promotions",
          "annotations": [],
          "description": "The current available and applied promotions for this order",
          "attributes": [],
          "type": "promotions",
          "required": true
        },
        {
          "name": "rules",
          "annotations": [],
          "description": "Represents a summary of the rules related to this cart.",
          "attributes": [],
          "type": "order_rules_summary",
          "required": false
        },
        {
          "name": "subtotal",
          "annotations": [],
          "attributes": [],
          "type": "price_with_base",
          "required": true
        },
        {
          "name": "vat",
          "annotations": [],
          "attributes": [],
          "type": "price_with_base",
          "required": false
        },
        {
          "name": "duty",
          "annotations": [],
          "attributes": [],
          "type": "price_with_base",
          "required": false
        },
        {
          "name": "discount",
          "annotations": [],
          "attributes": [],
          "type": "price_with_base",
          "required": false
        }
      ]
    },
    {
      "plural": "shopify_local_price_metadata",
      "name": "shopify_local_price_metadata",
      "attributes": [],
      "fields": [
        {
          "name": "price",
          "annotations": [],
          "attributes": [],
          "type": "price_with_base",
          "required": true
        }
      ]
    },
    {
      "plural": "shopify_localization_settings",
      "name": "shopify_localization_setting",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "method",
          "annotations": [],
          "attributes": [],
          "type": "shopify_localization_method",
          "required": true
        },
        {
          "name": "datetime_range",
          "annotations": [],
          "attributes": [],
          "type": "datetime_range",
          "required": true
        }
      ]
    },
    {
      "plural": "shopify_localization_setting_deleteds",
      "name": "shopify_localization_setting_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "shopify_localization_setting",
          "annotations": [],
          "attributes": [],
          "type": "shopify_localization_setting",
          "required": true
        }
      ]
    },
    {
      "plural": "shopify_localization_setting_forms",
      "name": "shopify_localization_setting_form",
      "attributes": [],
      "fields": [
        {
          "name": "method",
          "annotations": [],
          "attributes": [],
          "type": "shopify_localization_method",
          "required": true
        },
        {
          "name": "datetime_range",
          "annotations": [],
          "attributes": [],
          "type": "datetime_range",
          "required": true
        }
      ]
    },
    {
      "plural": "shopify_localization_setting_upserteds",
      "name": "shopify_localization_setting_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "shopify_localization_setting",
          "annotations": [],
          "attributes": [],
          "type": "shopify_localization_setting",
          "required": true
        }
      ]
    },
    {
      "plural": "shopify_localized_orders",
      "name": "shopify_localized_order",
      "attributes": [
        {
          "name": "linter",
          "description": "id is a long in shopify",
          "value": {
            "ignore": [
              "common_field_types"
            ]
          }
        }
      ],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Shopify order id",
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "lines",
          "annotations": [],
          "attributes": [],
          "type": "[shopify_line]",
          "required": true
        },
        {
          "name": "prices",
          "annotations": [],
          "attributes": [],
          "type": "[shopify_price]",
          "required": true
        },
        {
          "name": "total",
          "annotations": [],
          "attributes": [],
          "type": "shopify_price",
          "required": true
        },
        {
          "name": "allocation_details",
          "annotations": [],
          "attributes": [],
          "type": "[allocation_detail]",
          "required": true
        },
        {
          "name": "merchant_of_record",
          "annotations": [],
          "attributes": [],
          "type": "order_merchant_of_record",
          "required": false
        },
        {
          "name": "merchant_of_record_entity",
          "annotations": [],
          "description": "If Flow is the merchant of record, we provide the specific entity that is serving in the transaction (e.g. Flow Limited in Ireland or Flow Inc in the US). If there are multiple deliveries for an order, there may also be multiple MoR entities. In that case, the order MoR entity field will be omitted and you should rely on the MoR entity field on the delivery.",
          "attributes": [],
          "type": "merchant_of_record_entity",
          "required": false
        },
        {
          "name": "incoterm",
          "annotations": [],
          "description": "The specific incoterms to use for this order",
          "attributes": [],
          "type": "incoterm",
          "required": false
        },
        {
          "name": "flow_order_id",
          "annotations": [],
          "description": "Flow order id",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "tax_registration",
          "annotations": [],
          "description": "Represents the tax registration on an order (e.g user entered a valid VAT number in europe), if applicable, and its status.",
          "attributes": [],
          "type": "tax_registration",
          "required": false
        },
        {
          "name": "geo",
          "annotations": [],
          "description": "If present, provides the geo ip related information for this order",
          "attributes": [],
          "type": "order_geo",
          "required": false
        }
      ]
    },
    {
      "plural": "shopify_localized_variants",
      "name": "shopify_localized_variant",
      "attributes": [
        {
          "name": "linter",
          "description": "id is a long in shopify",
          "value": {
            "ignore": [
              "common_field_types"
            ]
          }
        }
      ],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Shopify variant id",
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "handle",
          "annotations": [],
          "description": "Shopify product handle",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "experience",
          "annotations": [],
          "attributes": [],
          "type": "experience_reference",
          "required": true
        },
        {
          "name": "prices",
          "annotations": [],
          "attributes": [],
          "type": "shopify_localized_variant_prices",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "description": "Indicates whether the variant should be included or excluded from being sold in this experience.",
          "attributes": [],
          "type": "subcatalog_item_status",
          "required": true
        },
        {
          "name": "inventory_status",
          "annotations": [],
          "description": "The inventory availability for the variant. Can be used to make decisions on how to present products to customers based on inventory condition",
          "attributes": [],
          "type": "item_availability_status",
          "required": false
        }
      ]
    },
    {
      "plural": "shopify_localized_variant_prices",
      "name": "shopify_localized_variant_prices",
      "attributes": [],
      "fields": [
        {
          "name": "item",
          "annotations": [],
          "attributes": [],
          "type": "shopify_price",
          "required": true
        },
        {
          "name": "compare_at",
          "annotations": [],
          "attributes": [],
          "type": "shopify_price",
          "required": false
        },
        {
          "name": "vat",
          "annotations": [],
          "attributes": [],
          "type": "shopify_price",
          "required": false
        },
        {
          "name": "duty",
          "annotations": [],
          "attributes": [],
          "type": "shopify_price",
          "required": false
        }
      ]
    },
    {
      "plural": "shopify_location_flow_center_mappings",
      "name": "shopify_location_flow_center_mapping",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "shopify_location",
          "annotations": [],
          "attributes": [],
          "type": "shopify_location_reference",
          "required": true
        },
        {
          "name": "flow_center",
          "annotations": [],
          "attributes": [],
          "type": "flow_center_reference",
          "required": true
        }
      ]
    },
    {
      "plural": "shopify_location_flow_center_mapping_forms",
      "name": "shopify_location_flow_center_mapping_form",
      "attributes": [],
      "fields": [
        {
          "name": "shopify_location_id",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "flow_center_key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "shopify_location_references",
      "name": "shopify_location_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "shopify_order_attributes_forms",
      "name": "shopify_order_attributes_form",
      "attributes": [],
      "fields": [
        {
          "name": "attributes",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "required": true
        }
      ]
    },
    {
      "plural": "shopify_order_delivery_metafields",
      "name": "shopify_order_delivery_metafield",
      "description": "Model to represent a delivery metafield",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "description": "A key for a delivery. These will be unique identifiers for a delivery within an order.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "items",
          "annotations": [],
          "attributes": [],
          "type": "[shopify_order_delivery_metafield_item]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "service",
          "annotations": [],
          "attributes": [],
          "type": "service_summary",
          "required": true
        },
        {
          "name": "window",
          "annotations": [],
          "attributes": [],
          "type": "delivery_window",
          "required": true
        },
        {
          "name": "liability",
          "annotations": [],
          "description": "Describes which party would be responsible for paying the carrier.",
          "attributes": [],
          "type": "ratecard_owner",
          "required": false,
          "example": "flow"
        },
        {
          "name": "cost",
          "annotations": [],
          "description": "The shipping cost associated to the selected delivery",
          "attributes": [],
          "type": "money_with_optional_base",
          "required": false
        },
        {
          "name": "prices",
          "annotations": [],
          "description": "Prices of the goods within this delivery.",
          "attributes": [],
          "type": "[shopify_price]",
          "required": false
        },
        {
          "name": "total",
          "annotations": [],
          "description": "Total of the goods within this delivery",
          "attributes": [],
          "type": "shopify_price",
          "required": false
        },
        {
          "name": "merchant_of_record_entity",
          "annotations": [],
          "description": "If Flow is the merchant of record, we provide the specific entity that is serving this delivery (e.g. Flow Limited in Ireland or Flow Inc in the US).",
          "attributes": [],
          "type": "merchant_of_record_entity",
          "required": false
        }
      ]
    },
    {
      "plural": "shopify_order_delivery_metafield_items",
      "name": "shopify_order_delivery_metafield_item",
      "description": "Model to represent a delivery metafield",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "quantity",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "minimum": 1,
          "required": true
        }
      ]
    },
    {
      "plural": "shopify_order_price_attributes_metafields",
      "name": "shopify_order_price_attributes_metafield",
      "description": "Model to represent item's price attributes metafield",
      "attributes": [],
      "fields": [
        {
          "name": "item_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "minimum": 1,
          "required": true
        },
        {
          "name": "price_attributes",
          "annotations": [],
          "attributes": [],
          "type": "map[price_with_base]",
          "required": true
        }
      ]
    },
    {
      "plural": "shopify_order_romanization_metafields",
      "name": "shopify_order_romanization_metafield",
      "description": "Model to represent romanized order detail metafield",
      "attributes": [],
      "fields": [
        {
          "name": "destination",
          "annotations": [],
          "attributes": [],
          "type": "order_address",
          "required": true
        }
      ]
    },
    {
      "plural": "shopify_prices",
      "name": "shopify_price",
      "attributes": [],
      "fields": [
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "HST or Duty"
        },
        {
          "name": "amount",
          "annotations": [],
          "attributes": [],
          "type": "double",
          "required": true
        },
        {
          "name": "cents",
          "annotations": [],
          "attributes": [],
          "type": "double",
          "required": true
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        },
        {
          "name": "label",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "includes",
          "annotations": [],
          "description": "Describes which levies are included in the price, if any.",
          "attributes": [],
          "type": "included_levies",
          "required": false
        },
        {
          "name": "local",
          "annotations": [],
          "attributes": [],
          "type": "shopify_local_price_metadata",
          "required": false
        }
      ]
    },
    {
      "plural": "shopify_private_apps",
      "name": "shopify_private_app",
      "description": "Shopify private app information.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "api_key",
          "annotations": [],
          "description": "Redacted api key, only last 2 characters will be displayed.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "password",
          "annotations": [],
          "description": "Redacted password, only last 2 characters will be displayed.",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "shopify_private_app_forms",
      "name": "shopify_private_app_form",
      "attributes": [],
      "fields": [
        {
          "name": "api_key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "password",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "shopify_sync_statuses",
      "name": "shopify_sync_status",
      "attributes": [],
      "fields": [
        {
          "name": "sync_check",
          "annotations": [],
          "attributes": [],
          "type": "shopify_sync_check",
          "required": true
        },
        {
          "name": "range",
          "annotations": [],
          "description": "Bounded time series for the sync status",
          "attributes": [],
          "type": "datetime_range",
          "required": true
        },
        {
          "name": "interval_seconds",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "total",
          "annotations": [],
          "description": "Total number of events with created_at timesteamp both a) 'greater than or equal to' b) 'less than' the datetime range",
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "buckets",
          "annotations": [],
          "description": "Buckets are bounded by a datetime range with the specified interval and contain events that have no yet synced",
          "attributes": [],
          "type": "[shopify_event_bucket]",
          "required": true
        }
      ]
    },
    {
      "plural": "shopify_variant_flow_metafields",
      "name": "shopify_variant_flow_metafield",
      "description": "The shopify variant metafield defines the individual metafield values we write into Shopify for each variant. This model was introduced to enable server side rendering of content (e.g. the price on the product detail page). Each field in this model is available as its own metafield within a namespace named 'price_abc' where abc is a unique, short identifier for an experience.",
      "attributes": [],
      "fields": [
        {
          "name": "prices_item",
          "annotations": [],
          "description": "The item price in local currency",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "C$150.95"
        },
        {
          "name": "prices_currency",
          "annotations": [],
          "description": "ISO 4217 3 currency code in upper case of the item price",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAD"
        },
        {
          "name": "prices_includes",
          "annotations": [],
          "description": "Defines what is included in the item price",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "Includes VAT"
        },
        {
          "name": "prices_vat",
          "annotations": [],
          "description": "The VAT in local currency",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "C$20.00"
        },
        {
          "name": "prices_vat_name",
          "annotations": [],
          "description": "The name of the VAT for this experience country",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "VAT or HST"
        },
        {
          "name": "prices_duty",
          "annotations": [],
          "description": "The Duty in local currency",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "C$10.00"
        },
        {
          "name": "prices_compare_at",
          "annotations": [],
          "description": "The compare at item price in local currency",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "C$250.00"
        },
        {
          "name": "prices_status",
          "annotations": [],
          "description": "Indicates whether the variant should be included or excluded from being sold in the experience.",
          "attributes": [],
          "type": "subcatalog_item_status",
          "required": true
        },
        {
          "name": "inventory_status",
          "annotations": [],
          "description": "The inventory availability for the variant. Can be used to make decisions on how to present products to customers based on inventory condition",
          "attributes": [],
          "type": "item_availability_status",
          "required": false
        }
      ]
    },
    {
      "plural": "shopify_variant_inventory_metafields",
      "name": "shopify_variant_inventory_metafield",
      "description": "For enabled organizations, this indicates the total number of available units of inventory for customers in this experience.",
      "attributes": [],
      "fields": [
        {
          "name": "experience",
          "annotations": [],
          "attributes": [],
          "type": "experience_reference",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "item_availability_status",
          "required": true
        }
      ]
    },
    {
      "plural": "simple_permission_checks",
      "name": "simple_permission_check",
      "description": "A simple model, used to convey permitted behaviors along with approval of a request for a specific permitted route.",
      "attributes": [],
      "fields": [
        {
          "name": "behaviors",
          "annotations": [],
          "attributes": [],
          "type": "[flow_behavior]",
          "required": true
        }
      ]
    },
    {
      "plural": "single_package_shipping_notification_forms",
      "name": "single_package_shipping_notification_form",
      "description": "Simplified form for notifying Flow of a Fulfillment shipped entirely in a single tracked package.",
      "attributes": [],
      "fields": [
        {
          "name": "fulfillment_key",
          "annotations": [],
          "description": "Flow issued fulfillment key. For integrations that do not split fulfillments prior to releasing them to a WMS, this will be generally the same as the order number.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "carrier_tracking_number",
          "annotations": [],
          "description": "Carrier-issued or generated tracking number of the first carrier taking hold of the package",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "package_dimensions",
          "annotations": [],
          "description": "Packaging dimensions for the shipment using the requested shipping label.",
          "attributes": [],
          "type": "dimension",
          "required": false
        },
        {
          "name": "service",
          "annotations": [],
          "description": "Carrier service level used for generation and shipment of this label. If omitted, the service level that was selected in the order's quote is used.",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "ups-ground, dhl-express-worldwide"
        },
        {
          "name": "shipment_recipient",
          "annotations": [],
          "description": "Tells us who the recipient of the package is. This will determine information passed on to carriers to make sure the correct label and accounts are used",
          "attributes": [],
          "type": "shipment_recipient",
          "required": false
        }
      ]
    },
    {
      "plural": "snapshot_deleteds",
      "name": "snapshot_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "snapshot_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "snapshot_upserteds",
      "name": "snapshot_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "snapshot_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "available",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        },
        {
          "name": "center_key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "item_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "quantity",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        }
      ]
    },
    {
      "plural": "solidus_product_export_types",
      "name": "solidus_product_export_type",
      "description": "Exports product level data for import into solidus",
      "attributes": [],
      "fields": [
        {
          "name": "numbers",
          "annotations": [],
          "description": "The specific list of item numbers to export",
          "attributes": [],
          "type": "[string]",
          "required": false
        },
        {
          "name": "sort",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "solidus_variant_export_types",
      "name": "solidus_variant_export_type",
      "description": "Exports variant level data for import into solidus",
      "attributes": [],
      "fields": [
        {
          "name": "numbers",
          "annotations": [],
          "description": "The specific list of item numbers to export",
          "attributes": [],
          "type": "[string]",
          "required": false
        },
        {
          "name": "sort",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "stripe_authentication_data",
      "name": "stripe_authentication_data",
      "description": "Stripe authentication data.",
      "attributes": [],
      "fields": [
        {
          "name": "secret_key_reference",
          "annotations": [],
          "description": "Reference to Stripe API secret key.",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "stripe_authentication_data_forms",
      "name": "stripe_authentication_data_form",
      "description": "Used to specify Stripe API secret key.",
      "attributes": [],
      "fields": [
        {
          "name": "account_id",
          "annotations": [],
          "description": "Stripe account id.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "secret_key",
          "annotations": [],
          "description": "Stripe API secret key.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "description": "Used to identify an account within an organization, specifically when specifying account selection rules. Defaults to account id if not specified.",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "stripe_authorization_result_action_detailses",
      "name": "stripe_authorization_result_action_details",
      "description": "Provides details for Stripe authorizations (e.g. client secret to be used for 3D Secure).",
      "attributes": [],
      "fields": [
        {
          "name": "client_secret",
          "annotations": [],
          "description": "The client secret of this PaymentIntent. Used for client-side retrieval using a publishable key.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "payment_method_id",
          "annotations": [],
          "description": "ID of the payment method used in this PaymentIntent.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "publishable_key",
          "annotations": [],
          "description": "The publishable key used to initialize Stripe-related objects on the client.",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "subcatalogs",
      "name": "subcatalog",
      "description": "A configuration with custom query to select a subset of master catalog items for a localized experience",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "catalog",
          "annotations": [],
          "attributes": [],
          "type": "catalog",
          "required": true
        },
        {
          "name": "settings",
          "annotations": [],
          "attributes": [],
          "type": "subcatalog_settings",
          "required": true
        }
      ]
    },
    {
      "plural": "subcatalog_deleteds",
      "name": "subcatalog_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "catalog",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "master"
        },
        {
          "name": "subcatalog_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "subcatalog_forms",
      "name": "subcatalog_form",
      "attributes": [],
      "fields": [
        {
          "name": "settings",
          "annotations": [],
          "attributes": [],
          "type": "subcatalog_settings_form",
          "required": false
        }
      ]
    },
    {
      "plural": "subcatalog_items",
      "name": "subcatalog_item",
      "description": "Represents information specific to an item in a given subcatalog",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "item",
          "annotations": [],
          "attributes": [],
          "type": "item",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "subcatalog_item_status",
          "required": true
        }
      ]
    },
    {
      "plural": "subcatalog_item_deleteds",
      "name": "subcatalog_item_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "catalog",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "master"
        },
        {
          "name": "subcatalog_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "subcatalog_item_upserteds",
      "name": "subcatalog_item_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "Client's unique identifier for this object",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "catalog",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "master"
        },
        {
          "name": "subcatalog_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "subcatalog_item_versions",
      "name": "subcatalog_item_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "subcatalog_item",
          "annotations": [],
          "attributes": [],
          "type": "subcatalog_item",
          "required": true
        }
      ]
    },
    {
      "plural": "subcatalog_queries",
      "name": "subcatalog_query",
      "description": "Represents a typed query to indicate which items to include or exclude in a subcatalog",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "q",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "query_type",
          "required": true
        }
      ]
    },
    {
      "plural": "subcatalog_query_forms",
      "name": "subcatalog_query_form",
      "description": "Defines a query specifying items to be included or excluded in a subcatalog",
      "attributes": [],
      "fields": [
        {
          "name": "q",
          "annotations": [],
          "description": "Query string used to search for items",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "query_type",
          "required": true
        }
      ]
    },
    {
      "plural": "subcatalog_query_validations",
      "name": "subcatalog_query_validation",
      "description": "Indicates valid and invalid queries",
      "attributes": [],
      "fields": [
        {
          "name": "valid",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "required": true
        },
        {
          "name": "invalid",
          "annotations": [],
          "attributes": [],
          "type": "[string]",
          "required": true
        }
      ]
    },
    {
      "plural": "subcatalog_references",
      "name": "subcatalog_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "subcatalog_settings",
      "name": "subcatalog_settings",
      "attributes": [],
      "fields": [
        {
          "default": "auto",
          "name": "update_policy",
          "annotations": [],
          "attributes": [],
          "type": "update_policy",
          "required": true
        }
      ]
    },
    {
      "plural": "subcatalog_settings_forms",
      "name": "subcatalog_settings_form",
      "attributes": [],
      "fields": [
        {
          "name": "update_policy",
          "annotations": [],
          "attributes": [],
          "type": "update_policy",
          "required": false
        }
      ]
    },
    {
      "plural": "subcatalog_statisticses",
      "name": "subcatalog_statistics",
      "description": "Statistics related to the items in this subcatalog, including item count, number of distinct categories, etc.",
      "attributes": [],
      "fields": [
        {
          "name": "excluded",
          "annotations": [],
          "description": "Number of items that are currently excluded in this subcatalog",
          "attributes": [],
          "type": "item_statistics",
          "required": true
        },
        {
          "name": "included",
          "annotations": [],
          "description": "Total number of catalog items available from master catalog",
          "attributes": [],
          "type": "item_statistics",
          "required": true
        },
        {
          "name": "restricted",
          "annotations": [],
          "description": "Number of items that are currently restricted in this subcatalog",
          "attributes": [],
          "type": "item_statistics",
          "required": true
        },
        {
          "name": "queue",
          "annotations": [],
          "description": "Number of items that are currently queued to be added or updated to this subcatalog",
          "attributes": [],
          "type": "item_statistics",
          "required": true
        },
        {
          "name": "catalog",
          "annotations": [],
          "description": "The parent catalog's statistics. Provided here to make summary data easy to compute (e.g. what % of items are in this subcatalog)",
          "attributes": [],
          "type": "catalog_statistics",
          "required": true
        }
      ]
    },
    {
      "plural": "subcatalog_upserteds",
      "name": "subcatalog_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "catalog",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "master"
        },
        {
          "name": "subcatalog_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "subcatalog_versions",
      "name": "subcatalog_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "subcatalog",
          "annotations": [],
          "attributes": [],
          "type": "subcatalog",
          "required": true
        }
      ]
    },
    {
      "plural": "suggestions",
      "name": "suggestion",
      "attributes": [],
      "fields": [
        {
          "name": "label",
          "annotations": [],
          "description": "The suggestion to display to user",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "count",
          "annotations": [],
          "description": "The number of results for the label",
          "attributes": [],
          "type": "long",
          "required": true
        }
      ]
    },
    {
      "plural": "summary_shipping_label_forms",
      "name": "summary_shipping_label_form",
      "description": "Minimal form to create a shipping label. Origin and destination are assumed based on a given order's center and final shipping destination",
      "attributes": [],
      "fields": [
        {
          "name": "order_number",
          "annotations": [],
          "description": "Order number/key of the client organization. This will allow Flow to tie and track a label to a submitted order, if applicable.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "items",
          "annotations": [],
          "description": "List of items and quantities going into this shipment",
          "attributes": [],
          "type": "[line_item_form]",
          "minimum": 1,
          "required": true
        }
      ]
    },
    {
      "plural": "surcharge_responsible_party_displays",
      "name": "surcharge_responsible_party_display",
      "description": "Surcharge responsible parties that can be displayed and selected",
      "attributes": [],
      "fields": [
        {
          "name": "name",
          "annotations": [],
          "description": "Display name of the responsible party",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "Customer pays for this surcharge"
        },
        {
          "name": "responsible_party",
          "annotations": [],
          "description": "The responsible party model value",
          "attributes": [],
          "type": "surcharge_responsible_party",
          "required": true,
          "example": "customer"
        }
      ]
    },
    {
      "plural": "surcharge_settings",
      "name": "surcharge_setting",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "delivery_option_cost_detail_component_key",
          "required": true
        },
        {
          "name": "responsible_party",
          "annotations": [],
          "description": "Who is responsible for paying the surcharge",
          "attributes": [],
          "type": "surcharge_responsible_party",
          "required": true
        }
      ]
    },
    {
      "plural": "surcharge_setting_displays",
      "name": "surcharge_setting_display",
      "description": "Surcharge settings that can be displayed and configured",
      "attributes": [],
      "fields": [
        {
          "name": "name",
          "annotations": [],
          "description": "Display name of the surcharge setting",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "Remote Area Delivery Fees"
        },
        {
          "name": "description",
          "annotations": [],
          "description": "Detailed description that could be displayed as a tooltip",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "A surcharge is applied per shipment when the delivery destination location is remote..."
        },
        {
          "name": "key",
          "annotations": [],
          "description": "The delivery option model key",
          "attributes": [],
          "type": "delivery_option_cost_detail_component_key",
          "required": true,
          "example": "ratecard_rural_shipment_fee"
        },
        {
          "name": "available",
          "annotations": [],
          "description": "The available options to display",
          "attributes": [],
          "type": "[surcharge_responsible_party_display]",
          "required": true
        }
      ]
    },
    {
      "plural": "targetings",
      "name": "targeting",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "description": "Unique client-provided identifier indicating uniqueness of the targeting request. Follows the convention: [service]-[model]-[id]. For example: ratecard-dimension-estimate-dst-8eec70ab1f2740e0b46c7c8867cd8e07",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "queries",
          "annotations": [],
          "description": "Tuples of valid queries on a catalog and their corresponding output object in the client service",
          "attributes": [],
          "type": "[targeting_query]",
          "required": true
        },
        {
          "name": "catalog",
          "annotations": [],
          "attributes": [],
          "type": "catalog_reference",
          "required": true
        },
        {
          "name": "subcatalog",
          "annotations": [],
          "attributes": [],
          "type": "subcatalog_reference",
          "required": false
        }
      ]
    },
    {
      "plural": "targeting_forms",
      "name": "targeting_form",
      "attributes": [],
      "fields": [
        {
          "name": "key",
          "annotations": [],
          "description": "Unique client-provided identifier indicating uniqueness of the targeting request. Follows the convention: [service]-[model]-[id]. For example: ratecard-dimension-estimate-dst-8eec70ab1f2740e0b46c7c8867cd8e07",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "queries",
          "annotations": [],
          "description": "Tuples of valid queries on a catalog and their corresponding output object in the client service",
          "attributes": [],
          "type": "[targeting_query_form]",
          "required": true
        },
        {
          "name": "subcatalog_id",
          "annotations": [],
          "description": "If a targeting is only for a specific subcatalog, then this needs to be provided",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "targeting_items",
      "name": "targeting_item",
      "description": "Represents catalog items where a targeting query is applicable",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "targeting",
          "annotations": [],
          "attributes": [],
          "type": "targeting_summary",
          "required": true
        },
        {
          "name": "item_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "query",
          "annotations": [],
          "attributes": [],
          "type": "targeting_query",
          "required": true
        }
      ]
    },
    {
      "plural": "targeting_item_deleteds",
      "name": "targeting_item_deleted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "targeting_item_deleted_v3s",
      "name": "targeting_item_deleted_v3",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "targeting_item_upserteds",
      "name": "targeting_item_upserted",
      "description": "Indiciates that a given item has been targeted by the query q producing an outcome. The item number is unique within its targeting_id.",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "targeting_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "item_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "q",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "outcome_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "catalog_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "subcatalog_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "targeting_item_upserted_v2s",
      "name": "targeting_item_upserted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "targeting_item",
          "annotations": [],
          "attributes": [],
          "type": "targeting_item",
          "required": true
        }
      ]
    },
    {
      "plural": "targeting_queries",
      "name": "targeting_query",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "q",
          "annotations": [],
          "description": "Valid query on the organization's catalog items",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "outcome_id",
          "annotations": [],
          "description": "ID of corresponding outcome object in client service (e.g. item margin, dimension estimate, etc)",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "position",
          "annotations": [],
          "attributes": [],
          "type": "long",
          "required": true
        }
      ]
    },
    {
      "plural": "targeting_query_forms",
      "name": "targeting_query_form",
      "attributes": [],
      "fields": [
        {
          "name": "q",
          "annotations": [],
          "description": "Valid query on the organization's catalog items",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "outcome_id",
          "annotations": [],
          "description": "ID of corresponding outcome object in client service (e.g. item margin, dimension estimate, etc)",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "targeting_summaries",
      "name": "targeting_summary",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "catalog",
          "annotations": [],
          "attributes": [],
          "type": "catalog_reference",
          "required": true
        },
        {
          "name": "subcatalog",
          "annotations": [],
          "attributes": [],
          "type": "subcatalog_reference",
          "required": false
        }
      ]
    },
    {
      "plural": "targeting_versions",
      "name": "targeting_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "targeting",
          "annotations": [],
          "attributes": [],
          "type": "targeting",
          "required": true
        }
      ]
    },
    {
      "plural": "taxes",
      "name": "tax",
      "description": "Represents a simple model of taxes that apply to a given item / destination.",
      "attributes": [],
      "fields": [
        {
          "name": "name",
          "annotations": [],
          "description": "The name of the taxes being applied",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "VAT, GST + PST, HST"
        },
        {
          "name": "rate",
          "annotations": [],
          "description": "The combined tax rate. A value of 17 indicates a tax rate of 17%",
          "attributes": [],
          "type": "decimal",
          "minimum": 0,
          "required": true,
          "example": "17"
        },
        {
          "name": "components",
          "annotations": [],
          "description": "The components to which tax is applied.",
          "attributes": [],
          "type": "[levy_component]",
          "minimum": 1,
          "required": true
        },
        {
          "name": "deminimis",
          "annotations": [],
          "description": "Describes the tax de minimis if there is one for this destination",
          "attributes": [],
          "type": "deminimis",
          "required": false
        }
      ]
    },
    {
      "plural": "tax_registrations",
      "name": "tax_registration",
      "description": "Result of looking up a specific tax registration number. Indicates validity of a number for a specific country and (if valid) the associated person/company.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [],
          "description": "The tax registration number",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "result",
          "annotations": [],
          "attributes": [],
          "type": "tax_verification_result",
          "required": true
        },
        {
          "name": "result_reason",
          "annotations": [],
          "description": "Additional details - e.g. why the result was invalid",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "name",
          "annotations": [],
          "description": "The name associated with the tax registration number.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "address",
          "annotations": [],
          "description": "The address associated with the tax registration number.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "company_name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "tax_registration_forms",
      "name": "tax_registration_form",
      "attributes": [],
      "fields": [
        {
          "name": "number",
          "annotations": [],
          "description": "The tax registration number",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "company_name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "three_d_secures",
      "name": "three_d_secure",
      "description": "Represents the results from 3D Secure, if applied to an authorization",
      "attributes": [],
      "fields": [
        {
          "name": "code",
          "annotations": [],
          "attributes": [],
          "type": "three_d_secure_code",
          "required": true
        },
        {
          "name": "description",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "tiers",
      "name": "tier",
      "description": "Service shipping tier available in this tier group. e.g. Standard tier, Express tier, Economy tier",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "default": "outbound",
          "name": "direction",
          "annotations": [],
          "attributes": [],
          "type": "lane_direction",
          "deprecation": {
            "description": "This field will be deprecated. Please use the 'direction' field in 'shipping_lane'"
          },
          "required": true
        },
        {
          "name": "integration",
          "annotations": [],
          "description": "Type of shipping integration used for this tier.",
          "attributes": [],
          "type": "shipment_integration_type",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "message",
          "annotations": [],
          "description": "Optional message to show with the shipping tier name.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "rules",
          "annotations": [],
          "description": "Ordered set of rules for this tier",
          "attributes": [],
          "type": "[tier_rule]",
          "required": true
        },
        {
          "name": "services",
          "annotations": [],
          "description": "Services associated with this tier",
          "attributes": [],
          "type": "[carrier_service]",
          "required": true
        },
        {
          "name": "strategy",
          "annotations": [],
          "description": "If multiple available return outcomes for a single tier, strategy picks the top one based on cost or timing.",
          "attributes": [],
          "type": "tier_strategy",
          "required": true
        },
        {
          "name": "visibility",
          "annotations": [],
          "description": "Public or Private. Private ones appear as inactive/disabled to the public",
          "attributes": [],
          "type": "visibility",
          "required": true
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "Currency to be used for the tier. May be different from the experience currency, but enforce all rules use this currency. ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "USD"
        },
        {
          "name": "description",
          "annotations": [],
          "description": "Description of the tier intended for internal description of return tiers or could be used for caption/tooltips on a checkout page.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "display",
          "annotations": [],
          "attributes": [],
          "type": "tier_display",
          "required": false
        },
        {
          "name": "shipping_lane",
          "annotations": [],
          "description": "If this tier belongs to the shipping lane this is the corresponding shipping lane id",
          "attributes": [],
          "type": "string",
          "deprecation": {
            "description": "This field will be deprecated. Please use the 'lane' field"
          },
          "required": false
        },
        {
          "name": "surcharge_settings",
          "annotations": [],
          "description": "The apportionment of additional shipping surcharges and fees that may be levied by some carriers",
          "attributes": [],
          "type": "[surcharge_setting]",
          "required": false
        },
        {
          "name": "lane",
          "annotations": [],
          "description": "Contains information about shipping lane and centers it can ship from/to",
          "attributes": [],
          "type": "shipping_lane_summary",
          "required": false
        }
      ]
    },
    {
      "plural": "tier_deleted_v2s",
      "name": "tier_deleted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "tier",
          "annotations": [],
          "attributes": [],
          "type": "tier",
          "required": true
        }
      ]
    },
    {
      "plural": "tier_displays",
      "name": "tier_display",
      "attributes": [],
      "fields": [
        {
          "name": "estimate",
          "annotations": [],
          "description": "Contains delivery estimate data, generally used to indicate when an item will arrive.",
          "attributes": [],
          "type": "tier_estimate",
          "required": true
        }
      ]
    },
    {
      "plural": "tier_display_forms",
      "name": "tier_display_form",
      "attributes": [],
      "fields": [
        {
          "name": "estimate",
          "annotations": [],
          "attributes": [],
          "type": "tier_estimate",
          "required": false
        }
      ]
    },
    {
      "plural": "tier_estimates",
      "name": "tier_estimate",
      "attributes": [],
      "fields": [
        {
          "name": "type",
          "annotations": [],
          "description": "Indicates the origin of the label, e.g. custom or calculated.",
          "attributes": [],
          "type": "tier_estimate_type",
          "required": true
        },
        {
          "name": "label",
          "annotations": [],
          "description": "The text describing the estimated delivery window, if available.",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "3 - 5 business days"
        }
      ]
    },
    {
      "plural": "tier_forms",
      "name": "tier_form",
      "description": "Service shipping tier available in this tier group. e.g. Standard tier, Express tier, Economy tier",
      "attributes": [],
      "fields": [
        {
          "name": "currency",
          "annotations": [],
          "description": "Currency to be used for the tier. May be different from the experience currency, but enforce all rules use this currency. ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "USD"
        },
        {
          "name": "integration",
          "annotations": [],
          "description": "Type of shipping integration used for this tier.",
          "attributes": [],
          "type": "shipment_integration_type",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "message",
          "annotations": [],
          "description": "Optional message to show with the shipping tier name.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "rules",
          "annotations": [],
          "description": "Ordered set of rules for this tier",
          "attributes": [],
          "type": "[tier_rule_form]",
          "required": true
        },
        {
          "name": "services",
          "annotations": [],
          "description": "Services associated with this tier",
          "attributes": [],
          "type": "[string]",
          "required": true
        },
        {
          "name": "strategy",
          "annotations": [],
          "description": "If multiple available return outcomes for a single tier, strategy picks the top one based on cost or timing.",
          "attributes": [],
          "type": "tier_strategy",
          "required": true
        },
        {
          "name": "visibility",
          "annotations": [],
          "description": "Public or Private. Private ones appear as inactive/disabled to the public",
          "attributes": [],
          "type": "visibility",
          "required": true
        },
        {
          "name": "description",
          "annotations": [],
          "description": "Description of the tier intended for internal description of return tiers or could be used for caption/tooltips on a checkout page.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "direction",
          "annotations": [],
          "attributes": [],
          "type": "lane_direction",
          "deprecation": {
            "description": "This field will be deprecated. Please use the 'direction' field in 'shipping_lane_form'"
          },
          "required": false
        },
        {
          "name": "display",
          "annotations": [],
          "attributes": [],
          "type": "tier_display_form",
          "required": false
        },
        {
          "name": "shipping_lane",
          "annotations": [],
          "description": "The id of the shipping lane this tier belongs to",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "surcharge_settings",
          "annotations": [],
          "description": "How to apportion additional shipping surcharges and fees that may be levied by some carriers",
          "attributes": [],
          "type": "[surcharge_setting]",
          "required": false
        }
      ]
    },
    {
      "plural": "tier_references",
      "name": "tier_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "tier_rules",
      "name": "tier_rule",
      "description": "System to filter incoming quote for a shipment request based on a query and output corresponding outcomes.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "position",
          "annotations": [],
          "description": "Execution position of this rule relative to other rules in the tier. Lower position numbers indicate rules that should be executed earlier.",
          "attributes": [],
          "type": "long",
          "minimum": 0,
          "required": true
        },
        {
          "name": "query",
          "annotations": [],
          "description": "Search API query",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "gte:20 lte:30"
        },
        {
          "name": "outcome",
          "annotations": [],
          "description": "Resulting cost function applied if query is met. e.g. service cost, flat rate",
          "attributes": [],
          "type": "tier_rule_outcome",
          "required": true
        }
      ]
    },
    {
      "plural": "tier_rule_forms",
      "name": "tier_rule_form",
      "attributes": [],
      "fields": [
        {
          "name": "position",
          "annotations": [],
          "description": "Execution position of this rule relative to other rules in the tier. Lower position numbers indicate rules that should be executed earlier. If not specified, we automatically set the position to be last.",
          "attributes": [],
          "type": "long",
          "minimum": 0,
          "required": false
        },
        {
          "name": "query",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "outcome",
          "annotations": [],
          "attributes": [],
          "type": "tier_rule_outcome_form",
          "required": true
        }
      ]
    },
    {
      "plural": "tier_rule_versions",
      "name": "tier_rule_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "tier_rule",
          "annotations": [],
          "attributes": [],
          "type": "tier_rule",
          "required": true
        }
      ]
    },
    {
      "plural": "tier_summaries",
      "name": "tier_summary",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "experience",
          "annotations": [],
          "attributes": [],
          "type": "fulfillment_experience_reference",
          "required": false
        },
        {
          "name": "integration",
          "annotations": [],
          "description": "Type of shipping integration used for this tier.",
          "attributes": [],
          "type": "shipment_integration_type",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "services",
          "annotations": [],
          "description": "Services associated with this tier",
          "attributes": [],
          "type": "[string]",
          "required": true
        },
        {
          "name": "strategy",
          "annotations": [],
          "description": "If multiple available return outcomes for a single tier, strategy picks the top one based on cost or timing.",
          "attributes": [],
          "type": "tier_strategy",
          "required": true
        },
        {
          "name": "visibility",
          "annotations": [],
          "description": "Public or Private. Private ones appear as inactive/disabled to the public",
          "attributes": [],
          "type": "visibility",
          "required": true
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "Currency to be used for the tier. May be different from the experience currency, but enforce all rules use this currency. ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "USD"
        },
        {
          "name": "display",
          "annotations": [],
          "description": "Contains the display text for this tier.",
          "attributes": [],
          "type": "tier_display",
          "required": false
        },
        {
          "name": "message",
          "annotations": [],
          "description": "Optional message to show with the shipping tier name.",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "tier_upserted_v2s",
      "name": "tier_upserted_v2",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "tier",
          "annotations": [],
          "attributes": [],
          "type": "tier",
          "required": true
        }
      ]
    },
    {
      "plural": "tier_versions",
      "name": "tier_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "tier",
          "annotations": [],
          "attributes": [],
          "type": "tier_summary",
          "required": true
        }
      ]
    },
    {
      "plural": "timezones",
      "name": "timezone",
      "description": "Time zone data is provided by the public IANA time zone database. See http://www.iana.org/time-zones",
      "attributes": [],
      "fields": [
        {
          "name": "name",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "America/New_York"
        },
        {
          "name": "description",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "Coordinated Universal Time"
        },
        {
          "name": "offset",
          "annotations": [],
          "description": "Minutes offset from GMT",
          "attributes": [],
          "type": "integer",
          "required": true,
          "example": "-180, 60"
        }
      ]
    },
    {
      "plural": "token_authentication_forms",
      "name": "token_authentication_form",
      "description": "Used to authenticate a given token.",
      "attributes": [],
      "fields": [
        {
          "name": "token",
          "annotations": [],
          "description": "The actual token with which to authenticate",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "token_partner_references",
      "name": "token_partner_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "token_validations",
      "name": "token_validation",
      "description": "Model used to report whether or not a given token is valid",
      "attributes": [],
      "fields": [
        {
          "name": "status",
          "annotations": [],
          "description": "Textual description of whether or not token is valid",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "token_validation_forms",
      "name": "token_validation_form",
      "description": "Defines the payload of a request to validate a token, with primary goal of preventing the token from being included in an HTTP GET.",
      "attributes": [],
      "fields": [
        {
          "name": "token",
          "annotations": [],
          "description": "The actual token that you are validating",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "trackings",
      "name": "tracking",
      "description": "Top level tracking information which contains labels. In cases where shipments are re-labeled, you will see multiple labels for each tracking allowing simple access to see where a shipment is - with which carrier and with the local tracking number",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "labels",
          "annotations": [],
          "attributes": [],
          "type": "[tracking_label]",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "tracking_status",
          "required": true
        },
        {
          "name": "attributes",
          "annotations": [],
          "attributes": [],
          "type": "map[string]",
          "required": true
        },
        {
          "name": "url",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "window",
          "annotations": [],
          "description": "Estimated date range until delivery",
          "attributes": [],
          "type": "datetime_range",
          "required": false
        },
        {
          "name": "order_number",
          "annotations": [],
          "description": "Client organization order number, if available",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "tracking_events",
      "name": "tracking_event",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "address",
          "annotations": [],
          "attributes": [],
          "type": "address",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "tracking_status",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "description",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "tracking_event_forms",
      "name": "tracking_event_form",
      "attributes": [],
      "fields": [
        {
          "name": "tracking_label_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "tracking_status",
          "required": true
        },
        {
          "name": "description",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "address",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "tracking_event_summaries",
      "name": "tracking_event_summary",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "tracking_status",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        }
      ]
    },
    {
      "plural": "tracking_event_versions",
      "name": "tracking_event_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "tracking_event",
          "annotations": [],
          "attributes": [],
          "type": "tracking_event_summary",
          "required": true
        }
      ]
    },
    {
      "plural": "tracking_forms",
      "name": "tracking_form",
      "description": "Top level tracking information which contains labels. In cases where shipments are re-labeled, you will see multiple labels for each tracking allowing simple access to see where a shipment is - with which carrier and with the local tracking number",
      "attributes": [],
      "fields": [
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "tracking_status",
          "required": false
        },
        {
          "name": "order_number",
          "annotations": [],
          "description": "Client organization order number, if available",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "Additional reference attributes",
          "attributes": [],
          "type": "map[string]",
          "required": false
        },
        {
          "name": "window",
          "annotations": [],
          "description": "Estimated date range until delivery",
          "attributes": [],
          "type": "datetime_range",
          "required": false
        }
      ]
    },
    {
      "plural": "tracking_labels",
      "name": "tracking_label",
      "description": "Represents a specific label being tracked as part of the tracking bucket",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "carrier",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "carrier_tracking_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "events",
          "annotations": [],
          "attributes": [],
          "type": "[tracking_event]",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "tracking_status",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "delivery_estimate",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "description",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "tracking_label_event_upserteds",
      "name": "tracking_label_event_upserted",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "address",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Location of the label tracking event",
          "attributes": [],
          "type": "address",
          "required": true
        },
        {
          "name": "carrier",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "ups, dhl"
        },
        {
          "name": "carrier_timestamp",
          "annotations": [],
          "description": "Actual carrier-reported timestamp for event",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "carrier_tracking_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "flow_tracking_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "pending, info_received"
        },
        {
          "name": "delivery_estimate",
          "annotations": [],
          "description": "Carrier-provided delivered estimate when available",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "description",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "order_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "tracking_label_forms",
      "name": "tracking_label_form",
      "description": "Represents a specific label being tracked as part of the tracking bucket",
      "attributes": [],
      "fields": [
        {
          "name": "tracking_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "default": "pending",
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "tracking_status",
          "required": true
        },
        {
          "name": "carrier",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "carrier_tracking_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "delivery_estimate",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "description",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "timestamp",
          "annotations": [],
          "description": "Defaults to now() if not provided",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "parent_id",
          "annotations": [],
          "description": "Parent tracking label for this subordinate tracking label. A child label might represent the subcontracted line haul before reaching the main carrier. Goal is to be able to identify the main carrier responsible for fulfillment of a package.",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "tracking_label_summaries",
      "name": "tracking_label_summary",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "tracking",
          "annotations": [],
          "attributes": [],
          "type": "tracking_summary",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "tracking_status",
          "required": true
        },
        {
          "name": "carrier",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "tracking_number",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "tracking_label_versions",
      "name": "tracking_label_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "tracking_label",
          "annotations": [],
          "attributes": [],
          "type": "tracking_label_summary",
          "required": true
        }
      ]
    },
    {
      "plural": "tracking_summaries",
      "name": "tracking_summary",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "attributes": [],
          "type": "tracking_status",
          "required": true
        },
        {
          "name": "order_number",
          "annotations": [],
          "description": "Client organization order number, if available",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "tracking_versions",
      "name": "tracking_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "tracking",
          "annotations": [],
          "attributes": [],
          "type": "tracking_summary",
          "required": true
        }
      ]
    },
    {
      "plural": "transit_estimates",
      "name": "transit_estimate",
      "attributes": [],
      "fields": [
        {
          "name": "origin",
          "annotations": [],
          "description": "Location of where the package is shipping from",
          "attributes": [],
          "type": "delivery_window_location",
          "required": true
        },
        {
          "name": "destination",
          "annotations": [],
          "description": "Location of where the package is shipping to",
          "attributes": [],
          "type": "delivery_window_location",
          "required": true
        },
        {
          "name": "min_date",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "max_date",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "source",
          "annotations": [],
          "description": "Did this come from Flow, carrier, organization, center, etc.",
          "attributes": [],
          "type": "delivery_window_component_source",
          "required": true
        }
      ]
    },
    {
      "plural": "transit_windows",
      "name": "transit_window",
      "attributes": [],
      "fields": [
        {
          "name": "origin_country",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "destination_country",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "from",
          "annotations": [],
          "description": "min transit",
          "attributes": [],
          "type": "long",
          "minimum": 0,
          "required": true
        },
        {
          "name": "to",
          "annotations": [],
          "description": "max transit",
          "attributes": [],
          "type": "long",
          "minimum": 0,
          "required": true
        }
      ]
    },
    {
      "plural": "unharmonized_item_export_types",
      "name": "unharmonized_item_export_type",
      "description": "Export for items that require harmonization.",
      "attributes": [],
      "fields": [
        {
          "name": "sort",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "uploads",
      "name": "upload",
      "description": "Provides the ability to upload a file to a URL (an expiring s3 url, usually valid for 1 week)",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [],
          "description": "The filename uploaded",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "url",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "expiration",
          "annotations": [],
          "description": "The datetime on which the URL expires",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        }
      ]
    },
    {
      "plural": "users",
      "name": "user",
      "description": "Represents a single user in the system",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "email",
          "annotations": [
            "personal_data"
          ],
          "description": "If known, the user's primary email address. While in most common cases, we expect users to have email addresses, there are edge cases where it is useful to allow a user to NOT have an email address. For example, users interacting solely from mobile devices, guest user accounts, initial onboarding where email is not known, etc. We think by starting off with an optional primary email address we can support these use cases with very little implementation cost.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "name",
          "annotations": [
            "personal_data"
          ],
          "description": "The user's name.",
          "attributes": [],
          "type": "name",
          "required": true
        },
        {
          "default": "active",
          "name": "status",
          "annotations": [],
          "description": "Only active users are authorized to login and interact with the Flow platform.",
          "attributes": [],
          "type": "user_status",
          "required": true
        }
      ]
    },
    {
      "plural": "user_forms",
      "name": "user_form",
      "attributes": [],
      "fields": [
        {
          "name": "email",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "password",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "name",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "name_form",
          "required": false
        }
      ]
    },
    {
      "plural": "user_put_forms",
      "name": "user_put_form",
      "attributes": [],
      "fields": [
        {
          "name": "email",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "name",
          "annotations": [
            "personal_data"
          ],
          "attributes": [],
          "type": "name_form",
          "required": false
        }
      ]
    },
    {
      "plural": "user_references",
      "name": "user_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "user_versions",
      "name": "user_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "user",
          "annotations": [],
          "attributes": [],
          "type": "user",
          "required": true
        }
      ]
    },
    {
      "plural": "value_threshold_exceeded_detailses",
      "name": "value_threshold_exceeded_details",
      "attributes": [],
      "fields": [
        {
          "name": "local",
          "annotations": [],
          "description": "The actual limit in the local currency of the order",
          "attributes": [],
          "type": "price",
          "required": true
        },
        {
          "name": "original",
          "annotations": [],
          "description": "The actual limit in the original currency in which the rule was defined. For example, Canada may restrict exports over CA$2000 - this value would be set to 2000",
          "attributes": [],
          "type": "price",
          "required": true
        }
      ]
    },
    {
      "plural": "virtual_cards",
      "name": "virtual_card",
      "description": "Virtual credit cards are created for a specific limit and currency. Currently only USD denominated cards can be issued. Once created the virtual card can be used in the same way as a physical credit card using the card number, cvv and expiration details.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier generated by Flow for this virtual card.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "key",
          "annotations": [],
          "description": "Your unique identifier for this transaction, which if provided is used to implement idempotency.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "number",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The actual card number. This will be populated on the first request but not returned for subsequent requests for the same card. The card number is not persisted to maintain PCI compliance.",
          "attributes": [],
          "type": "string",
          "required": false,
          "example": "4111111111111111"
        },
        {
          "name": "cvv",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The short card verification value. This will be populated on the first request but not returned for subsequent requests for the same card. The cvv is not persisted to maintain PCI compliance.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "limit",
          "annotations": [],
          "description": "The virtual card limit amount in USD.",
          "attributes": [],
          "type": "price",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "description": "The virtual card brand type.",
          "attributes": [],
          "type": "card_type",
          "required": true,
          "example": "mastercard"
        },
        {
          "name": "expiration",
          "annotations": [],
          "description": "The expiry date as would be displayed on the card. Note that internally the card may be valid for a shorter period of time.",
          "attributes": [],
          "type": "expiration",
          "required": true
        },
        {
          "name": "iin",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "The issuer identification number (IIN) (formerly known as the Bank Identification Number) which are the leading digits of the card number.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "last4",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Cleartext last 4 numbers of the card",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "annotations": [
            "personal_data",
            "consumer"
          ],
          "description": "Cardholder name",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "A set of key/value pairs that you can attach to a virtual card object",
          "attributes": [],
          "type": "map[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "virtual_card_captures",
      "name": "virtual_card_capture",
      "description": "Payment has been captured for the virtual credit card",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "issuer",
          "annotations": [],
          "description": "The virtual credit card issuing bank details.",
          "attributes": [],
          "type": "issuer_v1",
          "required": true
        },
        {
          "name": "virtual_card",
          "annotations": [],
          "description": "Flows reference identifier for the virtual credit card.",
          "attributes": [],
          "type": "virtual_card_reference",
          "required": true
        },
        {
          "name": "authorization",
          "annotations": [],
          "description": "Flows payment authorization details.",
          "attributes": [],
          "type": "authorization_reference",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "The amount of the virtual card capture in the specified currency.",
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The ISO 4217-3 code for the currency. See https://api.flow.io/reference/currencies",
          "maximum": 3,
          "attributes": [],
          "type": "string",
          "minimum": 3,
          "required": true,
          "example": "CAD"
        },
        {
          "name": "created_at",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        }
      ]
    },
    {
      "plural": "virtual_card_capture_deleteds",
      "name": "virtual_card_capture_deleted",
      "description": "Event emitted when a previous virtual card capture has been deleted.",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "virtual_card_capture_upserteds",
      "name": "virtual_card_capture_upserted",
      "description": "Emitted when a capture event occurs against an existing virtual credit card.",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "capture",
          "annotations": [],
          "attributes": [],
          "type": "virtual_card_capture",
          "required": true
        }
      ]
    },
    {
      "plural": "virtual_card_capture_versions",
      "name": "virtual_card_capture_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "virtual_card_capture",
          "annotations": [],
          "attributes": [],
          "type": "virtual_card_capture",
          "required": true
        }
      ]
    },
    {
      "plural": "virtual_card_forms",
      "name": "virtual_card_form",
      "attributes": [],
      "fields": [
        {
          "name": "limit",
          "annotations": [],
          "description": "The requested limit of the card",
          "attributes": [],
          "type": "money",
          "required": true
        },
        {
          "name": "attributes",
          "annotations": [],
          "description": "A set of key/value pairs that you can attach to a virtual card object",
          "attributes": [],
          "type": "map[string]",
          "required": false
        }
      ]
    },
    {
      "plural": "virtual_card_references",
      "name": "virtual_card_reference",
      "description": "Flows reference identifier for the virtual credit card.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "virtual_card_refunds",
      "name": "virtual_card_refund",
      "description": "A refund has been issued for the virtual credit card",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "issuer",
          "annotations": [],
          "description": "The virtual credit card issuing bank details.",
          "attributes": [],
          "type": "issuer_v1",
          "required": true
        },
        {
          "name": "virtual_card",
          "annotations": [],
          "description": "Flows reference identifier for the virtual credit card.",
          "attributes": [],
          "type": "virtual_card_reference",
          "required": true
        },
        {
          "name": "authorization",
          "annotations": [],
          "description": "Flows payment authorization details.",
          "attributes": [],
          "type": "authorization_reference",
          "required": true
        },
        {
          "name": "amount",
          "annotations": [],
          "description": "The amount of the virtual card refund in the specified currency",
          "attributes": [],
          "type": "decimal",
          "required": true
        },
        {
          "name": "currency",
          "annotations": [],
          "description": "The ISO 4217-3 code for the currency. See https://api.flow.io/reference/currencies",
          "maximum": 3,
          "attributes": [],
          "type": "string",
          "minimum": 3,
          "required": true,
          "example": "CAD"
        },
        {
          "name": "created_at",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        }
      ]
    },
    {
      "plural": "virtual_card_refund_deleteds",
      "name": "virtual_card_refund_deleted",
      "description": "Event emitted when a previous virtual card refund has been deleted.",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "virtual_card_refund_upserteds",
      "name": "virtual_card_refund_upserted",
      "description": "Emitted when a refund event occurs against an existing virtual credit card.",
      "attributes": [],
      "fields": [
        {
          "name": "event_id",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "organization",
          "annotations": [],
          "description": "Refers to your organization's account identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "refund",
          "annotations": [],
          "attributes": [],
          "type": "virtual_card_refund",
          "required": true
        }
      ]
    },
    {
      "plural": "virtual_card_refund_versions",
      "name": "virtual_card_refund_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "virtual_card_refund",
          "annotations": [],
          "attributes": [],
          "type": "virtual_card_refund",
          "required": true
        }
      ]
    },
    {
      "plural": "virtual_card_versions",
      "name": "virtual_card_version",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "timestamp",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "type",
          "annotations": [],
          "attributes": [],
          "type": "change_type",
          "required": true
        },
        {
          "name": "virtual_card",
          "annotations": [],
          "attributes": [],
          "type": "virtual_card",
          "required": true
        }
      ]
    },
    {
      "plural": "webhooks",
      "name": "webhook",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "url",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "events",
          "annotations": [],
          "description": "List of events that will trigger data to be sent to the webhook url.",
          "attributes": [],
          "type": "[string]",
          "minimum": 1,
          "required": true
        }
      ]
    },
    {
      "plural": "webhook_deliveries",
      "name": "webhook_delivery",
      "description": "A webhook delivery represents an event that matched a webhook's event types. Each delivery will be attempted one or more times subject to the settings of your webhook.",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "webhook",
          "annotations": [],
          "attributes": [],
          "type": "webhook_reference",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "description": "Represents status of this delivery. This is a finite state machine that starts in pending and moves to either failure or success",
          "attributes": [],
          "type": "webhook_status",
          "required": true
        },
        {
          "name": "created_at",
          "annotations": [],
          "attributes": [],
          "type": "date-time-iso8601",
          "required": true
        },
        {
          "name": "latest",
          "annotations": [],
          "attributes": [],
          "type": "webhook_request",
          "required": false
        },
        {
          "name": "next_attempt_at",
          "annotations": [],
          "description": "If the last delivery attempt was not successful, we schedule a retry automatically subject to the webhook settings. If there is a retry scheduled in the future, this field contains the timestamp on which the retry will be initiated.",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        }
      ]
    },
    {
      "plural": "webhook_forms",
      "name": "webhook_form",
      "attributes": [],
      "fields": [
        {
          "name": "url",
          "annotations": [],
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "events",
          "annotations": [],
          "description": "List of events that will trigger data to be sent to the webhook url. You can specify either '*' to select all events, or specific event types as listed in the type 'event_type' (with optional trailing wildcards).",
          "attributes": [],
          "type": "[string]",
          "minimum": 1,
          "required": true,
          "example": "'*', 'catalog_item_upserted', 'catalog*'"
        }
      ]
    },
    {
      "plural": "webhook_references",
      "name": "webhook_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "webhook_requests",
      "name": "webhook_request",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "headers",
          "annotations": [],
          "description": "The headers sent to the webhook URL",
          "attributes": [],
          "type": "[header]",
          "required": true
        },
        {
          "name": "method",
          "annotations": [],
          "description": "The HTTP method, should always be POST",
          "attributes": [],
          "type": "method",
          "required": true
        },
        {
          "name": "body",
          "annotations": [],
          "description": "The event data sent to the webhook URL",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "status",
          "annotations": [],
          "description": "Represents status of request. This is a finite state machine that starts in pending and moves to either failure or success",
          "attributes": [],
          "type": "webhook_status",
          "required": true
        },
        {
          "name": "started_at",
          "annotations": [],
          "description": "The timestamp at which we started processing this request",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "completed_at",
          "annotations": [],
          "description": "The timestamp at which we completed processing of this request",
          "attributes": [],
          "type": "date-time-iso8601",
          "required": false
        },
        {
          "name": "duration_ms",
          "annotations": [],
          "description": "Duration of milliseconds of the request (completed_at - started_at). Will always be available if completed at is set",
          "attributes": [],
          "type": "long",
          "required": false
        },
        {
          "name": "response",
          "annotations": [],
          "description": "The response from the webhook URL",
          "attributes": [],
          "type": "webhook_response",
          "required": false
        },
        {
          "name": "error",
          "annotations": [],
          "description": "Any errors that may have occurred while attempting to send the request. E.g, dns resolution or gateway timeouts",
          "attributes": [],
          "type": "string",
          "required": false
        }
      ]
    },
    {
      "plural": "webhook_request_references",
      "name": "webhook_request_reference",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        }
      ]
    },
    {
      "plural": "webhook_responses",
      "name": "webhook_response",
      "attributes": [],
      "fields": [
        {
          "name": "id",
          "annotations": [],
          "description": "Globally unique identifier",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "request",
          "annotations": [],
          "description": "The id of the corresponding request",
          "attributes": [],
          "type": "webhook_request_reference",
          "required": true
        },
        {
          "name": "headers",
          "annotations": [],
          "description": "The headers returned from the webhook URL",
          "attributes": [],
          "type": "[header]",
          "required": true
        },
        {
          "name": "body",
          "annotations": [],
          "description": "The first 1k of the content returned from the webhook URL. This is ignored by Flow but retained for your information.",
          "attributes": [],
          "type": "string",
          "required": true
        },
        {
          "name": "body_url",
          "annotations": [],
          "description": "If the returned body was > 1k, the full contents is stored at this URL.",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "name": "status",
          "annotations": [],
          "description": "The HTTP Status Code from the webhook URL",
          "attributes": [],
          "type": "integer",
          "required": true
        }
      ]
    },
    {
      "plural": "webhook_settings",
      "name": "webhook_settings",
      "description": "Sets organization level settings to determine things like how many retries on delivery, how long we wait, etc. By default, we will attempt delivery up to 6 times, using exponential backoff with a see of 1 minute (60k ms) - which means that we will retry over the course of approximately an hour before giving up.",
      "attributes": [],
      "fields": [
        {
          "name": "secret",
          "annotations": [],
          "description": "The string used to sign webhook requests",
          "attributes": [],
          "type": "string",
          "required": false
        },
        {
          "default": "6",
          "name": "retry_max_attempts",
          "annotations": [],
          "description": "The maximum number of times to attempt a delivery until a successful response",
          "attributes": [],
          "type": "long",
          "minimum": 1,
          "required": true
        },
        {
          "default": "60000",
          "name": "retry_sleep_ms",
          "annotations": [],
          "description": "The amount of time to wait in milliseconds between failed delivery attempts",
          "attributes": [],
          "type": "long",
          "minimum": 0,
          "required": true
        },
        {
          "default": "0",
          "name": "sleep_ms",
          "annotations": [],
          "description": "The amount of time to wait between successful delivery attempts. Note this is a global setting, and thus we recommend a low value such as 100ms",
          "attributes": [],
          "type": "long",
          "minimum": 0,
          "required": true
        }
      ]
    },
    {
      "plural": "zones",
      "name": "zone",
      "attributes": [],
      "fields": [
        {
          "name": "postals",
          "annotations": [],
          "description": "Group of postal code prefixes included in this zone",
          "attributes": [],
          "type": "[string]",
          "required": false,
          "example": "[M9P,M9R,M9V,M9W]"
        },
        {
          "name": "provinces",
          "annotations": [],
          "description": "Group of provinces included in this zone. Values should in ISO 3166-2 province code format.",
          "attributes": [],
          "type": "[string]",
          "required": false,
          "example": "[AB, ON]"
        },
        {
          "name": "country",
          "annotations": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "attributes": [],
          "type": "string",
          "required": true,
          "example": "CAN"
        }
      ]
    }
  ],
  "unions": [
    {
      "types": [
        {
          "discriminator_value": "adyen_identify_shopper_data",
          "attributes": [],
          "type": "adyen_identify_shopper_data"
        },
        {
          "discriminator_value": "adyen_challenge_shopper_data",
          "attributes": [],
          "type": "adyen_challenge_shopper_data"
        }
      ],
      "plural": "adyen_native_data",
      "name": "adyen_native_data",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "allocation_detail_component",
          "attributes": [],
          "type": "allocation_detail_component"
        },
        {
          "discriminator_value": "allocation_levy_component",
          "attributes": [],
          "type": "allocation_levy_component"
        }
      ],
      "plural": "allocation_components",
      "name": "allocation_component",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "allocation_line_detail",
          "attributes": [],
          "type": "allocation_line_detail"
        },
        {
          "discriminator_value": "allocation_order_detail",
          "attributes": [],
          "type": "allocation_order_detail"
        }
      ],
      "plural": "allocation_details",
      "name": "allocation_detail",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "card_authorization",
          "attributes": [],
          "type": "card_authorization"
        },
        {
          "discriminator_value": "online_authorization",
          "attributes": [],
          "type": "online_authorization"
        }
      ],
      "plural": "authorizations",
      "name": "authorization",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "authorization_copy_form",
          "description": "Creates a new authorization by copying an existing one.",
          "attributes": [],
          "type": "authorization_copy_form"
        },
        {
          "discriminator_value": "direct_authorization_form",
          "description": "Enables card payments",
          "attributes": [],
          "type": "direct_authorization_form"
        },
        {
          "discriminator_value": "merchant_of_record_authorization_form",
          "description": "Enables card payments with Flow as Merchant of Record",
          "attributes": [],
          "type": "merchant_of_record_authorization_form"
        },
        {
          "discriminator_value": "paypal_authorization_form",
          "description": "Enables authorization via PayPal",
          "attributes": [],
          "type": "paypal_authorization_form"
        },
        {
          "discriminator_value": "redirect_authorization_form",
          "description": "Enables authorizations via redirect-based alternative payment methods, such as AliPay.",
          "attributes": [],
          "type": "redirect_authorization_form"
        },
        {
          "discriminator_value": "inline_authorization_form",
          "description": "Enables authorizations via inline widget alternative payment methods, such as Klarna.",
          "attributes": [],
          "type": "inline_authorization_form"
        },
        {
          "discriminator_value": "ach_authorization_form",
          "description": "Enables authorizations via ACH (Automated Clearing House) bank transfer.",
          "attributes": [],
          "type": "ach_authorization_form"
        },
        {
          "discriminator_value": "card_payment_source_authorization_form",
          "description": "Enables authorizations via card payment source.",
          "attributes": [],
          "type": "card_payment_source_authorization_form"
        }
      ],
      "plural": "authorization_forms",
      "name": "authorization_form",
      "description": "Flow provides several different options for creating an authorization",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "google_pay_authorization_payload",
          "attributes": [],
          "type": "google_pay_authorization_payload"
        },
        {
          "discriminator_value": "apple_pay_merchant_validation_payload",
          "attributes": [],
          "type": "apple_pay_merchant_validation_payload"
        }
      ],
      "plural": "authorization_payload_parameterses",
      "name": "authorization_payload_parameters",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "authorization_result_action_get",
          "attributes": [],
          "type": "authorization_result_action_get"
        },
        {
          "discriminator_value": "authorization_result_action_post",
          "attributes": [],
          "type": "authorization_result_action_post"
        },
        {
          "discriminator_value": "authorization_result_action_wait",
          "attributes": [],
          "type": "authorization_result_action_wait"
        },
        {
          "discriminator_value": "authorization_result_action_native",
          "attributes": [],
          "type": "authorization_result_action_native"
        }
      ],
      "plural": "authorization_result_actions",
      "name": "authorization_result_action",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "adyen_native_action_details",
          "attributes": [],
          "type": "adyen_native_action_details"
        },
        {
          "discriminator_value": "stripe_authorization_result_action_details",
          "attributes": [],
          "type": "stripe_authorization_result_action_details"
        }
      ],
      "plural": "authorization_result_action_detailses",
      "name": "authorization_result_action_details",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "structured",
          "attributes": [],
          "type": "available_filter_structured"
        },
        {
          "discriminator_value": "unstructured",
          "attributes": [],
          "type": "available_filter_unstructured"
        }
      ],
      "plural": "available_filters",
      "name": "available_filter",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "checkout_token_order_form",
          "attributes": [],
          "type": "checkout_token_order_form"
        },
        {
          "default": true,
          "discriminator_value": "checkout_token_reference_form",
          "attributes": [],
          "type": "checkout_token_reference_form"
        }
      ],
      "plural": "checkout_token_forms",
      "name": "checkout_token_form",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "direct_debit",
          "attributes": [],
          "type": "direct_debit"
        }
      ],
      "plural": "confirmation_detailses",
      "name": "confirmation_details",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "item",
          "attributes": [],
          "type": "consumer_invoice_line_item"
        },
        {
          "discriminator_value": "discount",
          "attributes": [],
          "type": "consumer_invoice_line_discount"
        },
        {
          "discriminator_value": "shipping",
          "attributes": [],
          "type": "consumer_invoice_line_shipping"
        }
      ],
      "plural": "consumer_invoice_lines",
      "name": "consumer_invoice_line",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "item",
          "attributes": [],
          "type": "consumer_invoice_line_item_form"
        },
        {
          "discriminator_value": "discount",
          "attributes": [],
          "type": "consumer_invoice_line_discount_form"
        },
        {
          "discriminator_value": "shipping",
          "attributes": [],
          "type": "consumer_invoice_line_shipping_form"
        }
      ],
      "plural": "consumer_invoice_line_forms",
      "name": "consumer_invoice_line_form",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "digital_delivery",
          "description": "Represents items that can be delivered electronically (e.g. a gift card delivered via email)",
          "attributes": [],
          "type": "digital_delivery"
        },
        {
          "default": true,
          "discriminator_value": "physical_delivery",
          "description": "Represents items that are physical and require shipment",
          "attributes": [],
          "type": "physical_delivery"
        }
      ],
      "plural": "deliveries",
      "name": "delivery",
      "description": "A delivery represents a group of items that will be delivered together - presenting a single price and delivery time frame, where applicable, to the user. Deliveries commonly are created based on the type of item and, for physical goods, their center of origin",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "deminimis_simple",
          "attributes": [],
          "type": "deminimis_simple"
        },
        {
          "discriminator_value": "deminimis_per_item",
          "attributes": [],
          "type": "deminimis_per_item"
        }
      ],
      "plural": "deminimises",
      "name": "deminimis",
      "description": "De Minimis describes the country specific rules for exactly how tax and duties are calculated, as well as any exemptions that apply. See https://en.wikipedia.org/wiki/De_minimis for more information.",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "discount_offer_fixed",
          "attributes": [],
          "type": "discount_offer_fixed"
        },
        {
          "discriminator_value": "discount_offer_percent",
          "attributes": [],
          "type": "discount_offer_percent"
        }
      ],
      "plural": "discount_offers",
      "name": "discount_offer",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "catalog_item_document",
          "attributes": [],
          "type": "catalog_item_document"
        },
        {
          "discriminator_value": "harmonization_document",
          "attributes": [],
          "type": "harmonization_document"
        }
      ],
      "plural": "documents",
      "name": "document",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "refund",
          "attributes": [],
          "type": "email_notification_data_refund"
        }
      ],
      "plural": "email_notification_data",
      "name": "email_notification_data",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "attribute_upserted",
          "attributes": [],
          "type": "attribute_upserted"
        },
        {
          "discriminator_value": "attribute_deleted",
          "attributes": [],
          "type": "attribute_deleted"
        },
        {
          "discriminator_value": "attribute_upserted_v2",
          "attributes": [],
          "type": "attribute_upserted_v2"
        },
        {
          "discriminator_value": "attribute_deleted_v2",
          "attributes": [],
          "type": "attribute_deleted_v2"
        },
        {
          "discriminator_value": "catalog_upserted",
          "attributes": [],
          "type": "catalog_upserted"
        },
        {
          "discriminator_value": "catalog_deleted",
          "attributes": [],
          "type": "catalog_deleted"
        },
        {
          "discriminator_value": "subcatalog_upserted",
          "attributes": [],
          "type": "subcatalog_upserted"
        },
        {
          "discriminator_value": "subcatalog_deleted",
          "attributes": [],
          "type": "subcatalog_deleted"
        },
        {
          "discriminator_value": "catalog_item_upserted",
          "attributes": [],
          "type": "catalog_item_upserted"
        },
        {
          "discriminator_value": "catalog_item_deleted",
          "attributes": [],
          "type": "catalog_item_deleted"
        },
        {
          "discriminator_value": "catalog_item_upserted_v2",
          "attributes": [],
          "type": "catalog_item_upserted_v2"
        },
        {
          "discriminator_value": "catalog_item_deleted_v2",
          "attributes": [],
          "type": "catalog_item_deleted_v2"
        },
        {
          "discriminator_value": "subcatalog_item_upserted",
          "attributes": [],
          "type": "subcatalog_item_upserted"
        },
        {
          "discriminator_value": "subcatalog_item_deleted",
          "attributes": [],
          "type": "subcatalog_item_deleted"
        },
        {
          "discriminator_value": "b2b_invoice_upserted",
          "attributes": [],
          "type": "b2b_invoice_upserted"
        },
        {
          "discriminator_value": "b2b_invoice_deleted",
          "attributes": [],
          "type": "b2b_invoice_deleted"
        },
        {
          "discriminator_value": "b2b_credit_memo_upserted",
          "attributes": [],
          "type": "b2b_credit_memo_upserted"
        },
        {
          "discriminator_value": "b2b_credit_memo_deleted",
          "attributes": [],
          "type": "b2b_credit_memo_deleted"
        },
        {
          "discriminator_value": "consumer_invoice_upserted",
          "attributes": [],
          "type": "consumer_invoice_upserted"
        },
        {
          "discriminator_value": "consumer_invoice_deleted",
          "attributes": [],
          "type": "consumer_invoice_deleted"
        },
        {
          "discriminator_value": "credit_memo_upserted",
          "attributes": [],
          "type": "credit_memo_upserted"
        },
        {
          "discriminator_value": "credit_memo_deleted",
          "attributes": [],
          "type": "credit_memo_deleted"
        },
        {
          "discriminator_value": "crossdock_shipment_upserted",
          "attributes": [],
          "type": "crossdock_shipment_upserted"
        },
        {
          "discriminator_value": "rate_deleted",
          "attributes": [],
          "type": "rate_deleted"
        },
        {
          "discriminator_value": "rate_upserted",
          "attributes": [],
          "type": "rate_upserted"
        },
        {
          "discriminator_value": "rate_deleted_v3",
          "attributes": [],
          "type": "rate_deleted_v3"
        },
        {
          "discriminator_value": "rate_upserted_v3",
          "attributes": [],
          "type": "rate_upserted_v3"
        },
        {
          "discriminator_value": "customer_upserted",
          "attributes": [],
          "type": "customer_upserted"
        },
        {
          "discriminator_value": "customer_deleted",
          "attributes": [],
          "type": "customer_deleted"
        },
        {
          "discriminator_value": "customer_address_book_contact_upserted",
          "attributes": [],
          "type": "customer_address_book_contact_upserted"
        },
        {
          "discriminator_value": "customer_address_book_contact_deleted",
          "attributes": [],
          "type": "customer_address_book_contact_deleted"
        },
        {
          "discriminator_value": "email_notification_upserted",
          "attributes": [],
          "type": "email_notification_upserted"
        },
        {
          "discriminator_value": "email_notification_deleted",
          "attributes": [],
          "type": "email_notification_deleted"
        },
        {
          "discriminator_value": "available_promotions_upserted",
          "attributes": [],
          "type": "available_promotions_upserted"
        },
        {
          "discriminator_value": "available_promotions_deleted",
          "attributes": [],
          "type": "available_promotions_deleted"
        },
        {
          "discriminator_value": "available_promotions_upserted_v2",
          "attributes": [],
          "type": "available_promotions_upserted_v2"
        },
        {
          "discriminator_value": "available_promotions_deleted_v2",
          "attributes": [],
          "type": "available_promotions_deleted_v2"
        },
        {
          "discriminator_value": "allocation_deleted_v2",
          "attributes": [],
          "type": "allocation_deleted_v2"
        },
        {
          "discriminator_value": "allocation_upserted_v2",
          "attributes": [],
          "type": "allocation_upserted_v2"
        },
        {
          "discriminator_value": "currency_format_deleted",
          "attributes": [],
          "type": "currency_format_deleted"
        },
        {
          "discriminator_value": "currency_format_upserted",
          "attributes": [],
          "type": "currency_format_upserted"
        },
        {
          "discriminator_value": "experience_deleted",
          "attributes": [],
          "type": "experience_deleted"
        },
        {
          "discriminator_value": "experience_upserted",
          "attributes": [],
          "type": "experience_upserted"
        },
        {
          "discriminator_value": "experience_deleted_v2",
          "attributes": [],
          "type": "experience_deleted_v2"
        },
        {
          "discriminator_value": "experience_upserted_v2",
          "attributes": [],
          "type": "experience_upserted_v2"
        },
        {
          "discriminator_value": "experience_price_book_mapping_deleted",
          "attributes": [],
          "type": "experience_price_book_mapping_deleted"
        },
        {
          "discriminator_value": "experience_price_book_mapping_upserted",
          "attributes": [],
          "type": "experience_price_book_mapping_upserted"
        },
        {
          "discriminator_value": "experience_logistics_settings_upserted",
          "attributes": [],
          "type": "experience_logistics_settings_upserted"
        },
        {
          "discriminator_value": "experience_logistics_settings_deleted",
          "attributes": [],
          "type": "experience_logistics_settings_deleted"
        },
        {
          "discriminator_value": "item_margin_deleted",
          "attributes": [],
          "type": "item_margin_deleted"
        },
        {
          "discriminator_value": "item_margin_upserted",
          "attributes": [],
          "type": "item_margin_upserted"
        },
        {
          "discriminator_value": "item_sales_margin_deleted",
          "attributes": [],
          "type": "item_sales_margin_deleted"
        },
        {
          "discriminator_value": "item_sales_margin_upserted",
          "attributes": [],
          "type": "item_sales_margin_upserted"
        },
        {
          "discriminator_value": "label_format_deleted",
          "attributes": [],
          "type": "label_format_deleted"
        },
        {
          "discriminator_value": "label_format_upserted",
          "attributes": [],
          "type": "label_format_upserted"
        },
        {
          "discriminator_value": "order_deleted",
          "attributes": [],
          "type": "order_deleted"
        },
        {
          "discriminator_value": "order_upserted",
          "attributes": [],
          "type": "order_upserted"
        },
        {
          "discriminator_value": "order_deleted_v2",
          "attributes": [],
          "type": "order_deleted_v2"
        },
        {
          "discriminator_value": "order_upserted_v2",
          "attributes": [],
          "type": "order_upserted_v2"
        },
        {
          "discriminator_value": "order_identifier_deleted",
          "attributes": [],
          "type": "order_identifier_deleted"
        },
        {
          "discriminator_value": "order_identifier_upserted",
          "attributes": [],
          "type": "order_identifier_upserted"
        },
        {
          "discriminator_value": "order_identifier_deleted_v2",
          "attributes": [],
          "type": "order_identifier_deleted_v2"
        },
        {
          "discriminator_value": "order_identifier_upserted_v2",
          "attributes": [],
          "type": "order_identifier_upserted_v2"
        },
        {
          "discriminator_value": "order_identifier_upserted_v3",
          "attributes": [],
          "type": "order_identifier_upserted_v3"
        },
        {
          "discriminator_value": "pricing_deleted",
          "attributes": [],
          "type": "pricing_deleted"
        },
        {
          "discriminator_value": "pricing_upserted",
          "attributes": [],
          "type": "pricing_upserted"
        },
        {
          "discriminator_value": "order_service_change_request",
          "attributes": [],
          "type": "order_service_change_request"
        },
        {
          "discriminator_value": "fraud_status_changed",
          "attributes": [],
          "type": "fraud_status_changed"
        },
        {
          "discriminator_value": "center_upserted",
          "attributes": [],
          "type": "center_upserted"
        },
        {
          "discriminator_value": "center_deleted",
          "attributes": [],
          "type": "center_deleted"
        },
        {
          "discriminator_value": "shipping_configuration_upserted",
          "attributes": [],
          "type": "shipping_configuration_upserted"
        },
        {
          "discriminator_value": "shipping_configuration_deleted",
          "attributes": [],
          "type": "shipping_configuration_deleted"
        },
        {
          "discriminator_value": "tier_upserted_v2",
          "attributes": [],
          "type": "tier_upserted_v2"
        },
        {
          "discriminator_value": "tier_deleted_v2",
          "attributes": [],
          "type": "tier_deleted_v2"
        },
        {
          "discriminator_value": "shipping_lane_upserted",
          "attributes": [],
          "type": "shipping_lane_upserted"
        },
        {
          "discriminator_value": "shipping_lane_deleted",
          "attributes": [],
          "type": "shipping_lane_deleted"
        },
        {
          "discriminator_value": "shipping_configuration_item_availability_upserted",
          "attributes": [],
          "type": "shipping_configuration_item_availability_upserted"
        },
        {
          "discriminator_value": "shipping_configuration_item_availability_deleted",
          "attributes": [],
          "type": "shipping_configuration_item_availability_deleted"
        },
        {
          "discriminator_value": "shipping_configuration_item_shipping_pricing_upserted",
          "attributes": [],
          "type": "shipping_configuration_item_shipping_pricing_upserted"
        },
        {
          "discriminator_value": "shipping_configuration_item_shipping_pricing_deleted",
          "attributes": [],
          "type": "shipping_configuration_item_shipping_pricing_deleted"
        },
        {
          "discriminator_value": "hs6_code_upserted",
          "attributes": [],
          "type": "hs6_code_upserted"
        },
        {
          "discriminator_value": "hs6_code_deleted",
          "attributes": [],
          "type": "hs6_code_deleted"
        },
        {
          "discriminator_value": "hs10_code_upserted",
          "attributes": [],
          "type": "hs10_code_upserted"
        },
        {
          "discriminator_value": "hs10_code_deleted",
          "attributes": [],
          "type": "hs10_code_deleted"
        },
        {
          "discriminator_value": "item_origin_upserted",
          "attributes": [],
          "type": "item_origin_upserted"
        },
        {
          "discriminator_value": "item_origin_deleted",
          "attributes": [],
          "type": "item_origin_deleted"
        },
        {
          "discriminator_value": "harmonized_landed_cost_upserted",
          "attributes": [],
          "type": "harmonized_landed_cost_upserted"
        },
        {
          "discriminator_value": "fully_harmonized_item_upserted",
          "attributes": [],
          "type": "fully_harmonized_item_upserted"
        },
        {
          "discriminator_value": "rule_upserted",
          "attributes": [],
          "type": "rule_upserted"
        },
        {
          "discriminator_value": "rule_deleted",
          "attributes": [],
          "type": "rule_deleted"
        },
        {
          "discriminator_value": "serial_upserted",
          "attributes": [],
          "type": "serial_upserted"
        },
        {
          "discriminator_value": "serial_deleted",
          "attributes": [],
          "type": "serial_deleted"
        },
        {
          "discriminator_value": "snapshot_upserted",
          "attributes": [],
          "type": "snapshot_upserted"
        },
        {
          "discriminator_value": "snapshot_deleted",
          "attributes": [],
          "type": "snapshot_deleted"
        },
        {
          "discriminator_value": "label_upserted",
          "attributes": [],
          "type": "label_upserted"
        },
        {
          "discriminator_value": "label_deleted_v2",
          "attributes": [],
          "type": "label_deleted_v2"
        },
        {
          "discriminator_value": "label_upserted_v2",
          "attributes": [],
          "type": "label_upserted_v2"
        },
        {
          "discriminator_value": "notification_upserted",
          "attributes": [],
          "type": "notification_upserted"
        },
        {
          "discriminator_value": "notification_deleted",
          "attributes": [],
          "type": "notification_deleted"
        },
        {
          "discriminator_value": "manifested_label_upserted",
          "attributes": [],
          "type": "manifested_label_upserted"
        },
        {
          "discriminator_value": "manifested_label_deleted",
          "attributes": [],
          "type": "manifested_label_deleted"
        },
        {
          "discriminator_value": "local_item_upserted",
          "attributes": [],
          "type": "local_item_upserted"
        },
        {
          "discriminator_value": "local_item_deleted",
          "attributes": [],
          "type": "local_item_deleted"
        },
        {
          "discriminator_value": "checkout_optin_responses_upserted",
          "attributes": [],
          "type": "checkout_optin_responses_upserted"
        },
        {
          "discriminator_value": "checkout_optin_responses_deleted",
          "attributes": [],
          "type": "checkout_optin_responses_deleted"
        },
        {
          "discriminator_value": "browse_optin_responses_upserted",
          "attributes": [],
          "type": "browse_optin_responses_upserted"
        },
        {
          "discriminator_value": "browse_optin_responses_deleted",
          "attributes": [],
          "type": "browse_optin_responses_deleted"
        },
        {
          "discriminator_value": "order_placed",
          "attributes": [],
          "type": "order_placed"
        },
        {
          "discriminator_value": "order_placed_v2",
          "attributes": [],
          "type": "order_placed_v2"
        },
        {
          "discriminator_value": "ready_to_fulfill",
          "attributes": [],
          "type": "ready_to_fulfill"
        },
        {
          "discriminator_value": "membership_upserted_v2",
          "attributes": [],
          "type": "membership_upserted_v2"
        },
        {
          "discriminator_value": "membership_deleted_v2",
          "attributes": [],
          "type": "membership_deleted_v2"
        },
        {
          "discriminator_value": "organization_upserted",
          "attributes": [],
          "type": "organization_upserted"
        },
        {
          "discriminator_value": "organization_deleted",
          "attributes": [],
          "type": "organization_deleted"
        },
        {
          "discriminator_value": "organization_upserted_v2",
          "attributes": [],
          "type": "organization_upserted_v2"
        },
        {
          "discriminator_value": "organization_deleted_v2",
          "attributes": [],
          "type": "organization_deleted_v2"
        },
        {
          "discriminator_value": "organization_short_id_upserted",
          "attributes": [],
          "type": "organization_short_id_upserted"
        },
        {
          "discriminator_value": "organization_short_id_deleted",
          "attributes": [],
          "type": "organization_short_id_deleted"
        },
        {
          "discriminator_value": "organization_default_configurations_upserted",
          "attributes": [],
          "type": "organization_default_configurations_upserted"
        },
        {
          "discriminator_value": "organization_default_configurations_deleted",
          "attributes": [],
          "type": "organization_default_configurations_deleted"
        },
        {
          "discriminator_value": "ecommerce_platform_upserted",
          "attributes": [],
          "type": "ecommerce_platform_upserted"
        },
        {
          "discriminator_value": "ecommerce_platform_deleted",
          "attributes": [],
          "type": "ecommerce_platform_deleted"
        },
        {
          "discriminator_value": "authorization_deleted_v2",
          "attributes": [],
          "type": "authorization_deleted_v2"
        },
        {
          "discriminator_value": "authorization_status_changed",
          "description": "Trigger whenever an auth status changes (e.g. from pending to authorized). Common use case is to subscribe to this event to know when an auth is cleared from fraud review.",
          "attributes": [],
          "type": "authorization_status_changed"
        },
        {
          "discriminator_value": "card_authorization_upserted_v2",
          "attributes": [],
          "type": "card_authorization_upserted_v2"
        },
        {
          "discriminator_value": "card_authorization_deleted_v2",
          "attributes": [],
          "type": "card_authorization_deleted_v2"
        },
        {
          "discriminator_value": "online_authorization_upserted_v2",
          "attributes": [],
          "type": "online_authorization_upserted_v2"
        },
        {
          "discriminator_value": "online_authorization_deleted_v2",
          "attributes": [],
          "type": "online_authorization_deleted_v2"
        },
        {
          "discriminator_value": "capture_upserted_v2",
          "attributes": [],
          "type": "capture_upserted_v2"
        },
        {
          "discriminator_value": "capture_deleted",
          "attributes": [],
          "type": "capture_deleted"
        },
        {
          "discriminator_value": "card_upserted_v2",
          "attributes": [],
          "type": "card_upserted_v2"
        },
        {
          "discriminator_value": "card_deleted",
          "attributes": [],
          "type": "card_deleted"
        },
        {
          "discriminator_value": "payment_upserted",
          "attributes": [],
          "type": "payment_upserted"
        },
        {
          "discriminator_value": "payment_deleted",
          "attributes": [],
          "type": "payment_deleted"
        },
        {
          "discriminator_value": "refund_upserted_v2",
          "attributes": [],
          "type": "refund_upserted_v2"
        },
        {
          "discriminator_value": "refund_deleted_v2",
          "attributes": [],
          "type": "refund_deleted_v2"
        },
        {
          "discriminator_value": "refund_capture_upserted_v2",
          "attributes": [],
          "type": "refund_capture_upserted_v2"
        },
        {
          "discriminator_value": "reversal_upserted",
          "attributes": [],
          "type": "reversal_upserted"
        },
        {
          "discriminator_value": "reversal_deleted",
          "attributes": [],
          "type": "reversal_deleted"
        },
        {
          "discriminator_value": "capture_identifier_upserted",
          "attributes": [],
          "type": "capture_identifier_upserted"
        },
        {
          "discriminator_value": "capture_identifier_deleted",
          "attributes": [],
          "type": "capture_identifier_deleted"
        },
        {
          "discriminator_value": "refund_identifier_upserted",
          "attributes": [],
          "type": "refund_identifier_upserted"
        },
        {
          "discriminator_value": "refund_identifier_deleted",
          "attributes": [],
          "type": "refund_identifier_deleted"
        },
        {
          "discriminator_value": "virtual_card_capture_upserted",
          "attributes": [],
          "type": "virtual_card_capture_upserted"
        },
        {
          "discriminator_value": "virtual_card_capture_deleted",
          "attributes": [],
          "type": "virtual_card_capture_deleted"
        },
        {
          "discriminator_value": "virtual_card_refund_upserted",
          "attributes": [],
          "type": "virtual_card_refund_upserted"
        },
        {
          "discriminator_value": "virtual_card_refund_deleted",
          "attributes": [],
          "type": "virtual_card_refund_deleted"
        },
        {
          "discriminator_value": "price_book_upserted",
          "attributes": [],
          "type": "price_book_upserted"
        },
        {
          "discriminator_value": "price_book_deleted",
          "attributes": [],
          "type": "price_book_deleted"
        },
        {
          "discriminator_value": "price_book_item_upserted",
          "attributes": [],
          "type": "price_book_item_upserted"
        },
        {
          "discriminator_value": "price_book_item_deleted",
          "attributes": [],
          "type": "price_book_item_deleted"
        },
        {
          "discriminator_value": "organization_rates_published",
          "attributes": [],
          "type": "organization_rates_published"
        },
        {
          "discriminator_value": "ratecard_lane_upserted",
          "attributes": [],
          "type": "ratecard_lane_upserted"
        },
        {
          "discriminator_value": "ratecard_lane_deleted",
          "attributes": [],
          "type": "ratecard_lane_deleted"
        },
        {
          "discriminator_value": "ratecard_upserted",
          "attributes": [],
          "type": "ratecard_upserted"
        },
        {
          "discriminator_value": "ratecard_deleted",
          "attributes": [],
          "type": "ratecard_deleted"
        },
        {
          "discriminator_value": "return_upserted",
          "attributes": [],
          "type": "return_upserted"
        },
        {
          "discriminator_value": "return_deleted",
          "attributes": [],
          "type": "return_deleted"
        },
        {
          "discriminator_value": "shopify_localization_setting_upserted",
          "attributes": [],
          "type": "shopify_localization_setting_upserted"
        },
        {
          "discriminator_value": "shopify_localization_setting_deleted",
          "attributes": [],
          "type": "shopify_localization_setting_deleted"
        },
        {
          "discriminator_value": "targeting_item_upserted",
          "attributes": [],
          "type": "targeting_item_upserted"
        },
        {
          "discriminator_value": "targeting_item_upserted_v2",
          "attributes": [],
          "type": "targeting_item_upserted_v2"
        },
        {
          "discriminator_value": "targeting_item_deleted",
          "attributes": [],
          "type": "targeting_item_deleted"
        },
        {
          "discriminator_value": "targeting_item_deleted_v3",
          "attributes": [],
          "type": "targeting_item_deleted_v3"
        },
        {
          "discriminator_value": "tracking_label_event_upserted",
          "attributes": [],
          "type": "tracking_label_event_upserted"
        }
      ],
      "plural": "events",
      "name": "event",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "webhook"
          }
        }
      ],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "card",
          "attributes": [],
          "type": "card"
        },
        {
          "discriminator_value": "card_reference",
          "attributes": [],
          "type": "card_reference"
        },
        {
          "discriminator_value": "card_summary",
          "attributes": [],
          "type": "card_summary"
        }
      ],
      "plural": "expandable_cards",
      "name": "expandable_card",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "center",
          "attributes": [],
          "type": "center"
        },
        {
          "discriminator_value": "center_reference",
          "attributes": [],
          "type": "center_reference"
        }
      ],
      "plural": "expandable_centers",
      "name": "expandable_center",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "experience",
          "attributes": [],
          "type": "experience"
        },
        {
          "discriminator_value": "experience_reference",
          "attributes": [],
          "type": "experience_reference"
        }
      ],
      "plural": "expandable_experiences",
      "name": "expandable_experience",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "order",
          "attributes": [],
          "type": "order"
        },
        {
          "discriminator_value": "order_reference",
          "attributes": [],
          "type": "order_reference"
        }
      ],
      "plural": "expandable_orders",
      "name": "expandable_order",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "organization",
          "attributes": [],
          "type": "organization"
        },
        {
          "discriminator_value": "organization_reference",
          "attributes": [],
          "type": "organization_reference"
        }
      ],
      "plural": "expandable_organizations",
      "name": "expandable_organization",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "subcatalog",
          "attributes": [],
          "type": "subcatalog"
        },
        {
          "discriminator_value": "subcatalog_reference",
          "attributes": [],
          "type": "subcatalog_reference"
        }
      ],
      "plural": "expandable_subcatalogs",
      "name": "expandable_subcatalog",
      "description": "A subcatalog can be represented with just it's ID, or the entire model",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "user",
          "attributes": [],
          "type": "user"
        },
        {
          "discriminator_value": "user_reference",
          "attributes": [],
          "type": "user_reference"
        }
      ],
      "plural": "expandable_users",
      "name": "expandable_user",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "export_delivery_email",
          "attributes": [],
          "type": "export_delivery_email"
        }
      ],
      "plural": "export_deliveries",
      "name": "export_delivery",
      "description": "Export deliveries represent actions to take once a requested export has completed. A common pattern would be to request delivery of the export via email - you will then receive an email notification once the requested export is ready",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "account_transactions_export_type",
          "attributes": [],
          "type": "account_transactions_export_type"
        },
        {
          "discriminator_value": "account_orders_export_type",
          "attributes": [],
          "type": "account_orders_export_type"
        },
        {
          "discriminator_value": "analytics_export_type",
          "attributes": [],
          "type": "analytics_export_type"
        },
        {
          "discriminator_value": "catalog_item_export_type",
          "attributes": [],
          "type": "catalog_item_export_type"
        },
        {
          "discriminator_value": "experience_export_type",
          "attributes": [],
          "type": "experience_export_type"
        },
        {
          "discriminator_value": "harmonization_overview_export_type",
          "attributes": [],
          "type": "harmonization_overview_export_type"
        },
        {
          "discriminator_value": "harmonization_hs6_export_type",
          "attributes": [],
          "type": "harmonization_hs6_export_type"
        },
        {
          "discriminator_value": "harmonization_hs10_export_type",
          "attributes": [],
          "type": "harmonization_hs10_export_type"
        },
        {
          "discriminator_value": "unharmonized_item_export_type",
          "attributes": [],
          "type": "unharmonized_item_export_type"
        },
        {
          "discriminator_value": "harmonization_landed_cost_export_type",
          "attributes": [],
          "type": "harmonization_landed_cost_export_type"
        },
        {
          "discriminator_value": "order_export_type",
          "attributes": [],
          "type": "order_export_type"
        },
        {
          "discriminator_value": "price_book_item_export_type",
          "attributes": [],
          "type": "price_book_item_export_type"
        },
        {
          "discriminator_value": "solidus_product_export_type",
          "attributes": [],
          "type": "solidus_product_export_type"
        },
        {
          "discriminator_value": "solidus_variant_export_type",
          "attributes": [],
          "type": "solidus_variant_export_type"
        },
        {
          "discriminator_value": "localized_item_prices_export_type",
          "attributes": [],
          "type": "localized_item_prices_export_type"
        }
      ],
      "plural": "export_types",
      "name": "export_type",
      "description": "Defines the specific export data that defines which records are exported and into which format",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "required",
          "attributes": [],
          "type": "field_validation_required"
        },
        {
          "discriminator_value": "min",
          "attributes": [],
          "type": "field_validation_min"
        },
        {
          "discriminator_value": "max",
          "attributes": [],
          "type": "field_validation_max"
        },
        {
          "discriminator_value": "pattern",
          "attributes": [],
          "type": "field_validation_pattern"
        }
      ],
      "plural": "field_validation_rules",
      "name": "field_validation_rule",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "flow_user_role",
          "attributes": [],
          "type": "flow_user_role"
        },
        {
          "discriminator_value": "flow_addon_role",
          "attributes": [],
          "type": "flow_addon_role"
        }
      ],
      "plural": "flow_roles",
      "name": "flow_role",
      "description": "All roles available to attach to a user.",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "stripe_authentication_data",
          "attributes": [],
          "type": "stripe_authentication_data"
        }
      ],
      "plural": "gateway_authentication_data",
      "name": "gateway_authentication_data",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "stripe_authentication_data_form",
          "attributes": [],
          "type": "stripe_authentication_data_form"
        }
      ],
      "plural": "gateway_authentication_data_forms",
      "name": "gateway_authentication_data_form",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "input_specification_limitation_max",
          "attributes": [],
          "type": "input_specification_limitation_max"
        }
      ],
      "plural": "input_specification_limitations",
      "name": "input_specification_limitation",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "inventory_backorder",
          "description": "Enables backorders, setting an optional number of units that we allow for backorder. For example, a backorder w/ quantity 10 will enable selling until the actual inventory quantity is -10.",
          "attributes": [],
          "type": "inventory_backorder"
        },
        {
          "discriminator_value": "inventory_stock",
          "description": "Treats inventory as available as long as the actual inventory quantity is > the specified quantity. A common use case is to set quantity to zero to indicate availability as long as there is at least 1 unit available.",
          "attributes": [],
          "type": "inventory_stock"
        },
        {
          "discriminator_value": "inventory_unlimited",
          "description": "Items affected with rules pursuing an unlimited strategy will always be available",
          "attributes": [],
          "type": "inventory_unlimited"
        }
      ],
      "plural": "inventory_strategies",
      "name": "inventory_strategy",
      "description": "Types of rules used to apply on inventory to calculate available quantity",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "localized_item_price",
          "attributes": [],
          "type": "localized_item_price"
        },
        {
          "discriminator_value": "localized_item_vat",
          "attributes": [],
          "type": "localized_item_vat"
        },
        {
          "discriminator_value": "localized_item_duty",
          "attributes": [],
          "type": "localized_item_duty"
        },
        {
          "discriminator_value": "localized_total",
          "attributes": [],
          "type": "localized_total"
        }
      ],
      "plural": "localized_prices",
      "name": "localized_price",
      "description": "The localized prices for an item are returned as a list - the key of each element is defined here",
      "attributes": [],
      "discriminator": "key"
    },
    {
      "types": [
        {
          "discriminator_value": "paypal_authorization_details",
          "attributes": [],
          "type": "paypal_authorization_details"
        },
        {
          "discriminator_value": "redirect_authorization_details",
          "attributes": [],
          "type": "redirect_authorization_details"
        },
        {
          "discriminator_value": "inline_authorization_details",
          "attributes": [],
          "type": "inline_authorization_details"
        }
      ],
      "plural": "online_authorization_detailses",
      "name": "online_authorization_details",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "uuid",
          "attributes": [],
          "type": "order_number_generator_uuid"
        },
        {
          "discriminator_value": "hexadecimal",
          "attributes": [],
          "type": "order_number_generator_hexadecimal"
        },
        {
          "discriminator_value": "prefix_suffix",
          "attributes": [],
          "type": "order_number_generator_prefix_suffix"
        }
      ],
      "plural": "order_number_generators",
      "name": "order_number_generator",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "free_shipping_order_promotion",
          "attributes": [],
          "type": "free_shipping_order_promotion"
        }
      ],
      "plural": "order_promotions",
      "name": "order_promotion",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "free_shipping_order_promotion_form",
          "attributes": [],
          "type": "free_shipping_order_promotion_form"
        }
      ],
      "plural": "order_promotion_forms",
      "name": "order_promotion_form",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "commercial_invoice_fee",
          "attributes": [],
          "type": "commercial_invoice_fee"
        },
        {
          "discriminator_value": "inbound_carton_fee",
          "attributes": [],
          "type": "inbound_carton_fee"
        },
        {
          "discriminator_value": "outbound_carton_fee",
          "attributes": [],
          "type": "outbound_carton_fee"
        }
      ],
      "plural": "partner_center_fees",
      "name": "partner_center_fee",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "payment_paypal",
          "attributes": [],
          "type": "payment_paypal"
        }
      ],
      "plural": "payments",
      "name": "payment",
      "description": "Represents data for a specific online payment method",
      "attributes": [],
      "deprecation": {
        "description": "Remove after paypal_authorization_details goes live."
      },
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "merchant_of_record_payment_form",
          "attributes": [],
          "type": "merchant_of_record_payment_form"
        }
      ],
      "plural": "payment_forms",
      "name": "payment_form",
      "description": "Represents the data needed to initiate an online payment",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "organization_payment_method_tag",
          "attributes": [],
          "type": "organization_payment_method_tag"
        },
        {
          "discriminator_value": "experience_payment_method_tag",
          "attributes": [],
          "type": "experience_payment_method_tag"
        }
      ],
      "plural": "payment_method_tags",
      "name": "payment_method_tag",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "card_payment_source",
          "attributes": [],
          "type": "card_payment_source"
        }
      ],
      "plural": "payment_sources",
      "name": "payment_source",
      "description": "Represents a source of payment that can be saved and used in the future.",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "card_payment_source_form",
          "attributes": [],
          "type": "card_payment_source_form"
        }
      ],
      "plural": "payment_source_forms",
      "name": "payment_source_form",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "price_book",
          "attributes": [],
          "type": "price_source_price_book"
        },
        {
          "discriminator_value": "catalog",
          "attributes": [],
          "type": "price_source_catalog"
        },
        {
          "discriminator_value": "provided",
          "attributes": [],
          "type": "price_source_provided"
        }
      ],
      "plural": "price_sources",
      "name": "price_source",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "free_shipping",
          "attributes": [],
          "type": "free_shipping"
        },
        {
          "discriminator_value": "discount",
          "attributes": [],
          "type": "discount"
        }
      ],
      "plural": "promotions",
      "name": "promotion",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "filter",
          "attributes": [],
          "type": "query_builder_filter_form"
        },
        {
          "discriminator_value": "query",
          "attributes": [],
          "type": "query_builder_query_form"
        }
      ],
      "plural": "query_builder_forms",
      "name": "query_builder_form",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "default": true,
          "discriminator_value": "structured",
          "attributes": [],
          "type": "query_filter_structured"
        },
        {
          "discriminator_value": "unstructured",
          "attributes": [],
          "type": "query_filter_unstructured"
        }
      ],
      "plural": "query_filters",
      "name": "query_filter",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "default": true,
          "discriminator_value": "structured",
          "attributes": [],
          "type": "query_filter_structured_form"
        },
        {
          "discriminator_value": "unstructured",
          "attributes": [],
          "type": "query_filter_unstructured_form"
        }
      ],
      "plural": "query_filter_forms",
      "name": "query_filter_form",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "default": true,
          "discriminator_value": "ratecard_estimate_v1",
          "attributes": [],
          "type": "ratecard_estimate_v1"
        },
        {
          "discriminator_value": "ratecard_estimate_v2",
          "attributes": [],
          "type": "ratecard_estimate_v2"
        }
      ],
      "plural": "ratecard_estimates",
      "name": "ratecard_estimate",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "default": true,
          "discriminator_value": "ratecard_estimate_form_v1",
          "attributes": [],
          "type": "ratecard_estimate_form_v1"
        },
        {
          "discriminator_value": "ratecard_estimate_form_v2",
          "attributes": [],
          "type": "ratecard_estimate_form_v2"
        }
      ],
      "plural": "ratecard_estimate_forms",
      "name": "ratecard_estimate_form",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "ddp_ratecard_fee",
          "attributes": [],
          "type": "ddp_ratecard_fee"
        },
        {
          "discriminator_value": "fuel_surcharge_ratecard_fee",
          "attributes": [],
          "type": "fuel_surcharge_ratecard_fee"
        },
        {
          "discriminator_value": "oversized_shipment_ratecard_fee",
          "attributes": [],
          "type": "oversized_shipment_ratecard_fee"
        },
        {
          "discriminator_value": "return_package_ratecard_fee",
          "attributes": [],
          "type": "return_package_ratecard_fee"
        },
        {
          "discriminator_value": "crossdock_ratecard_fee",
          "attributes": [],
          "type": "crossdock_ratecard_fee"
        },
        {
          "discriminator_value": "remote_area_ratecard_fee",
          "attributes": [],
          "type": "remote_area_ratecard_fee"
        }
      ],
      "plural": "ratecard_fees",
      "name": "ratecard_fee",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "repeat_hourly",
          "attributes": [],
          "type": "repeat_hourly"
        },
        {
          "discriminator_value": "repeat_daily",
          "attributes": [],
          "type": "repeat_daily"
        },
        {
          "discriminator_value": "repeat_weekly",
          "attributes": [],
          "type": "repeat_weekly"
        },
        {
          "discriminator_value": "repeat_monthly",
          "attributes": [],
          "type": "repeat_monthly"
        }
      ],
      "plural": "repeat_schedules",
      "name": "repeat_schedule",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "no_inventory",
          "description": "Inventory is not available for all or subset of item quantities requested",
          "attributes": [],
          "type": "no_inventory_reservation_error"
        },
        {
          "discriminator_value": "external_api_timeout",
          "description": "API call to external API (ex: PFS) timed out",
          "attributes": [],
          "type": "external_api_timeout_reservation_error"
        },
        {
          "discriminator_value": "generic_reservation_error",
          "description": "Generic reservation error",
          "attributes": [],
          "type": "generic_reservation_error"
        }
      ],
      "plural": "reservation_errors",
      "name": "reservation_error",
      "description": "Types of failed inventory reservation reasons",
      "attributes": [],
      "discriminator": "code"
    },
    {
      "types": [
        {
          "discriminator_value": "fuel_surcharge_service_fee",
          "attributes": [],
          "type": "fuel_surcharge_service_fee"
        },
        {
          "discriminator_value": "remote_area_service_fee",
          "attributes": [],
          "type": "remote_area_service_fee"
        }
      ],
      "plural": "service_fees",
      "name": "service_fee",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "organization_session",
          "attributes": [],
          "type": "organization_session"
        }
      ],
      "plural": "sessions",
      "name": "session",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "organization_session_authorization",
          "attributes": [],
          "type": "organization_session_authorization"
        }
      ],
      "plural": "session_authorizations",
      "name": "session_authorization",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "default": true,
          "discriminator_value": "detailed_shipping_label_form",
          "attributes": [],
          "type": "detailed_shipping_label_form"
        },
        {
          "discriminator_value": "summary_shipping_label_form",
          "attributes": [],
          "type": "summary_shipping_label_form"
        }
      ],
      "plural": "shipping_label_forms",
      "name": "shipping_label_form",
      "description": "Different models for forms to create shipping labels",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "default": true,
          "discriminator_value": "detailed_shipping_notification_form",
          "attributes": [],
          "type": "detailed_shipping_notification_form"
        },
        {
          "discriminator_value": "single_package_shipping_notification_form",
          "attributes": [],
          "type": "single_package_shipping_notification_form"
        }
      ],
      "plural": "shipping_notification_forms",
      "name": "shipping_notification_form",
      "description": "Form for information about a client-facilitated shipment where the shipping label and fulfillment was not handled by Flow. For merchant-of-record and tracking purposes, clients doing their own shipping will need to notify Flow of shipped packages.",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "default": true,
          "discriminator_value": "shopify_cart_add_single_form",
          "attributes": [],
          "type": "shopify_cart_add_single_form"
        },
        {
          "discriminator_value": "shopify_cart_add_multiple_form",
          "attributes": [],
          "type": "shopify_cart_add_multiple_form"
        }
      ],
      "plural": "shopify_cart_add_forms",
      "name": "shopify_cart_add_form",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "default": true,
          "discriminator_value": "shopify_item_event_bucket",
          "attributes": [],
          "type": "shopify_item_event_bucket"
        }
      ],
      "plural": "shopify_event_buckets",
      "name": "shopify_event_bucket",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "avalara_tax_setting",
          "attributes": [],
          "type": "avalara_tax_setting"
        },
        {
          "discriminator_value": "avalara_tax_csv_setting",
          "attributes": [],
          "type": "avalara_tax_csv_setting"
        }
      ],
      "plural": "tax_settings",
      "name": "tax_setting",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "amount_margin",
          "description": "Add a certain amount on the actual base cost",
          "attributes": [],
          "type": "amount_margin"
        },
        {
          "discriminator_value": "at_cost",
          "attributes": [],
          "type": "at_cost"
        },
        {
          "discriminator_value": "flat_rate",
          "attributes": [],
          "type": "flat_rate"
        },
        {
          "discriminator_value": "percent_margin",
          "description": "Add a certain percentage of the actual base cost",
          "attributes": [],
          "type": "percent_margin"
        }
      ],
      "plural": "tier_rule_outcomes",
      "name": "tier_rule_outcome",
      "description": "Possible outcome types from a tier rule",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "amount_margin_form",
          "attributes": [],
          "type": "amount_margin_form"
        },
        {
          "discriminator_value": "flat_rate_form",
          "attributes": [],
          "type": "flat_rate_form"
        },
        {
          "discriminator_value": "at_cost",
          "attributes": [],
          "type": "at_cost"
        },
        {
          "discriminator_value": "percent_margin",
          "attributes": [],
          "type": "percent_margin"
        }
      ],
      "plural": "tier_rule_outcome_forms",
      "name": "tier_rule_outcome_form",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "organization_token",
          "attributes": [],
          "type": "organization_token"
        },
        {
          "discriminator_value": "partner_token",
          "attributes": [],
          "type": "partner_token"
        }
      ],
      "plural": "tokens",
      "name": "token",
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "types": [
        {
          "discriminator_value": "organization_token_reference",
          "attributes": [],
          "type": "organization_token_reference"
        },
        {
          "discriminator_value": "partner_token_reference",
          "attributes": [],
          "type": "partner_token_reference"
        }
      ],
      "plural": "token_references",
      "name": "token_reference",
      "attributes": [],
      "discriminator": "discriminator"
    }
  ],
  "imports": [
    {
      "uri": "https://app.apibuilder.io/flow/shopify-external/latest/service.json",
      "namespace": "io.flow.shopify.external.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "shopify-external"
      },
      "version": "0.3.4",
      "enums": [
        "cancel_reason",
        "discount_status",
        "discount_type",
        "discrepancy_reason",
        "event",
        "financial_status_type",
        "format",
        "fulfillment_service",
        "fulfillment_status_type",
        "inventory_behaviour",
        "inventory_management",
        "inventory_policy",
        "kind_type",
        "localized_price",
        "order_status_type",
        "price_rule_allocation_method",
        "price_rule_customer_selection",
        "price_rule_target_selection",
        "price_rule_target_type",
        "price_rule_value_type",
        "published_scope",
        "restock_type",
        "shopify_customer_state",
        "shopify_discount_pagination_direction",
        "shopify_gift_card_status",
        "shopify_processing_method_type",
        "shopify_transaction_error_code",
        "shopify_transaction_status",
        "topic",
        "value_type",
        "weight_unit"
      ],
      "unions": [],
      "models": [
        "collect",
        "collection",
        "count",
        "discount",
        "metafield",
        "metafield_form",
        "option",
        "price_rule",
        "price_rule_discount_code",
        "price_rule_form",
        "price_rule_greater_than_range",
        "price_rule_less_than_range",
        "price_rule_prerequisite_to_entitlement_quantity_ratio",
        "product",
        "product_delete",
        "product_image",
        "product_variant",
        "request_metafield_form",
        "request_shopify_gift_card",
        "request_shopify_refund_form",
        "request_shopify_transaction_form",
        "response_collect",
        "response_collects",
        "response_discount",
        "response_discounts",
        "response_metafield",
        "response_metafields",
        "response_orders_wrapper",
        "response_price_rule",
        "response_price_rule_discount_code",
        "response_price_rule_discount_codes",
        "response_price_rules",
        "response_product",
        "response_products",
        "response_shopify_gift_card",
        "response_shopify_gift_cards",
        "response_shopify_refund_single",
        "response_shopify_transaction",
        "response_shopify_transaction_single",
        "response_variant",
        "shop",
        "shop_response",
        "shopify_address",
        "shopify_attribute",
        "shopify_cart",
        "shopify_cart_item",
        "shopify_cart_item_discount",
        "shopify_client_detail",
        "shopify_customer",
        "shopify_customer_address",
        "shopify_customer_delete",
        "shopify_customers_response_wrapper",
        "shopify_discount_application",
        "shopify_discount_code",
        "shopify_error",
        "shopify_fulfillment",
        "shopify_fulfillment_wrapper",
        "shopify_gift_card",
        "shopify_gift_card_adjustment",
        "shopify_gift_card_adjustment_form",
        "shopify_gift_card_adjustment_form_wrapper",
        "shopify_gift_card_adjustment_response_wrapper",
        "shopify_gift_card_form",
        "shopify_inventory_item",
        "shopify_inventory_item_delete",
        "shopify_inventory_level",
        "shopify_inventory_level_disconnect",
        "shopify_inventory_level_response_wrapper",
        "shopify_line_item",
        "shopify_line_item_form",
        "shopify_line_level_discount_allocation",
        "shopify_location",
        "shopify_location_delete",
        "shopify_locations_response_wrapper",
        "shopify_order",
        "shopify_order_count",
        "shopify_order_customer",
        "shopify_order_wrapper",
        "shopify_payment_detail",
        "shopify_refund",
        "shopify_refund_form",
        "shopify_refund_line_item",
        "shopify_refund_line_item_form",
        "shopify_shipping_line",
        "shopify_tax_line",
        "shopify_transaction",
        "shopify_transaction_form",
        "shopify_webhook_customers_redact",
        "shopify_webhook_customers_redact_customer",
        "shopify_webhook_order",
        "shopify_webhook_order_cancelled",
        "shopify_webhook_order_line_item",
        "shopify_webhook_shop_redact",
        "webhook",
        "webhook_form",
        "webhook_form_wrapper",
        "webhook_response_list",
        "webhook_response_single"
      ],
      "annotations": []
    }
  ],
  "base_url": "https://api.flow.io",
  "resources": [
    {
      "path": "/:organization/address/configurations",
      "plural": "address_configurations",
      "operations": [
        {
          "path": "/:organization/address/configurations",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[address_configuration]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Search checkout address configurations.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "sort",
                  "versions"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "country",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "address_configuration"
    },
    {
      "path": "/:organization/orders/allocations/:number",
      "plural": "allocations",
      "operations": [
        {
          "path": "/:organization/orders/allocations/:number",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "allocation_v2"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Order-level price details allocated using a strategy among individual order item units.",
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "sort_parameter_default",
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing",
                  "organization_finance"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "allocation",
      "deprecation": {
        "description": "Use allocation_v2 resource"
      }
    },
    {
      "path": "/:organization/attributes",
      "plural": "attributes",
      "operations": [
        {
          "path": "/:organization/attributes",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[attribute]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Search attributes. Always paginated.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "position"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "sort_parameter_default"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "key",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "position",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/attributes",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "attribute"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Add attribute",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "attribute_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/attributes/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[attribute_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "key",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/attributes/:key",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "attribute"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about a specific attribute.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "attribute",
                "operation_method": "POST",
                "operation_path": "/:organization/attributes",
                "identifier_field": "key",
                "delete_operation_path": "/:organization/attributes/:key"
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/attributes/:key",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "attribute"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "attribute"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Create or update an attribute with the specified key.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "attribute",
                "operation_method": "POST",
                "operation_path": "/:organization/attributes",
                "identifier_field": "key",
                "delete_operation_path": "/:organization/attributes/:key"
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "attribute_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/attributes/:key",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Delete an attribute with the specified key.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "attribute",
                "operation_method": "POST",
                "operation_path": "/:organization/attributes",
                "identifier_field": "key",
                "delete_operation_path": "/:organization/attributes/:key"
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "An attribute can be configured to be used in different ways throughout Flow. A common example is to identify a meaningful attribute (e.g. brand) that can then be displayed throughout the Flow console.",
      "attributes": [
        {
          "name": "object-reference",
          "value": {
            "related_service_namespace": "io.flow.organization.v0",
            "resource_type": "io.flow.common.v0.models.organization",
            "operation_method": "POST",
            "operation_path": "/organizations",
            "identifier_field": "id",
            "delete_operation_path": "/organizations/:organization_id"
          }
        },
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "attribute"
    },
    {
      "path": "/:organization",
      "plural": "catalogs",
      "operations": [
        {
          "path": "/:organization/catalog",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "catalog"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about a specific catalog.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/restrictions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[item]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Search global restrictions. Always paginated.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "number",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "name",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/restrictions/:number",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "item"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns a specific globally restricted item.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/restrictions/:number",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "item"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "item"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Upsert a global restriction",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/restrictions/:number",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Delete the global restriction for this catalog item number",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/statistics",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "catalog_statistics"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Get statistics for this organization's catalog.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "object-reference",
          "value": {
            "related_service_namespace": "io.flow.organization.v0",
            "resource_type": "io.flow.common.v0.models.organization",
            "operation_method": "POST",
            "operation_path": "/organizations",
            "identifier_field": "id",
            "delete_operation_path": "/organizations/:organization_id"
          }
        },
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "catalog"
    },
    {
      "path": "/:organization/checkout/attributes",
      "plural": "checkout_attributes",
      "operations": [
        {
          "path": "/:organization/checkout/attributes",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[checkout_attribute]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "position"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions",
                  "sort_parameter_default"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "key",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "experience_key",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "position",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/checkout/attributes",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "checkout_attribute"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "checkout_attribute_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/checkout/attributes/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "checkout_attribute"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/checkout/attributes/:id",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "checkout_attribute"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "checkout_attribute_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/checkout/attributes/:id",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "A Checkout Attribute defines an attribute that will be made available via the checkout item content. This is useful if you would like to surface a specific attribute (like 'size' or 'color') in checkout.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "checkout_attribute"
    },
    {
      "path": "/:organization/experiences/:experience_key/item/content",
      "plural": "checkout_item_contents",
      "operations": [
        {
          "path": "/:organization/experiences/:experience_key/item/content/checkout",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[checkout_item_content]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns a localized view of 1 or more items in the context of checkout, returning data specifically related to rendering a view of an item in a cart or checkout page.",
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "sort",
                  "get"
                ]
              }
            },
            {
              "name": "non-crud",
              "value": {}
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience_key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "minimum": 1,
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            }
          ]
        }
      ],
      "description": "A Checkout Item Content provides information about an item to support rendering of that item in the context of checkout",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "checkout_item_content"
    },
    {
      "path": "/:organization/credit/payments",
      "plural": "credit_payments",
      "operations": [
        {
          "path": "/:organization/credit/payments",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[credit_payment]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "order_number"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "key",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "order_number",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "order"
            }
          ]
        },
        {
          "path": "/:organization/credit/payments",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "credit_payment"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "credit_payment_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "credit_payment_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "order"
            }
          ]
        },
        {
          "path": "/:organization/credit/payments/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[credit_payment_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "key",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/credit/payments/:key",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "credit_payment"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "order"
            }
          ]
        },
        {
          "path": "/:organization/credit/payments/:key",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "credit_payment"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "credit_payment"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "credit_payment_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "credit_payment_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "order"
            }
          ]
        },
        {
          "path": "/:organization/credit/payments/:key",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "A Credit Payment records a 'non cash' payment against an order (e.g. a store credit, gift card, etc.), recording the amount of that credit and additional details to reconcile payments. The primary purpose of the credit payment is to record that a payment has been made against an order so the remaining balance can be correctly computed.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "credit_payment"
    },
    {
      "path": "/:organization/experiences",
      "plural": "experiences",
      "operations": [
        {
          "path": "/:organization/experiences",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[experience]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Search experiences. Always paginated.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "position"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "sort_parameter_default"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "q",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "key",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "name",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "region",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "currency",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "subcatalog",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "ip",
              "description": "If specified, we will geolocate the user by this IP address, and if successful, select the experience matching the country of the IP address.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "status",
              "location": "Query",
              "type": "experience_status",
              "required": false
            },
            {
              "name": "shipping_configuration_key",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "position",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "experience"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Add experience",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "experience_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/conversions/:base/:amount",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "price_with_base"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Formats the requested amount using the formatting settings for the experience.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "base",
              "description": "The currency of the provided amount, which will be converted to the experience currency, unless a value is specified for the `currency` parameter.",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "amount",
              "description": "The amount in the base currency to be converted.",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience",
              "description": "If specified, we will render the items in the context of the experience with this key.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "country",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "ip",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "currency",
              "description": "If specified, the provided base amount will be converted to and formatted in this currency.",
              "location": "Query",
              "type": "string",
              "required": false
            }
          ]
        },
        {
          "path": "/:organization/experiences/items",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[item]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Returns localized information about 1 or more items. The items will be localized based on the experience selected by the query parameters in the order of experience, then country, then ip address.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "number"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "non-crud",
              "value": {}
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "minimum": 1,
              "required": false
            },
            {
              "name": "status",
              "description": "Filter to items based on their status within this subcatalog",
              "maximum": 3,
              "location": "Query",
              "type": "[subcatalog_item_status]",
              "required": false,
              "example": "included"
            },
            {
              "name": "experience",
              "description": "If specified, we will render the items in the context of the experience with this key.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "country",
              "description": "If specified, we will select the experience matching this country. ISO 3166 3 currency code as defined in https://api.flow.io/reference/countries",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "CAN"
            },
            {
              "name": "ip",
              "description": "If specified, we will geolocate the user by this IP address, and if successful, select the experience matching the country of the IP address.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "currency",
              "description": "Iso 4217 3 currency code as defined in https://api.flow.io/reference/currencies If specified, translate the pricing to this currency. Translation occurs using the current spot rate for this currency from the base currency in the experience.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "language",
              "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages If specified, translate content to this language (where available)",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "en"
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/items/:number",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "item"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Returns information about this item localized based on the query parameters",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience",
              "description": "If specified, we will render the items in the context of the experience with this key.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "country",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "ip",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "currency",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "language",
              "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "en"
            }
          ]
        },
        {
          "path": "/:organization/experiences/query/builders",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "query_builder"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Builds a query to search experiences",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "query_builder_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[experience_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "key",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/:experience_key/currency/formats",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "experience_currency_format"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience_key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/:experience_key/currency/formats",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "experience_currency_format"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "experience_currency_format_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience_key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/:experience_key/local/items",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[local_item]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Returns localized information about 0 or more items given a query for the specified experience.",
          "attributes": [],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience_key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "q",
              "description": "Filter to items matching this query. Defaults to all items.",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "number in (1,2,3)"
            },
            {
              "name": "currency",
              "description": "Iso 4217 3 currency code as defined in https://api.flow.io/reference/currencies If specified, translate the pricing to this currency. Translation occurs using the current spot rate for this currency from the base currency in the experience. If not specified, the item is returned in the currency of the experience.",
              "location": "Query",
              "type": "string",
              "required": false
            }
          ]
        },
        {
          "path": "/:organization/experiences/:experience_key/logistics/summary",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "experience_logistics_summary"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience_key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "country",
              "description": "If not specified, we will use the experience default country. ISO 3166 3 country code as defined in https://api.flow.io/reference/countries",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "CAN"
            },
            {
              "name": "currency",
              "description": "If not specified, we will use the experience default currency. ISO 3166 3 currency code as defined in https://api.flow.io/reference/currencies",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "CAD"
            },
            {
              "name": "number",
              "description": "Specific item number for which to generate a summary",
              "location": "Query",
              "type": "string",
              "required": false
            }
          ]
        },
        {
          "path": "/:organization/experiences/:experience_key/margins",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[item_margin]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience_key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "name",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/:experience_key/margins",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "item_margin"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "item_margin_post_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience_key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/:experience_key/margins/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[item_margin_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience_key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/:experience_key/margins/:key",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "item_margin"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience_key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/:experience_key/margins/:key",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "item_margin"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "item_margin_put_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience_key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/:experience_key/margins/:key",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience_key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/:experience_key/payment-method-types",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[payment_method_type]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience_key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/:experience_key/payment/method/rules",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[payment_method_rule]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "display_position"
                  },
                  {
                    "value": "payment_method"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions",
                  "sort_parameter_default"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience_key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "payment_method_type",
              "maximum": 5,
              "location": "Query",
              "type": "[payment_method_type]",
              "minimum": 1,
              "required": false
            },
            {
              "name": "tags",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "amount",
              "description": "If specified, must also specify currency",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "100.50"
            },
            {
              "name": "currency",
              "description": "Required if amount is specified",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "display_position",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/:experience_key/payment/method/rules",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[payment_method_rule]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Change the ordering or payment tags for an experience. Every post must include one entry for each payment method offered by Flow.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "[experience_payment_method_rule_form]"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience_key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/:experience_key/price/books",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[experience_price_book_mapping]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "created_at"
                  },
                  {
                    "value": "position"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "sort_parameter_default",
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience_key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "price_book_key",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "position",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/:experience_key/price/books",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "experience_price_book_mapping"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "experience_price_book_mapping"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "experience_price_book_mapping_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience_key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/:experience_key/price/books",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[experience_price_book_mapping]"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "[experience_price_book_mapping]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "experience_price_book_mapping_put_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience_key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/:experience_key/price/books/:key",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "experience_price_book_mapping"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience_key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/:experience_key/price/books/:key",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience_key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/:key",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "experience"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about a specific experience.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/:key",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "experience"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "experience"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Update experience with the specified key, creating if it does not exist.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "experience_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/:key",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Delete the experience with this key",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/:key/clone",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "experience_clone"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Clones the experience with the specified key, using data from experience_clone_form.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "experience_clone_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/:key/clone/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "experience_clone"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns the experience_clone associated with the id.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/:key/items/:number/price",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "price_check"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns detailed information on the pricing of this item within this experience",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "price_amount",
              "description": "If specified, forces the price of the item to be the given amount. Must be specified with price_currency.",
              "location": "Query",
              "type": "double",
              "required": false
            },
            {
              "name": "price_currency",
              "description": "If specified, forces the price of the item to be in the given currency. Must be specified with price_amount.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "ship_from_country",
              "description": "If specified, indicates the country where the item is shipping from.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "ship_from_province",
              "description": "If specified, indicates the province where the item is shipping from.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "ship_to_country",
              "description": "If specified, indicates the country where the item is shipping to.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "ship_to_province",
              "description": "If specified, indicates the province where the item is shipping to.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "currency",
              "description": "If specified, indicates the currency of the returned prices.",
              "location": "Query",
              "type": "string",
              "required": false
            }
          ]
        },
        {
          "path": "/:organization/experiences/:key/pricing",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "pricing"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Get the pricing settings for this experience",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/:key/pricing",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "pricing"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Update the pricing settings for this experience",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "pricing"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/:key/promotions/available",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[promotion]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Get available promotions for the experience",
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "sort_parameter_default",
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/:key/status",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "experience"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Updates the status of a given experience.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "experience_status_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Experiences define a local experience for a given geographic region",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "experience"
    },
    {
      "path": "/:organization/experiences/:experience_key/settings/checkout",
      "plural": "experience_checkout_settings",
      "operations": [
        {
          "path": "/:organization/experiences/:experience_key/settings/checkout",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "experience_checkout_settings"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience_key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/:experience_key/settings/checkout",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "experience_checkout_settings"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "experience_checkout_settings_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience_key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "experience_checkout_settings"
    },
    {
      "path": "/:organization/experience/defaults",
      "plural": "experience_defaults",
      "operations": [
        {
          "path": "/:organization/experience/defaults",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "experience_defaults"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns recommended default settings when creating a new experience",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "region_id",
              "location": "Query",
              "type": "string",
              "required": false
            }
          ]
        }
      ],
      "description": "Defines a set of defaults for a given organization and region",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "experience_defaults"
    },
    {
      "path": "/:organization/experiences/:experience_key/settings/logistics",
      "plural": "experience_logistics_settings",
      "operations": [
        {
          "path": "/:organization/experiences/:experience_key/settings/logistics",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "experience_logistics_settings"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience_key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/experiences/:experience_key/settings/logistics",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "experience_logistics_settings"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "experience_logistics_settings"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "experience_logistics_settings_put_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience_key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Controls logistics related settings per experience",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "experience_logistics_settings"
    },
    {
      "path": "/:organization/experiences/:experience_key/conversions/price",
      "plural": "experience_price_conversions",
      "operations": [
        {
          "path": "/:organization/experiences/:experience_key/conversions/price",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "experience_price_conversion_response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Converts one or more prices from one currency to another",
          "attributes": [],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience_key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "base",
              "description": "The ISO currency code of the provided values. Defaults to the organization base currency",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "local",
              "description": "The ISO currency code in which to return the price facets. Defaults to the experience currency",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "amount",
              "description": "One or more prices to convert",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "10"
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "experience_price_conversion"
    },
    {
      "path": "/:organization/experiences/:experience_key/conversions/price/facet",
      "plural": "experience_price_facet_conversions",
      "operations": [
        {
          "path": "/:organization/experiences/:experience_key/conversions/price/facet",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "experience_price_facet_conversion_response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Converts one or more price values into local currency, rounding for display in price facets. A common use case is to say show a price filter to consumers (e.g. 10-20 USD) and want to display that in local currency (15-30 CAD). To do so, send the values '10' and '20' to this API which will return the rounded local currency facet values",
          "attributes": [],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience_key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "base",
              "description": "The ISO currency code of the provided values. Defaults to the organization base currency",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "local",
              "description": "The ISO currency code in which to return the price facets. Defaults to the experience currency",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "min",
              "description": "One or more prices to convert. These values are expected to represent the minimum of a range (e.g. for a 10-50 facet value, this would be 10)",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "10"
            },
            {
              "name": "max",
              "description": "One or more prices to convert. These values are expected to represent the maximum of a range (e.g. for a 10-50 facet value, this would be 50)",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "10"
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "experience_price_facet_conversion"
    },
    {
      "path": "/:organization/catalog/items",
      "plural": "items",
      "operations": [
        {
          "path": "/:organization/catalog/items",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[item]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Search items. Always paginated.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "number"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "number",
              "description": "Find items with this number. Case insensitive. Exact match",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "name",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/items",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "item"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Add catalog item(s)",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "item_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/items/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[item_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "number",
              "description": "Filter to items with any one of these numbers.",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/items/:number",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "item"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about a specific item.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "item",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/items",
                "identifier_field": "number",
                "delete_operation_path": "/:organization/catalog/items/:number"
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/items/:number",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "item"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "item"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Update item with the specified number, creating if it does not exist.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "item",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/items",
                "identifier_field": "number",
                "delete_operation_path": "/:organization/catalog/items/:number"
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "item_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/items/:number",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Delete the item with this number",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "item",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/items",
                "identifier_field": "number",
                "delete_operation_path": "/:organization/catalog/items/:number"
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/items/:number/attributes",
          "method": "PATCH",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "item"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "item"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Update item with the specified attributes.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "item",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/items",
                "identifier_field": "number",
                "delete_operation_path": "/:organization/catalog/items/:number"
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "item_attributes_patch_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/items/:number/price",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "item"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "item"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Update item with the specified number, creating if it does not exist.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "item",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/items",
                "identifier_field": "number",
                "delete_operation_path": "/:organization/catalog/items/:number"
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "item_price_update_put_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "The Flow item defines a specific item that can be purchased by a consumer. For many clients, this will map to a Sku.",
      "attributes": [
        {
          "name": "object-reference",
          "value": {
            "related_service_namespace": "io.flow.organization.v0",
            "resource_type": "io.flow.common.v0.models.organization",
            "operation_method": "POST",
            "operation_path": "/organizations",
            "identifier_field": "id",
            "delete_operation_path": "/organizations/:organization_id"
          }
        },
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "item"
    },
    {
      "path": "/:organization/catalog/item/overlays",
      "plural": "item_form_overlays",
      "operations": [
        {
          "path": "/:organization/catalog/item/overlays",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[item_form_overlay]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "position"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "sort_parameter_default",
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "key",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "position",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/item/overlays",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "item_form_overlay"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Adds an overlay data to merge into a catalog item",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "item_form_overlay_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/item/overlays/:key",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "item_form_overlay"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/item/overlays/:key",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "item_form_overlay"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "item_form_overlay"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Update item overlay with the specified key, creating if it does not exist.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "item_form_overlay_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/item/overlays/:key",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "The item form overlay defines data to merge into an item form.",
      "attributes": [
        {
          "name": "object-reference",
          "value": {
            "related_service_namespace": "io.flow.organization.v0",
            "resource_type": "io.flow.common.v0.models.organization",
            "operation_method": "POST",
            "operation_path": "/organizations",
            "identifier_field": "id",
            "delete_operation_path": "/organizations/:organization_id"
          }
        },
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "item_form_overlay"
    },
    {
      "path": "/:organization/orders",
      "plural": "orders",
      "operations": [
        {
          "path": "/:organization/orders",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[order]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Search orders. Always paginated.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing",
                  "organization_finance"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "number",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "identifier",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "status",
              "location": "Query",
              "type": "order_status",
              "required": false
            },
            {
              "name": "customer_number",
              "description": "If specified, returns order for the specified customer.number",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "submitted_at_on_or_after",
              "description": "If specified, we filter to all records that have a 'submitted_at' >= 'submitted_at_on_or_after'",
              "location": "Query",
              "type": "date-time-iso8601",
              "required": false
            },
            {
              "name": "romanize",
              "description": "Fields on the order to romanize. For example, if 'destination' is passed, then destination addresses in Chinese characters will be transliterated to the romanized form in pinyin",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false,
              "example": "destination"
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "experience"
            }
          ]
        },
        {
          "path": "/:organization/orders",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "order"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "order_error"
            }
          ],
          "description": "Create an order, using the localized information from the experience selected by the query parameters. Note the order must be submitted before its expiration",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "order_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience",
              "description": "If specified, we will render the items in the context of the experience with this key.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "country",
              "description": "If specified, we will select the experience matching this country. ISO 3166 3 currency code as defined in https://api.flow.io/reference/countries",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "CAN"
            },
            {
              "name": "ip",
              "description": "If specified, we will geolocate the user by this IP address, and if successful, select the experience matching the country of the IP address.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "currency",
              "description": "Iso 4217 3 currency code as defined in https://api.flow.io/reference/currencies If specified, translate the pricing to this currency. Translation occurs using the current spot rate for this currency from the base currency in the experience.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "language",
              "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages If specified, translate content to this language (where available)",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "en"
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "experience"
            },
            {
              "name": "romanize",
              "description": "Fields on the order to romanize. For example, if 'destination' is passed, then destination addresses in Chinese characters will be transliterated to the romanized form in pinyin",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false,
              "example": "destination"
            }
          ]
        },
        {
          "path": "/:organization/orders/identifier/:identifier",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "order"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about a specific order using an identifier number",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing",
                  "organization_finance"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "experience"
            },
            {
              "name": "romanize",
              "description": "Fields on the order to romanize. For example, if 'destination' is passed, then destination addresses in Chinese characters will be transliterated to the romanized form in pinyin",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false,
              "example": "destination"
            }
          ]
        },
        {
          "path": "/:organization/orders/submissions",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "order"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "order_error"
            }
          ],
          "description": "Submits an order. You will get a validation error if the order has already expired (and a new quote could not be automatically recreated for a lower or same price). This method is idempotent - submitting an order a second time has no effect.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [],
                "roles": []
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "order_with_discounts_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "experience"
            }
          ]
        },
        {
          "path": "/:organization/orders/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[order_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Provides visibility into recent changes of each order, including deletion",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing",
                  "organization_finance"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "number",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "journal_timestamp_on_or_after",
              "description": "If specified, we filter to all records that have a 'journal_timestamp' >= 'journal_timestamp_on_or_after'",
              "location": "Query",
              "type": "date-time-iso8601",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/orders/:number",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "order"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about a specific order.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing",
                  "organization_finance"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "experience"
            },
            {
              "name": "romanize",
              "description": "Fields on the order to romanize. For example, if 'destination' is passed, then destination addresses in Chinese characters will be transliterated to the romanized form in pinyin",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false,
              "example": "destination"
            }
          ]
        },
        {
          "path": "/:organization/orders/:number",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "order"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "order"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "order_error"
            }
          ],
          "description": "Upserts an order. using the localized information from the experience selected by the query parameters. Note the order must be submitted before its expiration",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "order_put_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience",
              "description": "If specified, we will render the items in the context of the experience with this key.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "country",
              "description": "If specified, we will select the experience matching this country. ISO 3166 3 currency code as defined in https://api.flow.io/reference/countries",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "CAN"
            },
            {
              "name": "ip",
              "description": "If specified, we will geolocate the user by this IP address, and if successful, select the experience matching the country of the IP address.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "currency",
              "description": "Iso 4217 3 currency code as defined in https://api.flow.io/reference/currencies If specified, translate the pricing to this currency. Translation occurs using the current spot rate for this currency from the base currency in the experience.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "language",
              "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages If specified, translate content to this language (where available)",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "en"
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "experience"
            },
            {
              "name": "romanize",
              "description": "Fields on the order to romanize. For example, if 'destination' is passed, then destination addresses in Chinese characters will be transliterated to the romanized form in pinyin",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false,
              "example": "destination"
            }
          ]
        },
        {
          "path": "/:organization/orders/:number",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Delete an order. Note that production orders that have already been submitted cannot be deleted (you will see a 422 response in these cases).",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/orders/:number/allocations",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "allocation_v2"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Order allocations provide a granular view of an order that is targeted for accounting / financial views of an order",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing",
                  "organization_finance"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/orders/:number/authorizations",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "authorization"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Creates an authorization, automatically associating to this order.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "authorization_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "card"
            }
          ]
        },
        {
          "path": "/:organization/orders/:number/destination",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "order"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "order"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "order_error"
            }
          ],
          "description": "Updates an order's destination address",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "order_destination_put_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/orders/:number/inventory/reservations",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "reservation"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "reservation"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "reservation_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/orders/:number/promotions/:key/free_shipping",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "free_shipping_order_promotion"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "free_shipping_order_promotion"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "order_error"
            }
          ],
          "description": "Creates a free shipping promotion for this order, automatically applying it to the order if the order meets the defined promotion trigger.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "free_shipping_order_promotion_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "order"
            }
          ]
        },
        {
          "path": "/:organization/orders/:number/service/changes",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "order_service_change"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "reservation_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "order_service_change_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/orders/:number/submissions",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "order"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "order"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "order_error"
            }
          ],
          "description": "Submits an order. You will get a validation error if the order has already expired (and a new quote could not be automatically recreated for a lower or same price). This method is idempotent - submitting an order a second time has no effect.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "description": "Optional metadata to associate with the order once submitted",
            "attributes": [],
            "type": "order_submission_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "experience"
            }
          ]
        },
        {
          "path": "/:organization/orders/:number/tax/registration",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "tax_registration"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "tax_registration"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Validates a tax registration number, proxying to underlying services and recording the result on the order.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "tax_registration_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/orders/:number/tax/registration/:key",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/orders/:number/status/fraud",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "order_fraud_status"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Retrieve the current fraud status for an order.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/orders/:number/labels/documents/invoice",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "shipping_label_document"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Generate a commercial invoice for the order without providing a label.",
          "attributes": [],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "An order represents all of the information about a particular set of line items, including pricing, currency rates, delivery options, etc. All information in an order is guaranteed by Flow - if an order is submitted before its expiration. The intended use case is to create an order as a consumer enters checkout, then to submit that order as part of the user submitting their order. Note that Flow will automatically mark an order submitted if we see payment authorization(s) covering the full balance of an order.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "order"
    },
    {
      "path": "/:organization/order/builders",
      "plural": "order_builders",
      "operations": [
        {
          "path": "/:organization/order/builders",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "order_builder"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "order_builder"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "description": "422 intentionally not exposed as part of order builder builder - instead available as order_builder.errors field",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "order_put_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience",
              "description": "If specified, we will render the items in the context of the experience with this key.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "country",
              "description": "If specified, we will select the experience matching this country. ISO 3166 3 currency code as defined in https://api.flow.io/reference/countries",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "CAN"
            },
            {
              "name": "ip",
              "description": "If specified, we will geolocate the user by this IP address, and if successful, select the experience matching the country of the IP address.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "currency",
              "description": "Iso 4217 3 currency code as defined in https://api.flow.io/reference/currencies If specified, translate the pricing to this currency. Translation occurs using the current spot rate for this currency from the base currency in the experience.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "language",
              "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages If specified, translate content to this language (where available)",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "en"
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "experience"
            }
          ]
        },
        {
          "path": "/:organization/order/builders/carts/:number",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "order_builder"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "order_builder"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "description": "422 intentionally not exposed as part of order builder builder - instead available as order_builder.errors field",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "order_put_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience",
              "description": "If specified, we will render the items in the context of the experience with this key.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "country",
              "description": "If specified, we will select the experience matching this country. ISO 3166 3 currency code as defined in https://api.flow.io/reference/countries",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "CAN"
            },
            {
              "name": "ip",
              "description": "If specified, we will geolocate the user by this IP address, and if successful, select the experience matching the country of the IP address.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "currency",
              "description": "Iso 4217 3 currency code as defined in https://api.flow.io/reference/currencies If specified, translate the pricing to this currency. Translation occurs using the current spot rate for this currency from the base currency in the experience.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "language",
              "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages If specified, translate content to this language (where available)",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "en"
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "experience"
            }
          ]
        },
        {
          "path": "/:organization/order/builders/:number",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "order_builder"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about a specific order and any errors associated with the order.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "experience"
            },
            {
              "name": "romanize",
              "description": "Fields on the order to romanize. For example, if 'destination' is passed, then destination addresses in Chinese characters will be transliterated to the romanized form in pinyin",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false,
              "example": "destination"
            }
          ]
        },
        {
          "path": "/:organization/order/builders/:number",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "order_builder"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "order_builder"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "description": "422 intentionally not exposed as part of order builder builder - instead available as order_builder.errors field",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "order_put_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience",
              "description": "If specified, we will render the items in the context of the experience with this key.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "country",
              "description": "If specified, we will select the experience matching this country. ISO 3166 3 currency code as defined in https://api.flow.io/reference/countries",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "CAN"
            },
            {
              "name": "ip",
              "description": "If specified, we will geolocate the user by this IP address, and if successful, select the experience matching the country of the IP address.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "currency",
              "description": "Iso 4217 3 currency code as defined in https://api.flow.io/reference/currencies If specified, translate the pricing to this currency. Translation occurs using the current spot rate for this currency from the base currency in the experience.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "language",
              "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages If specified, translate content to this language (where available)",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "en"
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "experience"
            }
          ]
        },
        {
          "path": "/:organization/order/builders/:number/attributes",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "order_builder"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "description": "422 intentionally not exposed as part of order builder builder - instead available as order_builder.errors field",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "order_builder_attributes_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "experience"
            }
          ]
        },
        {
          "path": "/:organization/order/builders/:number/country",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "order_builder"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "description": "422 intentionally not exposed as part of order builder builder - instead available as order_builder.errors field",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "order_builder_destination_country_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "experience"
            }
          ]
        },
        {
          "path": "/:organization/order/builders/:number/destination",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "order_builder"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "description": "422 intentionally not exposed as part of order builder builder - instead available as order_builder.errors field",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "order_builder_destination_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "experience"
            }
          ]
        },
        {
          "path": "/:organization/order/builders/:number/duty",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "order_builder"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "description": "422 intentionally not exposed as part of order builder builder - instead available as order_builder.errors field",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "order_builder_delivered_duty_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "experience"
            }
          ]
        },
        {
          "path": "/:organization/order/builders/:number/invoice/address",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "order_builder"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Update the customer invoice address",
          "attributes": [
            {
              "name": "linter",
              "description": "422 intentionally not exposed as part of order builder builder - instead available as order_builder.errors field",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "order_builder_customer_invoice_address_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "experience"
            }
          ]
        },
        {
          "path": "/:organization/order/builders/:number/tax/registration",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "order_builder"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Validates a tax registration number, proxying to underlying services and recording the result on the order.",
          "attributes": [
            {
              "name": "linter",
              "description": "422 intentionally not exposed as part of order builder builder - instead available as order_builder.errors field",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "tax_registration_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "experience"
            }
          ]
        }
      ],
      "description": "The Order Builder resource provides an incremental approach to building an order - returning the order details as they exist along with validation errors. The main difference is that this API will never return a 422 - rather it provides a container to view the order in its current state as well as all validation errors",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "order_builder"
    },
    {
      "path": "/:organization/order-estimates",
      "plural": "order_estimates",
      "operations": [
        {
          "path": "/:organization/order-estimates",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "order_estimate"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "order_error"
            }
          ],
          "description": "Create an order estimate, using the localized information from the experience selected by the query parameters. This is similar to the POST orders endpoint, except this just returns an estimate and cannot be submitted.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "order_estimate_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience",
              "description": "If specified, we will render the items in the context of the experience with this key.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "country",
              "description": "If specified, we will select the experience matching this country. ISO 3166 3 currency code as defined in https://api.flow.io/reference/countries",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "CAN"
            },
            {
              "name": "ip",
              "description": "If specified, we will geolocate the user by this IP address, and if successful, select the experience matching the country of the IP address.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "currency",
              "description": "Iso 4217 3 currency code as defined in https://api.flow.io/reference/currencies If specified, translate the pricing to this currency. Translation occurs using the current spot rate for this currency from the base currency in the experience.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "language",
              "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages If specified, translate content to this language (where available)",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "en"
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "experience"
            },
            {
              "name": "romanize",
              "description": "Fields on the order to romanize. For example, if 'destination' is passed, then destination addresses in Chinese characters will be transliterated to the romanized form in pinyin",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false,
              "example": "destination"
            }
          ]
        },
        {
          "path": "/:organization/order-estimates/:number",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "experience"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "experience"
            },
            {
              "name": "romanize",
              "description": "Fields on the order to romanize. For example, if 'destination' is passed, then destination addresses in Chinese characters will be transliterated to the romanized form in pinyin",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false,
              "example": "destination"
            }
          ]
        },
        {
          "path": "/:organization/order-estimates/:number",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "order_estimate"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "order_estimate"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "order_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "order_estimate_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience",
              "description": "If specified, we will render the items in the context of the experience with this key.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "country",
              "description": "If specified, we will select the experience matching this country. ISO 3166 3 currency code as defined in https://api.flow.io/reference/countries",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "CAN"
            },
            {
              "name": "ip",
              "description": "If specified, we will geolocate the user by this IP address, and if successful, select the experience matching the country of the IP address.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "currency",
              "description": "Iso 4217 3 currency code as defined in https://api.flow.io/reference/currencies If specified, translate the pricing to this currency. Translation occurs using the current spot rate for this currency from the base currency in the experience.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "language",
              "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages If specified, translate content to this language (where available)",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "en"
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "experience"
            },
            {
              "name": "romanize",
              "description": "Fields on the order to romanize. For example, if 'destination' is passed, then destination addresses in Chinese characters will be transliterated to the romanized form in pinyin",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false,
              "example": "destination"
            }
          ]
        }
      ],
      "description": "Lightweight estimate for a group of items without any customer-related information. This will contain available estimates on shipping, taxes, and duties.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "order_estimate"
    },
    {
      "path": "/:organization/order-identifiers",
      "plural": "order_identifiers",
      "operations": [
        {
          "path": "/:organization/order-identifiers",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[order_identifier]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "identifier"
                  },
                  {
                    "value": "order_number"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing",
                  "organization_finance"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "identifier",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "order_number",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "name",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/order-identifiers",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "order_identifier"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "order_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "order_identifier_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/order-identifiers/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[order_identifier_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "order_number"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing",
                  "organization_finance"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/order-identifiers/:identifier",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "order_identifier"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing",
                  "organization_finance"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/order-identifiers/:identifier",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "order_identifier"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "order_identifier"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "order_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "order_identifier_put_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/order-identifiers/:identifier",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Represents alternate identifiers that can be used to lookup an order. Common use cases are to support attaching a primary identifier (e.g. a nice order number) post order submission or attaching IDs that are used by the warehouse to ship the orders.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "order_identifier"
    },
    {
      "path": "/:organization/order/number/generators",
      "plural": "order_number_generators",
      "operations": [
        {
          "path": "/:organization/order/number/generators",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "order_number_generator"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing",
                  "organization_finance"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/order/number/generators",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "order_number_generator"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "order_number_generator"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "order_number_generator"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/order/number/generators",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "order_number_generator"
    },
    {
      "path": "/:organization/order/promotions",
      "plural": "order_promotions",
      "operations": [
        {
          "path": "/:organization/order/promotions/:key",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "order_error"
            }
          ],
          "description": "Deletes the order promotion with the specified key",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "order_promotion"
    },
    {
      "path": "/:organization/order/summaries",
      "plural": "order_summaries",
      "operations": [
        {
          "path": "/:organization/order/summaries/:number",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "order_summary"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing",
                  "organization_finance"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "The order summary is a view of the order summary object with the order prices flattened to keys.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "order_summary"
    },
    {
      "path": "/organizations",
      "plural": "organizations",
      "operations": [
        {
          "path": "/:organization/countries",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[country]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "The countries resources provides a unique list of all of the countries for which an experience exists. We generate this list of countries by iterating through all of the experience regions, and collecting all of the countries.",
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "sort_parameter_default",
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "ip",
              "description": "If specified, we lookup the country associated with this IP address, and if found and there is an experience that is targeted to this country, we guarantee that this country is in the returned list of countries",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "country",
              "description": "If specified, we will guarantee that this country is included in the response. We recommend including the current country when querying for the list of countries to disable, thereby ensuring the current user's selection will display (even if they are localized using the world experience). Value is a ISO 3166 3 currency code as defined in https://api.flow.io/reference/countries",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "CAN"
            },
            {
              "default": "[]",
              "name": "status",
              "description": "If specified, countries will be filtered from experiences with this status.  If not provided, defaults to active.",
              "maximum": 4,
              "location": "Query",
              "type": "[experience_status]",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/countries/destinations",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[country]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "List of all destination countries available for this organization, including countries within a world experience.",
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "sort_parameter_default",
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/organizations",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[organization]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Search organizations. Always paginated.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing",
                  "membership_manager"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "name",
              "description": "Find organizations with this name. Case insensitive. Exact match.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "environment",
              "description": "Find organizations with this environment",
              "location": "Query",
              "type": "environment",
              "required": false
            },
            {
              "name": "parent",
              "description": "Find organizations that belong to this specified parent organization id. Case insensitive. Exact match.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "name",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/organizations",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "organization"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Create a new organization.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "organization_form"
          },
          "parameters": []
        },
        {
          "path": "/organizations/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[organization_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "organization"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "membership_manager"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "organization",
              "description": "Filter to organizations with any one of these ids.",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/organizations/:organization_id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "organization"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about a specific organization.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing",
                  "membership_manager"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization_id",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/organizations/:organization_id",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "organization"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "organization"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Update or create an organization with the specified id.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "organization_put_form"
          },
          "parameters": [
            {
              "name": "organization_id",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/organizations/:organization_id",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Delete the organization with this id",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization_id",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/organizations/:organization_id/settings/currencies",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[currency]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns currencies for a specific organization.",
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_marketing",
                  "membership_manager"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization_id",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/organizations/:organization_id/settings/regions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[region_setting]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns the region settings associated to a specific organization.",
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing",
                  "membership_manager"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization_id",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/organizations/:organization_id/settings/regions/countries/available",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[country]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns the list of enabled countries based on the region settings for a specific organization",
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing",
                  "membership_manager"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization_id",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/organizations/:organization_id/settings/regions/:region",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "region_setting"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "region_setting"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Updates or creates a region setting for a specific organization",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "region_setting_form"
          },
          "parameters": [
            {
              "name": "organization_id",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "region",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/organizations/:organization_id/settings/regions/:region",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Removes the setting for this region for a specific organization",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization_id",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "region",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "organization"
    },
    {
      "path": "/:organization",
      "plural": "payment_method_rules",
      "operations": [
        {
          "path": "/:organization/payment-method-rules",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[payment_method_rule]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "display_position"
                  },
                  {
                    "value": "payment_method"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions",
                  "sort_parameter_default"
                ]
              }
            }
          ],
          "deprecation": {
            "description": "Path is deprecated. Use /:organization/payment/method/rules"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "country",
              "description": "Filters available payment methods to those available for the experience associated with the provided country.",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "amount",
              "description": "Filters available payment methods to those that support the price in the currency of the `currency` parameter.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "currency",
              "description": "Filters available payment methods to those that support the provided currency.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "experience",
              "description": "If provided, the payment methods available for the corresponding experience will be returned.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "ip",
              "description": "If provided, will be used to help pick the experience if the country or experience key are not provided.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "display_position",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/payment/method/rules",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[payment_method_rule]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "display_position"
                  },
                  {
                    "value": "payment_method"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions",
                  "sort_parameter_default"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "country",
              "description": "Filters available payment methods to those available for the experience associated with the provided country.",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "amount",
              "description": "Filters available payment methods to those that support the price in the currency of the `currency` parameter.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "currency",
              "description": "Filters available payment methods to those that support the provided currency.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "experience",
              "description": "If provided, the payment methods available for the corresponding experience will be returned.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "ip",
              "description": "If provided, will be used to help pick the experience if the country or experience key are not provided.",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "display_position",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Returns payment methods that are enabled for an organization and available for the provided country and currency.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "payment_method_rule"
    },
    {
      "path": "/:organization/price/books",
      "plural": "price_books",
      "operations": [
        {
          "path": "/:organization/price/books",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[price_book]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "key",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/price/books",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "price_book"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Create a price book.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "price_book_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/price/books/:key",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "price_book"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about a specific price book.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "io.flow.price.v0.models.price_book",
                "operation_method": "POST",
                "operation_path": "/:organization/price/books",
                "identifier_field": "key",
                "delete_operation_path": "/:organization/price/books/:key"
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/price/books/:key",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "price_book"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "price_book"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Create or update a price book.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "io.flow.price.v0.models.price_book",
                "operation_method": "POST",
                "operation_path": "/:organization/price/books",
                "identifier_field": "key",
                "delete_operation_path": "/:organization/price/books/:key"
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "price_book_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/price/books/:key",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Deletes the specified price book",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "io.flow.price.v0.models.price_book",
                "operation_method": "POST",
                "operation_path": "/:organization/price/books",
                "identifier_field": "key",
                "delete_operation_path": "/:organization/price/books/:key"
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "object-reference",
          "value": {
            "related_service_namespace": "io.flow.organization.v0",
            "resource_type": "io.flow.common.v0.models.organization",
            "operation_method": "POST",
            "operation_path": "/organizations",
            "identifier_field": "id",
            "delete_operation_path": "/organizations/:organization_id"
          }
        },
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "price_book"
    },
    {
      "path": "/:organization/price/books/:price_book_key/items",
      "plural": "price_book_items",
      "operations": [
        {
          "path": "/:organization/price/books/:price_book_key/items",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[price_book_item]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "price_book_key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "key",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "number",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/price/books/:price_book_key/items",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "price_book_item"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Create a price book item.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "price_book_item_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "price_book_key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/price/books/:price_book_key/items/:key",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "price_book_item"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about a specific price book item.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "io.flow.price.v0.models.price_book_item",
                "operation_method": "POST",
                "operation_path": "/:organization/price/books/:price_book_key/items",
                "identifier_field": "key",
                "delete_operation_path": "/:organization/price/books/:price_book_key/items/:key"
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "price_book_key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/price/books/:price_book_key/items/:key",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "price_book_item"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "price_book_item"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Create or update a price book item.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "io.flow.price.v0.models.price_book_item",
                "operation_method": "POST",
                "operation_path": "/:organization/price/books/:price_book_key/items",
                "identifier_field": "key",
                "delete_operation_path": "/:organization/price/books/:price_book_key/items/:key"
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "price_book_item_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "price_book_key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/price/books/:price_book_key/items/:key",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Deletes the specified price book item",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "io.flow.price.v0.models.price_book_item",
                "operation_method": "POST",
                "operation_path": "/:organization/price/books/:price_book_key/items",
                "identifier_field": "key",
                "delete_operation_path": "/:organization/price/books/:price_book_key/items/:key"
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "price_book_key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "object-reference",
          "value": {
            "related_service_namespace": "io.flow.organization.v0",
            "resource_type": "io.flow.common.v0.models.organization",
            "operation_method": "POST",
            "operation_path": "/organizations",
            "identifier_field": "id",
            "delete_operation_path": "/organizations/:organization_id"
          }
        },
        {
          "name": "object-reference",
          "value": {
            "related_service_namespace": "io.flow.catalog.v0",
            "resource_type": "io.flow.price.v0.models.price_book",
            "operation_method": "POST",
            "operation_path": "/:organization/price/books",
            "identifier_field": "key",
            "delete_operation_path": "/:organization/price/books/:key"
          }
        },
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "price_book_item"
    },
    {
      "path": "/:organization/catalog/subcatalogs",
      "plural": "subcatalogs",
      "operations": [
        {
          "path": "/:organization/catalog/subcatalogs",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[subcatalog]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Search subcatalogs. Always paginated.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/subcatalogs",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "subcatalog"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Add subcatalog",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "subcatalog_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/subcatalogs/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[subcatalog_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/subcatalogs/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "subcatalog"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about a specific subcatalog.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "subcatalog",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/subcatalogs",
                "identifier_field": "id",
                "delete_operation_path": "/:organization/catalog/subcatalogs/:id"
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/subcatalogs/:id",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "subcatalog"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "subcatalog"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Update subcatalog with the specified id, creating if it does not exist.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "subcatalog",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/subcatalogs",
                "identifier_field": "id",
                "delete_operation_path": "/:organization/catalog/subcatalogs/:id"
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "subcatalog_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/subcatalogs/:id",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Delete the subcatalog with this id",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "subcatalog",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/subcatalogs",
                "identifier_field": "id",
                "delete_operation_path": "/:organization/catalog/subcatalogs/:id"
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/subcatalogs/:id/settings",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "subcatalog_settings"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about a specific subcatalog's settings.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "subcatalog",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/subcatalogs",
                "identifier_field": "id",
                "delete_operation_path": "/:organization/catalog/subcatalogs/:id"
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/subcatalogs/:id/settings",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "subcatalog_settings"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Update subcatalog settings for the specified subcatalog.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "subcatalog",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/subcatalogs",
                "identifier_field": "id",
                "delete_operation_path": "/:organization/catalog/subcatalogs/:id"
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "subcatalog_settings_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/exclusions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[item]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Search exclusions. Always paginated.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  }
                ]
              }
            },
            {
              "name": "non-crud",
              "value": {}
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "subcatalog",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/subcatalogs",
                "identifier_field": "id",
                "delete_operation_path": "/:organization/catalog/subcatalogs/:id"
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "subcatalog_id",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "number",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "name",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/exclusions/:number",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "item"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about a specific exclusion by catalog item number.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "subcatalog",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/subcatalogs",
                "identifier_field": "id",
                "delete_operation_path": "/:organization/catalog/subcatalogs/:id"
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "item",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/items",
                "identifier_field": "number",
                "delete_operation_path": "/:organization/catalog/items/:number"
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "subcatalog_id",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/exclusions/:number",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "item"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Add exclusion",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "subcatalog",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/subcatalogs",
                "identifier_field": "id",
                "delete_operation_path": "/:organization/catalog/subcatalogs/:id"
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "item",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/items",
                "identifier_field": "number",
                "delete_operation_path": "/:organization/catalog/items/:number"
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "subcatalog_id",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/exclusions/:number",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Delete an exclusion with this catalog item number",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "subcatalog",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/subcatalogs",
                "identifier_field": "id",
                "delete_operation_path": "/:organization/catalog/subcatalogs/:id"
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "item",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/items",
                "identifier_field": "number",
                "delete_operation_path": "/:organization/catalog/items/:number"
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "subcatalog_id",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/inclusions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[item]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Search inclusions. Always paginated.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  }
                ]
              }
            },
            {
              "name": "non-crud",
              "value": {}
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "subcatalog",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/subcatalogs",
                "identifier_field": "id",
                "delete_operation_path": "/:organization/catalog/subcatalogs/:id"
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "subcatalog_id",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "number",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "name",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/inclusions/:number",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "item"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about a specific inclusion by catalog item number.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "subcatalog",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/subcatalogs",
                "identifier_field": "id",
                "delete_operation_path": "/:organization/catalog/subcatalogs/:id"
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "item",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/items",
                "identifier_field": "number",
                "delete_operation_path": "/:organization/catalog/items/:number"
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "subcatalog_id",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/inclusions/:number",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "item"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Add inclusion",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "subcatalog",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/subcatalogs",
                "identifier_field": "id",
                "delete_operation_path": "/:organization/catalog/subcatalogs/:id"
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "item",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/items",
                "identifier_field": "number",
                "delete_operation_path": "/:organization/catalog/items/:number"
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "subcatalog_id",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/inclusions/:number",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Delete an inclusion with this catalog item number",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "subcatalog",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/subcatalogs",
                "identifier_field": "id",
                "delete_operation_path": "/:organization/catalog/subcatalogs/:id"
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "item",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/items",
                "identifier_field": "number",
                "delete_operation_path": "/:organization/catalog/items/:number"
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "subcatalog_id",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/queries",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[subcatalog_query]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Search queries. Always paginated.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "type"
                  }
                ]
              }
            },
            {
              "name": "non-crud",
              "value": {}
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "subcatalog",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/subcatalogs",
                "identifier_field": "id",
                "delete_operation_path": "/:organization/catalog/subcatalogs/:id"
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "subcatalog_id",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "type",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/queries",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "subcatalog_query"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Add query",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "subcatalog",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/subcatalogs",
                "identifier_field": "id",
                "delete_operation_path": "/:organization/catalog/subcatalogs/:id"
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "subcatalog_query_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "subcatalog_id",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/queries/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "subcatalog_query"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about a specific query.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "subcatalog",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/subcatalogs",
                "identifier_field": "id",
                "delete_operation_path": "/:organization/catalog/subcatalogs/:id"
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "subcatalog",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/subcatalogs/:subcatalog_id/queries",
                "identifier_field": "id",
                "delete_operation_path": "/:organization/catalog/subcatalogs/:subcatalog_id/queries/:id"
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "subcatalog_id",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/queries/:id",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Delete a query with this id",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "subcatalog",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/subcatalogs",
                "identifier_field": "id",
                "delete_operation_path": "/:organization/catalog/subcatalogs/:id"
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "subcatalog",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/subcatalogs/:subcatalog_id/queries",
                "identifier_field": "id",
                "delete_operation_path": "/:organization/catalog/subcatalogs/:subcatalog_id/queries/:id"
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "subcatalog_id",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/statistics",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "subcatalog_statistics"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Get statistics for the specified subcatalog",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "subcatalog",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/subcatalogs",
                "identifier_field": "id",
                "delete_operation_path": "/:organization/catalog/subcatalogs/:id"
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "subcatalog_id",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "A configuration with custom query to select a subset of master catalog items for a localized experience",
      "attributes": [
        {
          "name": "object-reference",
          "value": {
            "related_service_namespace": "io.flow.organization.v0",
            "resource_type": "io.flow.common.v0.models.organization",
            "operation_method": "POST",
            "operation_path": "/organizations",
            "identifier_field": "id",
            "delete_operation_path": "/organizations/:organization_id"
          }
        },
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "subcatalog"
    },
    {
      "path": "/:organization/catalog/subcatalogs/:subcatalog_id/items",
      "plural": "subcatalog_items",
      "operations": [
        {
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/items",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[subcatalog_item]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Search subcatalog items. Always paginated.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "subcatalog_id",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "number",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "status",
              "description": "Filter to items with a status as defined in https://docs.flow.io/types.html#type-subcatalog-item-status",
              "maximum": 3,
              "location": "Query",
              "type": "[subcatalog_item_status]",
              "required": false,
              "example": "included"
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/items/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[subcatalog_item_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "subcatalog_id",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "number",
              "description": "Filter to items with any one of these numbers.",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/items/:number",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "subcatalog_item"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about specific subcatalog items.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "subcatalog_id",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Represents information specific to an item in a given subcatalog",
      "attributes": [
        {
          "name": "object-reference",
          "value": {
            "related_service_namespace": "io.flow.organization.v0",
            "resource_type": "io.flow.common.v0.models.organization",
            "operation_method": "POST",
            "operation_path": "/organizations",
            "identifier_field": "id",
            "delete_operation_path": "/organizations/:organization_id"
          }
        },
        {
          "name": "object-reference",
          "value": {
            "related_service_namespace": "io.flow.catalog.v0",
            "resource_type": "subcatalog",
            "operation_method": "POST",
            "operation_path": "/:organization/catalog/subcatalogs",
            "identifier_field": "id",
            "delete_operation_path": "/:organization/catalog/subcatalogs/:id"
          }
        },
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "subcatalog_item"
    },
    {
      "path": "/:organization/query",
      "plural": "subcatalog_queries",
      "operations": [
        {
          "path": "/:organization/query/validations",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "subcatalog_query_validation"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "[string]"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Represents a typed query to indicate which items to include or exclude in a subcatalog",
      "attributes": [
        {
          "name": "object-reference",
          "value": {
            "related_service_namespace": "io.flow.organization.v0",
            "resource_type": "io.flow.common.v0.models.organization",
            "operation_method": "POST",
            "operation_path": "/organizations",
            "identifier_field": "id",
            "delete_operation_path": "/organizations/:organization_id"
          }
        },
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "subcatalog_query"
    },
    {
      "path": "/:organization/catalog/targetings",
      "plural": "targetings",
      "operations": [
        {
          "path": "/:organization/catalog/targetings",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[targeting]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            },
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "key",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/targetings",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "targeting"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "targeting_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/targetings/:key",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "targeting"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "targeting",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/targetings",
                "identifier_field": "key",
                "delete_operation_path": "/:organization/catalog/targetings/:key"
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/targetings/:key",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "targeting"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "targeting"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "targeting",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/targetings",
                "identifier_field": "key",
                "delete_operation_path": "/:organization/catalog/targetings/:key"
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "targeting_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/catalog/targetings/:key",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            },
            {
              "name": "object-reference",
              "value": {
                "related_service_namespace": "io.flow.catalog.v0",
                "resource_type": "targeting",
                "operation_method": "POST",
                "operation_path": "/:organization/catalog/targetings",
                "identifier_field": "key",
                "delete_operation_path": "/:organization/catalog/targetings/:key"
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "object-reference",
          "value": {
            "related_service_namespace": "io.flow.organization.v0",
            "resource_type": "io.flow.common.v0.models.organization",
            "operation_method": "POST",
            "operation_path": "/organizations",
            "identifier_field": "id",
            "delete_operation_path": "/organizations/:organization_id"
          }
        },
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "targeting"
    },
    {
      "path": "/:organization/catalog/targeting-items",
      "plural": "targeting_items",
      "operations": [
        {
          "path": "/:organization/catalog/targeting-items",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[targeting_item]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "number"
                  }
                ]
              }
            },
            {
              "name": "non-crud",
              "value": {}
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "key",
              "description": "Key of the targeting",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "item_number",
              "description": "Number of the item",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Represents catalog items where a targeting query is applicable",
      "attributes": [
        {
          "name": "object-reference",
          "value": {
            "related_service_namespace": "io.flow.organization.v0",
            "resource_type": "io.flow.common.v0.models.organization",
            "operation_method": "POST",
            "operation_path": "/organizations",
            "identifier_field": "id",
            "delete_operation_path": "/organizations/:organization_id"
          }
        },
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "type": "targeting_item"
    },
    {
      "path": "/:organization/currency/settings",
      "plural": "organization_currency_settings",
      "operations": [
        {
          "path": "/:organization/currency/settings",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[organization_currency_setting]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Search organization currency settings. Always paginated.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "base"
                  },
                  {
                    "value": "target"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "base",
              "description": "Filter by the (case-insensitive) base currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "target",
              "description": "Filter by the (case-insensitive) target currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/currency/settings",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "organization_currency_setting"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Create organization currency settings.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "organization_currency_setting_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/currency/settings/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[organization_currency_setting_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "base"
                  },
                  {
                    "value": "target"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/currency/settings/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "organization_currency_setting"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/currency/settings/:id",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "organization_currency_setting"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Update an existing organization currency setting by id.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "organization_currency_setting_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/currency/settings/:id",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Delete the organization currency setting with this id.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Represents organization-specific currency conversion adjustments.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "pricing"
          }
        }
      ],
      "type": "organization_currency_setting"
    },
    {
      "path": "/:organization/currency/rates",
      "plural": "rates",
      "operations": [
        {
          "path": "/:organization/currency/rates",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[rate]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Search organization currency conversion rates. Always paginated.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "base"
                  },
                  {
                    "value": "target"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_finance"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "base",
              "description": "Filter by one or more (case-insensitive) base currency ISO 4217 3-character codes, as defined in https://api.flow.io/reference/currencies",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "target",
              "description": "Filter by the (case-insensitive) target currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "organization",
              "name": "type",
              "description": "Filter by rate type",
              "location": "Query",
              "type": "rate_type",
              "required": true
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/currency/rates/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[rate_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "base"
                  },
                  {
                    "value": "target"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_finance"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "base",
              "description": "Filter by the (case-insensitive) base currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "target",
              "description": "Filter by the (case-insensitive) target currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "organization",
              "name": "type",
              "description": "Filter by rate type",
              "location": "Query",
              "type": "rate_type",
              "required": true
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Represents an organization-specific currency conversion rate at a point in time.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "pricing"
          }
        }
      ],
      "type": "rate"
    },
    {
      "path": "/:organization/harmonization/categories",
      "plural": "harmonized_categories",
      "operations": [
        {
          "path": "/:organization/harmonization/categories",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[harmonized_category]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 429
                }
              },
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "sort",
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "parent_id",
              "maximum": 100,
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            }
          ]
        }
      ],
      "description": "Categories optimized for harmonization",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "landed cost"
          }
        }
      ],
      "type": "harmonized_category"
    },
    {
      "path": "/:organization/harmonization/landed-costs",
      "plural": "harmonized_landed_costs",
      "operations": [
        {
          "path": "/:organization/harmonization/landed-costs",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "harmonized_landed_cost"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            },
            {
              "code": {
                "integer": {
                  "value": 429
                }
              },
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Single operation that provides harmonization landed costs (i.e. duties and taxes) for 1 or more items. This method is designed to enable a single call from applications that need it (like checkout) to get all data for a collection of items",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "harmonized_landed_cost_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Summary of landed cost data (taxes and duties) for 1 or more items going to a single destination country. Records are unique based on (item.number, country of origin).",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "landed cost"
          }
        }
      ],
      "type": "harmonized_landed_cost"
    },
    {
      "path": "/:organization/harmonization/hs10",
      "plural": "hs10",
      "operations": [
        {
          "path": "/:organization/harmonization/hs10",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[hs10]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 429
                }
              },
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "item_number"
                  },
                  {
                    "value": "origin"
                  },
                  {
                    "value": "destination"
                  },
                  {
                    "value": "code"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "item_number",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "origin",
              "description": "The ISO 3166 3 character country code of the destination country",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "destination",
              "description": "The ISO 3166 3 character country code of the destination country",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "code",
              "description": "Filter to records matching this HS-10 code",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/harmonization/hs10/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[hs10_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 429
                }
              },
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "hs10_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "hs10_id",
              "description": "Filter to HS-10s with any one of these ids.",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "API to fetch HS-10 codes assigned to your items. Note that if your item has been classified multiple times or its classification has changed, this API will provide you with the most recent harmonization code for that item. That is, each code is unique across your item number, country of origin and destination.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "landed cost"
          }
        }
      ],
      "type": "hs10"
    },
    {
      "path": "/:organization/tax/registrations",
      "plural": "tax_registrations",
      "operations": [
        {
          "path": "/:organization/tax/registrations",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "tax_registration"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            },
            {
              "code": {
                "integer": {
                  "value": 429
                }
              },
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "tax_registration_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/tax/registrations/:key",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "tax_registration"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "tax_registration"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            },
            {
              "code": {
                "integer": {
                  "value": 429
                }
              },
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "tax_registration_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/tax/registrations/:key",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 429
                }
              },
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Result of looking up a specific tax registration number. Indicates validity of a number for a specific country and (if valid) the associated person/company.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "landed cost"
          }
        }
      ],
      "type": "tax_registration"
    },
    {
      "path": "/:organization/authorizations",
      "plural": "authorizations",
      "operations": [
        {
          "path": "/:organization/authorizations",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[authorization]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "key",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "order_number",
              "maximum": 100,
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "card"
            }
          ]
        },
        {
          "path": "/:organization/authorizations",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "authorization"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Create a new authorization.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "authorization_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "card"
            }
          ]
        },
        {
          "path": "/:organization/authorizations/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[authorization_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "authorization_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[long]",
              "required": false
            },
            {
              "name": "authorization_id",
              "description": "Filter to authorizations with any one of these ids.",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/authorizations/:key",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "authorization"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about a specific authorization.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "card"
            }
          ]
        },
        {
          "path": "/:organization/authorizations/:key",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "authorization"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "authorization"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Attempts to create an authorization identified by the provided key. Multiple requests using the same key are idempotent.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "authorization_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "card"
            }
          ]
        },
        {
          "path": "/:organization/authorizations/:key",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "reversal_error"
            }
          ],
          "description": "Deprecated. This end point no longer deletes an authorization and is implemented by creating a reversal for the remaining balance on the auth.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/authorizations/:key/details",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "authorization"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Accepts the data from the underlying processor to, for example, record the 3DSecure results",
          "attributes": [],
          "body": {
            "attributes": [],
            "type": "json"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "payment"
          }
        }
      ],
      "type": "authorization"
    },
    {
      "path": "/:organization/captures",
      "plural": "captures",
      "operations": [
        {
          "path": "/:organization/captures",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[capture]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "key",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "identifier",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "authorization_id",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "authorization_key",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/captures",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "capture"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "capture_error"
            }
          ],
          "description": "Create a new capture.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "capture_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/captures/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[capture_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "capture_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[long]",
              "required": false
            },
            {
              "name": "capture_id",
              "description": "Filter to captures with any one of these ids.",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/captures/:key",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "capture"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about a specific capture.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/captures/:key/identifiers",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[capture_identifier]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "identifier"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "identifier",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "name",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/captures/:key/identifiers/:identifier",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "capture_identifier"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "capture_identifier"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Create a new identifier for this capture",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "identifier_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/captures/:key/identifiers/:identifier",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Capture actually transfers funds. You can capture as many times as you'd like up until the total amount of the authorization has been captured or the authorization otherwise becomes unavailable (e.g. expires).",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "payment"
          }
        }
      ],
      "type": "capture"
    },
    {
      "path": "/:organization/cards",
      "plural": "cards",
      "operations": [
        {
          "path": "/:organization/cards",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[card]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "sort_parameter_default"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "token",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/cards",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "card"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "card_error"
            }
          ],
          "description": "Create a new card. Note that when using JSONP to submit a card, you do not need to authenticate.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "card_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/cards/nonces",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "card"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Creates a card from a one time nonce. Each nonce can be used at most once and you will receive a validation error if the nonce has already been exchanged.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "card_nonce_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/cards/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[card_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "card_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[long]",
              "required": false
            },
            {
              "name": "card_id",
              "description": "Filter to cards with any one of these ids.",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "card_token",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/cards/:token",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "card"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about a specific card.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "token",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/cards/:token",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Deletes the specified card",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "token",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Card represents the metadata about a secure, tokenized card. The card 'token' is a unique, cryptographically secure token by which this card can be identified in the future. The card token itself will either be a permanent card token (denoted by a prefix of F96) or a one time nonce (denoted by a prefix of F17). Nonces represent cards that were encrypted from public channels (like the user's browser via JavaScript) and can be used once only. If you have a nonce you can exchange it for a permanent card token via the operation POST /:organization/cards/nonces",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "payment"
          }
        }
      ],
      "type": "card"
    },
    {
      "path": "/:organization/sources/payments/cards",
      "plural": "card_payment_sources",
      "operations": [
        {
          "path": "/:organization/sources/payments/cards",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[card_payment_source]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "customer_number",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/sources/payments/cards",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "card_payment_source"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "payment_error"
            }
          ],
          "description": "Create a new card payment source.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "card_payment_source_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/sources/payments/cards/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "card_payment_source"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about a specific card payment source.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/sources/payments/cards/:id",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "card_payment_source"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "payment_error"
            }
          ],
          "description": "Update a card payment source.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "card_payment_source_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/sources/payments/cards/:id",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Deletes the specified card payment source",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Represents a saved credit card payment method.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "payment"
          }
        }
      ],
      "type": "card_payment_source"
    },
    {
      "path": "/:organization/gateways/authentication",
      "plural": "gateway_authentication_data",
      "operations": [
        {
          "path": "/:organization/gateways/authentication",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "gateway_authentication_data"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Specify authentication data for payment processor",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "gateway_authentication_data_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "payment"
          }
        }
      ],
      "type": "gateway_authentication_data"
    },
    {
      "path": "/:organization/payments",
      "plural": "payments",
      "operations": [
        {
          "path": "/:organization/payments",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[payment]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "payment_method",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "paypal"
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/payments",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "payment"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "payment_error"
            }
          ],
          "description": "Create a new payment. Note that when using JSONP to submit a payment, you do not need to authenticate.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session",
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "payment_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/payments/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[payment_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "payment_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[long]",
              "required": false
            },
            {
              "name": "payment_id",
              "description": "Filter to payments with any one of these ids.",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/payments/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "payment"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about a specific payment.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/payments/:id",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "Payments can be deleted until they are associated with an authorization",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Deletes the specified payment",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Represents data for a specific online payment method",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "payment"
          }
        }
      ],
      "type": "payment"
    },
    {
      "path": "/:organization/encryption/keys",
      "plural": "public_keys",
      "operations": [
        {
          "path": "/:organization/encryption/keys",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[public_key]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Returns your public keys",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/encryption/keys/latest",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "public_key"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Return the latest public key for an organization",
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "A public key is used to encrypt cards client side prior to submitting to the Flow vault.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "payment"
          }
        }
      ],
      "type": "public_key"
    },
    {
      "path": "/:organization/refunds",
      "plural": "refunds",
      "operations": [
        {
          "path": "/:organization/refunds",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[refund]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "key",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "identifier",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "authorization_id",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "authorization_key",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "capture_id",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "capture_key",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/refunds",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "refund"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "refund_error"
            }
          ],
          "description": "Create a new refund.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "refund_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/refunds/summary/:order_number",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "refund_order_summary"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns a refund order summary for the specified order.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "order_number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/refunds/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[refund_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "refund_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[long]",
              "required": false
            },
            {
              "name": "refund_id",
              "description": "Filter to refunds with any one of these ids.",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/refunds/:key",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "refund"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about a specific refund.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/refunds/:key/identifiers",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[refund_identifier]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "identifier"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "identifier",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "name",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/refunds/:key/identifiers/:identifier",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "refund_identifier"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "refund_identifier"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Create a new identifier for this refund",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "identifier_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/refunds/:key/identifiers/:identifier",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Refunds can be created against either a specific capture or an authorization (in which case we will select 1 or more specific captures against which to execute the refund).",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "payment"
          }
        }
      ],
      "type": "refund"
    },
    {
      "path": "/:organization/reversals",
      "plural": "reversals",
      "operations": [
        {
          "path": "/:organization/reversals",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[reversal]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "key",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "authorization_id",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "authorization_key",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/reversals",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "reversal"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "No such authorization",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "reversal_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "reversal_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/reversals/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[reversal_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "reversal_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[long]",
              "required": false
            },
            {
              "name": "reversal_id",
              "description": "Filter to reversals with any of these IDs",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/reversals/:key",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "reversal"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/reversals/:key",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "reversal"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "No such authorization",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "reversal_error"
            }
          ],
          "description": "Try inserting or updating a new reversal. Useful for retrying pending reversals",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "reversal_put_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "A reversal is used to clear an authorization (full or partial).",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "payment"
          }
        }
      ],
      "type": "reversal"
    },
    {
      "path": "/:organization/virtual/cards",
      "plural": "virtual_cards",
      "operations": [
        {
          "path": "/:organization/virtual/cards",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[virtual_card]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Retrieve all the virtual credit cards that have been created matching selected criteria.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "sort_parameter_default",
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "key",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/virtual/cards/:key",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "virtual_card"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Retrieves a virtual credit card using your unique key used when creating the card. Note that the card number and cvv will not be returned by this request to maintain PCI compliance. If you have lost these details you will need to create a new card.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "description": "Your unique identifier for this virtual card.",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/virtual/cards/:key/authorizations/:authorization_key",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "virtual_card"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Creates a new virtual credit card. The card number and cvv will only be returned once when creating the card to maintain PCI compliance. This end point is idempotent and subsequent calls with same key will return details for the previously created card.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "virtual_card_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "description": "Your unique identifier for this virtual card, which is used to implement idempotency.",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "authorization_key",
              "description": "The key of the authorization against which to issue the virtual card.",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Virtual credit cards are created for a specific limit and currency. Currently only USD denominated cards can be issued. Once created the virtual card can be used in the same way as a physical credit card using the card number, cvv and expiration details.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "payment"
          }
        }
      ],
      "type": "virtual_card"
    },
    {
      "path": "/:organization/virtual/card/captures",
      "plural": "virtual_card_captures",
      "operations": [
        {
          "path": "/:organization/virtual/card/captures",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[virtual_card_capture]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Retrieve all the virtual credit card captures that have been received for all issued cards matching selected criteria.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/virtual/card/captures/:virtual_card_id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[virtual_card_capture]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Retrieve payment captures for a specific virtual credit card that has been previously issued.",
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "virtual_card_id",
              "description": "The unique identifier for the virtual card.",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Payment has been captured for the virtual credit card",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "payment"
          }
        }
      ],
      "type": "virtual_card_capture"
    },
    {
      "path": "/:organization/virtual/card/refunds",
      "plural": "virtual_card_refunds",
      "operations": [
        {
          "path": "/:organization/virtual/card/refunds",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[virtual_card_refund]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Retrieve all the virtual credit card refunds that have been received for all issued cards matching selected criteria.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/virtual/card/refunds/:virtual_card_id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[virtual_card_refund]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Retrieve payment refunds for a specific virtual credit card that has been previously issued.",
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "virtual_card_id",
              "description": "The unique identifier for the virtual card.",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "A refund has been issued for the virtual credit card",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "payment"
          }
        }
      ],
      "type": "virtual_card_refund"
    },
    {
      "path": "/:organization/centers",
      "plural": "centers",
      "operations": [
        {
          "path": "/:organization/centers",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[center]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "key",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "name",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/centers",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "center"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "center_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/centers/query",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[center]"
            },
            {
              "code": {
                "integer": {
                  "value": 400
                }
              },
              "attributes": [],
              "type": "generic_error"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "center_query"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/centers/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[center_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "key",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/centers/:key",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "center"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/centers/:key",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "center"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "center"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "center_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/centers/:key",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Represents a facility capable of fulfilling a shipment",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "type": "center"
    },
    {
      "path": "/:organization/delivery-windows",
      "plural": "delivery_windows",
      "operations": [
        {
          "path": "/:organization/delivery-windows/summary",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "delivery_window"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "Unable to resolve delivery window based on parameter entries",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Endpoint to request a delivery window. Requires some knowledge of origin (based on organization, center, or specified address string) and destination (based on ip, lat/long, or address string). Other attributes allow us to narrow down delivery windows even more such as service level to be used and timestamp of expected shipment date.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true,
              "example": "some-org-key"
            },
            {
              "default": "range",
              "name": "strategy",
              "location": "Query",
              "type": "strategy",
              "required": true,
              "example": "range,from,to"
            },
            {
              "name": "center",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "ctr-20150101-101"
            },
            {
              "name": "origin",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "22 Hudson Pl, Hoboken NJ 07030 USA"
            },
            {
              "name": "destination",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "22 Hudson Pl, Hoboken NJ 07030 USA"
            },
            {
              "name": "ip",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "68.192.179.190"
            },
            {
              "name": "latitude",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "40.76955"
            },
            {
              "name": "longitude",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "-74.02042"
            },
            {
              "name": "service",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "ups-ground, dhl-express-worldwide"
            }
          ]
        }
      ],
      "description": "Flow's estimate of when a shipment for this delivery will actually arrive at the final destination, taking into account a shipment estimate, center schedules, and carrier transit windows.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "type": "delivery_window"
    },
    {
      "path": "/:organization/dimension-estimates",
      "plural": "dimension_estimates",
      "operations": [
        {
          "path": "/:organization/dimension-estimates",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[dimension_estimate]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/dimension-estimates",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "dimension_estimate"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "dimension_estimate_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/dimension-estimates/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[dimension_estimate_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "dimension_estimate"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/dimension-estimates/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "dimension_estimate"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/dimension-estimates/:id",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "type": "dimension_estimate"
    },
    {
      "path": "/:organization/inventory_rules",
      "plural": "inventory_rules",
      "operations": [
        {
          "path": "/:organization/inventory_rules",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[inventory_rule]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/inventory_rules",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "inventory_rule"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "inventory_rule_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/inventory_rules/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[inventory_rule_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Ordered list of rules to apply, from first to last, to get available quantity. This is unique per organization",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "type": "inventory_rule"
    },
    {
      "path": "/:organization/inventory_snapshots",
      "plural": "inventory_snapshots",
      "operations": [
        {
          "path": "/:organization/inventory_snapshots",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[inventory_snapshot]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "center"
                  },
                  {
                    "value": "item_number"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "center",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "item_number",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/inventory_snapshots/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[inventory_snapshot_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "inventory_snapshot"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "inventory_snapshot",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/inventory_snapshots/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "inventory_snapshot"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Inventory snapshot reflects the current quantity and available number of units for a given center / item",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "type": "inventory_snapshot"
    },
    {
      "path": "/:organization/inventory_updates",
      "plural": "inventory_updates",
      "operations": [
        {
          "path": "/:organization/inventory_updates",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[inventory_update]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "center"
                  },
                  {
                    "value": "item_number"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "center",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "item_number",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/inventory_updates",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "inventory_update"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "inventory_update_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/inventory_updates/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[inventory_update_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "inventory_update"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "inventory_update",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/inventory_updates/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "inventory_update"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Represents a single update on inventory quantity",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "type": "inventory_update"
    },
    {
      "path": "/:organization/manifests",
      "plural": "manifests",
      "operations": [
        {
          "path": "/:organization/manifests",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[manifest]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  },
                  {
                    "value": "carrier_tracking_number"
                  },
                  {
                    "value": "flow_tracking_number"
                  },
                  {
                    "value": "service"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "carrier_tracking_number",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "flow_tracking_number",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "service",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/manifests",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "manifest"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Creates a new manifest/carrier BOL with specific tracking numbers",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "manifest_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/manifests/services/:service/outstanding",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 302
                }
              },
              "attributes": [],
              "type": "string"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Generates a new manifest with all outstanding labels and redirects to a downloadable PDF of carrier-generated manifest or bill of lading (BOL). If no outstanding labels, this will generate a 422 error.",
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "service",
              "location": "Path",
              "type": "string",
              "required": true,
              "example": "dhl-express-worldwide"
            }
          ]
        },
        {
          "path": "/:organization/manifests/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "manifest"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Represents closeout of a group of labels that have been transferred to the carrier for shipping",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "type": "manifest"
    },
    {
      "path": "/:organization/quotes",
      "plural": "quotes",
      "operations": [
        {
          "path": "/:organization/quotes",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[quote]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Search quotes. Always paginated.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions",
                  "get"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/quotes",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "quote"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "quote_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "quote_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/quotes/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "quote"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Represents a collection of deliveries and available options for fulfillment of that delivery",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "type": "quote"
    },
    {
      "path": "/:organization/ratecards",
      "plural": "ratecards",
      "operations": [
        {
          "path": "/:organization/ratecards",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[ratecard]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "service"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "number",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "service",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/ratecards",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "ratecard"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "ratecard_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/ratecards/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[ratecard_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/ratecards/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "ratecard"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/ratecards/:id/publish",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "ratecard"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "ratecard"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Snapshot of all lanes and rows across all service levels of an organization",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "type": "ratecard"
    },
    {
      "path": "/:organization/ratecard_estimates",
      "plural": "ratecard_estimates",
      "operations": [
        {
          "path": "/:organization/ratecard_estimates",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[ratecard_estimate]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Endpoint to get shipment cost estimates based on applicable rate cards. An origin and destination address must be provided. Final amounts are based on either gravitational weight or dimensional weight. When estimating based off gravitational weight, the weight field must be set. When estimating based off dimensional weight, then length/width/depth must be set. For either one, the appropriate unit of measurement must be given.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "total"
                  }
                ]
              }
            },
            {
              "name": "non-crud",
              "value": {}
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "ratecard_estimate_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/ratecard_estimates/summaries",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[ratecard_estimate]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Endpoint to get a summary of the shipment estimates based on applicable rate cards. An origin and destination country must be provided.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "ratecard_estimate_summary_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "type": "ratecard_estimate"
    },
    {
      "path": "/:organization/ratecard-lanes",
      "plural": "ratecard_lanes",
      "operations": [
        {
          "path": "/:organization/ratecard-lanes",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[ratecard_lane]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  },
                  {
                    "value": "destination"
                  },
                  {
                    "value": "delivered_duty"
                  },
                  {
                    "value": "origin"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "delivered_duty",
              "location": "Query",
              "type": "delivered_duty",
              "required": false
            },
            {
              "name": "destination",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "origin",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "ratecard_id",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "service",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/ratecard-lanes",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "ratecard_lane"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "ratecard_lane_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/ratecard-lanes/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "ratecard_lane"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/ratecard-lanes/:id",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "ratecard_lane"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "ratecard_lane"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "ratecard_lane_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/ratecard-lanes/:id",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Describe list of rates applicable for a lane on the ratecard - defined by origin and destination zone",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "type": "ratecard_lane"
    },
    {
      "path": "/:organization/ratecards/:ratecard_id/lanes/:lane_id/rates",
      "plural": "ratecard_rates",
      "operations": [
        {
          "path": "/:organization/ratecards/:ratecard_id/lanes/:lane_id/rates",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[ratecard_rate]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "weight"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "ratecard_id",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "lane_id",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "weight",
              "maximum": 100,
              "location": "Query",
              "type": "[double]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/ratecards/:ratecard_id/lanes/:lane_id/rates",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "ratecard_rate"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "ratecard_rate_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "ratecard_id",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "lane_id",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/ratecards/:ratecard_id/lanes/:lane_id/rates/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[ratecard_rate_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "ratecard_id",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "lane_id",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/ratecards/:ratecard_id/lanes/:lane_id/rates/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "ratecard_rate"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "ratecard_id",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "lane_id",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/ratecards/:ratecard_id/lanes/:lane_id/rates/:id",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "ratecard_rate"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "ratecard_rate"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "ratecard_lane_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "ratecard_id",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "lane_id",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Specific line item in a ratecard lane with information on a weight threshold and corresponding amount to charge",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "type": "ratecard_rate"
    },
    {
      "path": "/:organization/returns",
      "plural": "returns",
      "operations": [
        {
          "path": "/:organization/returns",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[return]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "order_number"
                  },
                  {
                    "value": "flow_tracking_number"
                  },
                  {
                    "value": "carrier_tracking_number"
                  },
                  {
                    "value": "service"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "key",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "order_number",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "flow_tracking_number",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "carrier_tracking_number",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "service",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/returns",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "return"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "return_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/returns/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[return_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "key",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/returns/:key",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "return"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/returns/:key",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "return"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "return"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "return_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/returns/:key",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "type": "return"
    },
    {
      "path": "/:organization/inventory/serials",
      "plural": "serials",
      "operations": [
        {
          "path": "/:organization/inventory/serials",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[serial]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "number",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "status",
              "maximum": 3,
              "location": "Query",
              "type": "[serial_status]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/inventory/serials",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "serial"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "serial_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/inventory/serials/prices/:aggregate",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[serial]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "aggregate",
              "description": "Returns the serial price computed for the specified aggregate",
              "location": "Path",
              "type": "aggregate",
              "required": true
            },
            {
              "name": "item_number",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "minimum": 1,
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/inventory/serials/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[serial_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "number",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/inventory/serials/:number",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "serial"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/inventory/serials/:number",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "serial"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "serial"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "serial_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/inventory/serials/:number",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "A unique identifier assigned to an individual item.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "type": "serial"
    },
    {
      "path": "/:organization/shipping/configuration",
      "plural": "shipping_configurations",
      "operations": [
        {
          "path": "/:organization/shipping/configuration",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[shipping_configuration]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions",
                  "get"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "key",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "name",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "experience",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "required": false,
              "example": "center"
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "name",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/shipping/configuration",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "shipping_configuration"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "shipping_configuration_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/shipping/configuration/:key",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "shipping_configuration"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "required": false,
              "example": "center"
            }
          ]
        },
        {
          "path": "/:organization/shipping/configuration/:key",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "shipping_configuration"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "shipping_configuration"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "shipping_configuration_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "required": false,
              "example": "center"
            }
          ]
        },
        {
          "path": "/:organization/shipping/configuration/:key",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/shipping/configuration/:key/lanes",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[shipping_lane]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions",
                  "get"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "region",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "required": false,
              "example": "center"
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/shipping/configuration/:key/lanes",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "shipping_lane"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "generic_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "shipping_lane_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "required": false,
              "example": "center"
            }
          ]
        },
        {
          "path": "/:organization/shipping/configuration/:key/lanes/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "shipping_lane"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "required": false,
              "example": "center"
            }
          ]
        },
        {
          "path": "/:organization/shipping/configuration/:key/lanes/:id",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "shipping_lane"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "shipping_lane_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "required": false,
              "example": "center"
            }
          ]
        },
        {
          "path": "/:organization/shipping/configuration/:key/lanes/:id",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/shipping/configuration/:key/lanes/:id/defaults/tiers",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "shipping_lane_default_tier"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Endpoint to retrieve the default tier of a shipping lane",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/shipping/configuration/:key/lanes/:id/defaults/tiers",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "shipping_lane_default_tier"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "shipping_lane_default_tier"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Endpoint to set or udpate the default tier of a shipping lane",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "shipping_lane_default_tier_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "type": "shipping_configuration"
    },
    {
      "path": "/:organization/shipping/configuration/copies",
      "plural": "shipping_configuration_copies",
      "operations": [
        {
          "path": "/:organization/shipping/configuration/copies/:key",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "shipping_configuration_copy"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "shipping_configuration_copy_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "type": "shipping_configuration_copy"
    },
    {
      "path": "/:organization/shipping_labels",
      "plural": "shipping_labels",
      "operations": [
        {
          "path": "/:organization/shipping_labels",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[shipping_label]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "carrier_tracking_number"
                  },
                  {
                    "value": "flow_tracking_number"
                  },
                  {
                    "value": "order_number"
                  },
                  {
                    "value": "service"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "carrier_tracking_number",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "flow_tracking_number",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "order_number",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "service",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "show_commercial_invoice",
              "location": "Query",
              "type": "boolean",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/shipping_labels",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "shipping_label"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "shipping_label_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "show_commercial_invoice",
              "location": "Query",
              "type": "boolean",
              "required": false
            }
          ]
        },
        {
          "path": "/:organization/shipping_labels/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[shipping_label_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "label"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "label",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/shipping_labels/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "shipping_label"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Represents information about a carrier-generated shipping label used by a shipper to transport a package from a given origin to destination",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "type": "shipping_label"
    },
    {
      "path": "/:organization/shipping-notifications",
      "plural": "shipping_notifications",
      "operations": [
        {
          "path": "/:organization/shipping-notifications",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[shipping_notification]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "carrier_tracking_number"
                  },
                  {
                    "value": "flow_tracking_number"
                  },
                  {
                    "value": "order_number"
                  },
                  {
                    "value": "service"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "key",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "carrier_tracking_number",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "flow_tracking_number",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "order_number",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "service",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/shipping-notifications",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "shipping_notification"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "shipping_notification_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/shipping-notifications/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[shipping_notification_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "key",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/shipping-notifications/:key",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "shipping_notification"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/shipping-notifications/:key",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "shipping_notification"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "shipping_notification"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "detailed_shipping_notification_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/shipping-notifications/:key",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Represents information about a client-facilitated shipment where the shipping label and fulfillment was not handled by Flow. For merchant-of-record and tracking purposes, clients doing their own shipping will need to notify Flow of shipped packages.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "type": "shipping_notification"
    },
    {
      "path": "/:organization/surcharge/settings",
      "plural": "surcharge_settings",
      "operations": [
        {
          "path": "/:organization/surcharge/settings/displays",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[surcharge_setting_display]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "type": "surcharge_setting"
    },
    {
      "path": "/:organization/tiers",
      "plural": "tiers",
      "operations": [
        {
          "path": "/:organization/tiers",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[tier]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "direction",
              "location": "Query",
              "type": "lane_direction",
              "required": false,
              "example": "outbound"
            },
            {
              "name": "experience",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "required": false,
              "example": "center"
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "name",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/tiers",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "tier"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "tier_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/tiers/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[tier_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "tier"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/tiers/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "tier"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/tiers/:id",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "tier"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "tier"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "tier_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/tiers/:id",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Service shipping tier available in this tier group. e.g. Standard tier, Express tier, Economy tier",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "type": "tier"
    },
    {
      "path": "",
      "plural": "trackings",
      "operations": [
        {
          "path": "/trackings/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "tracking"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Public endpoint to get all relevant information about a tracking, label(s) under it, and event(s) under those label(s)",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/trackings",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[tracking]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/trackings",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "tracking"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [],
          "body": {
            "attributes": [],
            "type": "tracking_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/trackings/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[tracking_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "tracking_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "tracking_id",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Top level tracking information which contains labels. In cases where shipments are re-labeled, you will see multiple labels for each tracking allowing simple access to see where a shipment is - with which carrier and with the local tracking number",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "type": "tracking"
    },
    {
      "path": "/:organization/tracking-events",
      "plural": "tracking_events",
      "operations": [
        {
          "path": "/:organization/tracking-events",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[tracking_event]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "tracking_id"
                  },
                  {
                    "value": "tracking_label_id"
                  },
                  {
                    "value": "timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "tracking_id",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "tracking_label_id",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/tracking-events/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[tracking_event_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "tracking_event_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "tracking_event_id",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/tracking-events/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "tracking_event"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "type": "tracking_event"
    },
    {
      "path": "/:organization/tracking-labels",
      "plural": "tracking_labels",
      "operations": [
        {
          "path": "/:organization/tracking-labels",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[tracking_label]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "tracking_id"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "tracking_id",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/tracking-labels",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "tracking_label"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "tracking_label_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/tracking-labels/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[tracking_label_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "tracking_label_id"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "tracking_label_id",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/tracking-labels/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "tracking_label"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Represents a specific label being tracked as part of the tracking bucket",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "type": "tracking_label"
    },
    {
      "path": "/:organization/webhooks",
      "plural": "webhooks",
      "operations": [
        {
          "path": "/:organization/webhooks",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[webhook]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns webhooks for an organization",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            },
            {
              "name": "non-crud",
              "value": {}
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/webhooks",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "webhook"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Create a new webhook",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "webhook_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/webhooks/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "webhook"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about a specific webhook",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/webhooks/:id",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "webhook"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Update an existing webhook",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "webhook_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/webhooks/:id",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Delete a webhook with the specified id",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "webhook"
          }
        }
      ],
      "type": "webhook"
    },
    {
      "path": "/:organization/webhook/deliveries",
      "plural": "webhook_deliveries",
      "operations": [
        {
          "path": "/:organization/webhook/deliveries",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[webhook_delivery]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns deliveries for an organization's webhook",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "webhook_id"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "non-crud",
              "value": {}
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "webhook_id",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/webhook/deliveries/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "webhook_delivery"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about a specific webhook delivery",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/webhook/deliveries/:id/requests",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "webhook_request"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Redeliver a webhook request. This created a new webhook request to requeue delivery",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "A webhook delivery represents an event that matched a webhook's event types. Each delivery will be attempted one or more times subject to the settings of your webhook.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "webhook"
          }
        }
      ],
      "type": "webhook_delivery"
    },
    {
      "path": "/:organization/webhook/settings",
      "plural": "webhook_settings",
      "operations": [
        {
          "path": "/:organization/webhook/settings",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "webhook_settings"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns the webhook settings for an organization",
          "attributes": [
            {
              "name": "non-crud",
              "value": {}
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/webhook/settings",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "webhook_settings"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "webhook_settings"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Updates the webhook settings for an organization",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "webhook_settings"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Sets organization level settings to determine things like how many retries on delivery, how long we wait, etc. By default, we will attempt delivery up to 6 times, using exponential backoff with a see of 1 minute (60k ms) - which means that we will retry over the course of approximately an hour before giving up.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "webhook"
          }
        }
      ],
      "type": "webhook_settings"
    },
    {
      "path": "/addresses",
      "plural": "addresses",
      "operations": [
        {
          "path": "/addresses",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[address]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "location_error"
            }
          ],
          "description": "Geolocates the request based on the provided parameters, returning a list of potential matching addresses.",
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "address",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "22 Hudson Pl, Hoboken NJ 07030 USA"
            },
            {
              "name": "ip",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "96.242.151.245"
            }
          ]
        },
        {
          "path": "/addresses/verifications",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "address_verification"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "location_error"
            }
          ],
          "attributes": [],
          "body": {
            "attributes": [],
            "type": "address"
          },
          "parameters": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "geolocation"
          }
        }
      ],
      "type": "address"
    },
    {
      "path": "/geolocation/defaults",
      "plural": "country_defaults",
      "operations": [
        {
          "path": "/geolocation/defaults",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[country_defaults]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "location_error"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "country",
              "description": "The ISO 3166 2 or 3 character code for the country. Case insensitive. See https://api.flow.io/reference/countries",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "CAN"
            },
            {
              "name": "ip",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "96.242.151.245"
            }
          ]
        },
        {
          "path": "/geolocation/defaults/:country",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "country_defaults"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "country",
              "description": "The ISO 3166 2 or 3 character code for the country. Case insensitive. See https://api.flow.io/reference/countries",
              "location": "Path",
              "type": "string",
              "required": true,
              "example": "CAN"
            }
          ]
        }
      ],
      "description": "Provides country level defaults, incl language and currency. This resource allows you to provide geo info (e.g. IP, address, country) and will geolocate the request, returning the matching country level defaults. For example, if a user lands on your website and you do not have any stored preferences, you can use this API to retrieve the best default preferences based on the location of the user by providing their IP Address.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "geolocation"
          }
        }
      ],
      "type": "country_defaults"
    },
    {
      "path": "/",
      "plural": "timezones",
      "operations": [
        {
          "path": "/geolocation/timezones",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[timezone]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "location_error"
            }
          ],
          "description": "Provides timezone based on address or geolocated IP.",
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "ip",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "96.242.151.245"
            }
          ]
        },
        {
          "path": "/reference/timezones",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[timezone]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns a list of timezones.",
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "q",
              "description": "Free text search on name for a single matching timezone. Case insensitive",
              "location": "Query",
              "type": "string",
              "required": false
            }
          ]
        }
      ],
      "description": "Time zone data is provided by the public IANA time zone database. See http://www.iana.org/time-zones",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "geolocation"
          }
        }
      ],
      "type": "timezone"
    },
    {
      "path": "/reference/carriers",
      "plural": "carriers",
      "operations": [
        {
          "path": "/reference/carriers",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[carrier]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns a list of carriers supported by Flow.",
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "q",
              "description": "Free text search. Case insensitive",
              "location": "Query",
              "type": "string",
              "required": false
            }
          ]
        }
      ],
      "description": "Partner that actually takes a shipment between places (ex: FedEx, DHL, SF Express)",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "reference"
          }
        }
      ],
      "type": "carrier"
    },
    {
      "path": "/reference/carrier/services",
      "plural": "carrier_services",
      "operations": [
        {
          "path": "/reference/carrier/services",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[carrier_service]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns a list of carrier services supported by Flow.",
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "q",
              "description": "Free text search on name. Case insensitive",
              "location": "Query",
              "type": "string",
              "required": false
            }
          ]
        }
      ],
      "description": "Specific service rendered by the carrier (fedex ground saturday, ups overnight weekend, etc)",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "reference"
          }
        }
      ],
      "type": "carrier_service"
    },
    {
      "path": "/reference/countries",
      "plural": "countries",
      "operations": [
        {
          "path": "/reference/countries",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[country]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns a list of countries.",
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "q",
              "description": "Free text search for a single matching country. Can be the 2 or 3 character code or the name of the country. Case insensitive",
              "location": "Query",
              "type": "string",
              "required": false
            }
          ]
        }
      ],
      "description": "ISO 3166 country codes. Note Flow APIs will accept either the 2 or 3 character country code, but internally we normalize data and store as the 3 character, upper case ISO code. See https://api.flow.io/reference/countries",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "reference"
          }
        }
      ],
      "type": "country"
    },
    {
      "path": "/reference/currencies",
      "plural": "currencies",
      "operations": [
        {
          "path": "/reference/currencies",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[currency]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns a list of currencies.",
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "q",
              "description": "Free text search for a single matching currency. Can be the code or the name of the currency. Case insensitive",
              "location": "Query",
              "type": "string",
              "required": false
            }
          ]
        }
      ],
      "description": "ISO 4217 3-character currency code. See https://api.flow.io/reference/currencies",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "reference"
          }
        }
      ],
      "type": "currency"
    },
    {
      "path": "/reference/languages",
      "plural": "languages",
      "operations": [
        {
          "path": "/reference/languages",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[language]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns a list of languages.",
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "q",
              "description": "Free text search for a single matching language. Can be the code or the name of the language. Case insensitive",
              "location": "Query",
              "type": "string",
              "required": false
            }
          ]
        }
      ],
      "description": "ISO 639 2-character language code. See https://api.flow.io/reference/languages",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "reference"
          }
        }
      ],
      "type": "language"
    },
    {
      "path": "/reference/locales",
      "plural": "locales",
      "operations": [
        {
          "path": "/reference/locales",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[locale]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns a list of locales.",
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "q",
              "description": "Free text search on name for a single matching locale. Case insensitive",
              "location": "Query",
              "type": "string",
              "required": false
            }
          ]
        },
        {
          "path": "/reference/locales/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "locale"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns the locale with the specifed id.",
          "attributes": [],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Locales defines standard conventions for presentation of content. See https://api.flow.io/reference/locales",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "reference"
          }
        }
      ],
      "type": "locale"
    },
    {
      "path": "/reference/payment/methods",
      "plural": "payment_methods",
      "operations": [
        {
          "path": "/reference/payment/methods",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[payment_method]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns a list of payment methods supported by Flow.",
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "q",
              "description": "Free text search on name for a single matching payment method. Case insensitive",
              "location": "Query",
              "type": "string",
              "required": false
            }
          ]
        }
      ],
      "description": "Represents a single payment method - e.g VISA or Paypal - and any associated metadata required for processing",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "reference"
          }
        }
      ],
      "type": "payment_method"
    },
    {
      "path": "/reference/provinces",
      "plural": "provinces",
      "operations": [
        {
          "path": "/reference/provinces",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[province]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns a list of provinces.",
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "q",
              "description": "Free text search on name for a single matching region. Case insensitive",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "countries",
              "description": "ISO 3166 3-character country code. See https://api.flow.io/reference/countries",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            }
          ]
        },
        {
          "path": "/reference/provinces/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "province"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns the province with the specifed id.",
          "attributes": [],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "A subdivision/province/state within a country. These conform to the ISO 3166-2 standard for country subdivisions. See https://api.flow.io/reference/provinces",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "reference"
          }
        }
      ],
      "type": "province"
    },
    {
      "path": "/reference/regions",
      "plural": "regions",
      "operations": [
        {
          "path": "/reference/regions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[region]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns a list of regions.",
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "q",
              "description": "Free text search on name for a single matching region. Case insensitive",
              "location": "Query",
              "type": "string",
              "required": false
            }
          ]
        },
        {
          "path": "/reference/regions/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "region"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns the region with the specifed id.",
          "attributes": [],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "A region represents a geographic area of the world. Regions can be countries, continents or other political areas (like the Eurozone). See https://api.flow.io/reference/regions",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "reference"
          }
        }
      ],
      "type": "region"
    },
    {
      "path": "/:organization/b2b/credit/memos",
      "plural": "b2b_credit_memos",
      "operations": [
        {
          "path": "/:organization/b2b/credit/memos",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[b2b_credit_memo]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "created_at"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "id"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "key",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "order_number",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "The b2b credit memo represents a refund transaction between Flow and one of our clients",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "b2b_credit_memo"
    },
    {
      "path": "/:organization/b2b/invoices",
      "plural": "b2b_invoices",
      "operations": [
        {
          "path": "/:organization/b2b/invoices",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[b2b_invoice]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "created_at"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "id"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "key",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "order_number",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/b2b/invoices/exports",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "invoice_export"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Creates an export of the b2b invoices",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "invoice_export_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/b2b/invoices/:key",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "b2b_invoice"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "The b2b invoice represents a transaction between Flow and one of our clients (e.g. Flow purchasing inventory to resell to a consumer).",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "b2b_invoice"
    },
    {
      "path": "/:organization/search/price/books/items",
      "plural": "catalog_price_book_item_documents",
      "operations": [
        {
          "path": "/:organization/search/price/books/items",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[catalog_price_book_item_document]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns price book item documents based on the search criteria",
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "price_book_key",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "q",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            }
          ]
        }
      ],
      "description": "Represents the returned information for searching particular price book items",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "catalog_price_book_item_document"
    },
    {
      "path": "",
      "plural": "checkout_tokens",
      "operations": [
        {
          "path": "/checkout/tokens/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "checkout_token"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/checkout/tokens/:id",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/checkout/tokens",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "checkout_token"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "checkout_token_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Represents a secure token that can be used to redirect to Checkout UI",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "checkout_token"
    },
    {
      "path": "/:organization/consumer/invoices",
      "plural": "consumer_invoices",
      "operations": [
        {
          "path": "/:organization/consumer/invoices",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[consumer_invoice]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "created_at"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "id"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "key",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "order_number",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/consumer/invoices/exports",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "invoice_export"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Creates an export of the consumer/invoices",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "invoice_export_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/consumer/invoices/order/:number",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[consumer_invoice]"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "[consumer_invoice]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "consumer_invoice_form_by_order"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "description": "The order number for which you are requesting consumer invoices.",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/consumer/invoices/:invoice_key/credit/memos",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "credit_memo"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Creates a credit memo against this invoice",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "credit_memo_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "invoice_key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/consumer/invoices/:invoice_key/credit/memos/:key",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "credit_memo"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "credit_memo"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Upserts a credit memo against this invoice",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "credit_memo_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "invoice_key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/consumer/invoices/:invoice_key/credit/memos/:key",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "invoice_key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/consumer/invoices/:key",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "consumer_invoice"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/consumer/invoices/:key",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "consumer_invoice"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "consumer_invoice"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "deprecation": {
            "description": "Use PUT by order number"
          },
          "body": {
            "attributes": [],
            "type": "consumer_invoice_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/consumer/invoices/:key",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "key",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "The consumer invoice represents the details of a set of items from a given order. This may represent either the full order or a partial fulfillment.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "consumer_invoice"
    },
    {
      "path": "/consumer/invoice/document",
      "plural": "consumer_invoice_documents",
      "operations": [
        {
          "path": "/consumer/invoice/document/tokens/:token/type/:type",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "consumer_invoice_document"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "flow_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "token",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "type",
              "location": "Path",
              "type": "consumer_invoice_document_type",
              "required": true
            },
            {
              "name": "language",
              "description": "Optional language for the invoice",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "'en' or 'fr'"
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "consumer_invoice_document"
    },
    {
      "path": "/organizations/:organization_id/country/picker",
      "plural": "country_pickers",
      "operations": [
        {
          "path": "/organizations/:organization_id/country/picker",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "country_picker"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "membership_manager"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization_id",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/organizations/:organization_id/country/picker",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "country_picker"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "membership_manager"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "country_picker_form"
          },
          "parameters": [
            {
              "name": "organization_id",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "The Country Picker manages the configuration of your country picker.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "country_picker"
    },
    {
      "path": "/:organization/credit/memos",
      "plural": "credit_memos",
      "operations": [
        {
          "path": "/:organization/credit/memos",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[credit_memo]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "created_at"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "id"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "key",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "order_number",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "The credit memo represents the details of a refund and the reasons for the issuance of the refund.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "credit_memo"
    },
    {
      "path": "/:organization/customers",
      "plural": "customers",
      "operations": [
        {
          "path": "/:organization/customers",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[customer]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Search customers. Always paginated.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "email"
                  },
                  {
                    "value": "phone"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "number",
              "description": "Find customers by number",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "email",
              "description": "Find customers by email",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "phone",
              "description": "Find customers by phone",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/customers",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "customer"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "customer"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Create a customer.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "customer_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/customers/:number",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "customer"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about a specific customer.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/customers/:number",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "customer"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "customer"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Update or create a customer with the specified number.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "customer_put_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/customers/:number",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Delete the customer with this number.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "A customer represents the actual person placing an order.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "customer"
    },
    {
      "path": "/:organization/customers/:number/addresses/book",
      "plural": "customer_address_book",
      "operations": [
        {
          "path": "/:organization/customers/:number/addresses/book",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "customer_address_book"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Retrieve customer addrress book.",
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "sort",
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "A composed model representing a customer's address book contacts.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "customer_address_book"
    },
    {
      "path": "/:organization/customers/:number/addresses/book/contacts",
      "plural": "customer_address_book_contacts",
      "operations": [
        {
          "path": "/:organization/customers/:number/addresses/book/contacts",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[customer_address_book_contact]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Search contacts. Always paginated.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "email"
                  },
                  {
                    "value": "phone"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "email",
              "description": "Find contacts by email",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "phone",
              "description": "Find contacts by phone",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/customers/:number/addresses/book/contacts",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "customer_address_book_contact"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "customer_address_book_contact"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Create a contact.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "customer_address_book_contact_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/customers/:number/addresses/book/contacts/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "customer_address_book_contact"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about a specific contact.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/customers/:number/addresses/book/contacts/:id",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "customer_address_book_contact"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "customer_address_book_contact"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Update or create a contact with the specified id.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "customer_address_book_contact_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/customers/:number/addresses/book/contacts/:id",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Delete the contact with this id.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Preferences may indicate a contact is preferred for billing, invoicing, and/or shipping.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "customer_address_book_contact"
    },
    {
      "path": "/:organization/customers",
      "plural": "customer_bundles",
      "operations": [
        {
          "path": "/:organization/customers/:number/bundle",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "customer_bundle"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about a specific customer.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "A bundle of all the content needed to render customer data.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "customer_bundle"
    },
    {
      "path": "/:organization/customer/tokens",
      "plural": "customer_tokens",
      "operations": [
        {
          "path": "/:organization/customer/tokens",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[customer_token]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Search tokens.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "token",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "customer_number",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/customer/tokens/latest/:customer_number",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Indicates an existing token was found",
              "attributes": [],
              "type": "customer_token"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Indicates a new token was created",
              "attributes": [],
              "type": "customer_token"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "If there exists at least one token for this customer number, returns the latest. Otherwise creates a new token and returns that",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "customer_number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/customer/tokens/:id",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Delete the token for this id.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/customer/tokens/:token",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "customer_token"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns a token if it exists.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "token",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Represents a mapping between a customer number and a token",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "customer_token"
    },
    {
      "path": "/:organization/search",
      "plural": "documents",
      "operations": [
        {
          "path": "/:organization/search/catalog",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[catalog_item_document]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Returns items based on search criteria",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "name",
                    "default": true
                  },
                  {
                    "value": "categories"
                  },
                  {
                    "value": "experience"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "q",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "gucci category:handbag price:10"
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "name",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/search/harmonization",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[harmonization_document]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Returns harmonization information based on search criteria",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "code"
                  },
                  {
                    "value": "categories"
                  },
                  {
                    "value": "origin"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "q",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "gucci category:handbag price:10"
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "document"
    },
    {
      "path": "/organizations/:organization_id/ecommerce/platform",
      "plural": "ecommerce_platforms",
      "operations": [
        {
          "path": "/organizations/:organization_id/ecommerce/platform",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "ecommerce_platform"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "membership_manager"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization_id",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/organizations/:organization_id/ecommerce/platform",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "ecommerce_platform"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "membership_manager"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "ecommerce_platform_form"
          },
          "parameters": [
            {
              "name": "organization_id",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "The Ecommerce Platform defines what the organization is using for their ecommerce systems.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "ecommerce_platform"
    },
    {
      "path": "/users/emails/verifications",
      "plural": "email_verifications",
      "operations": [
        {
          "path": "/users/emails/verifications/:token",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "email_verification"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [],
          "parameters": [
            {
              "name": "token",
              "description": "The unique token sent to the user to verify their email address",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Represents the successful response of an email verification token. We return the email address in this case to allow the UI to display which email address was verified.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "email_verification"
    },
    {
      "path": "/:organization/exclusion/rules",
      "plural": "exclusion_rules",
      "operations": [
        {
          "path": "/:organization/exclusion/rules",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[exclusion_rule]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Returns a list of exclusions rules.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "sort",
                  "get"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/exclusion/rules",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "exclusion_rule"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "exclusion_rule_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/exclusion/rules/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[exclusion_rule_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "exclusion_rule_id",
              "description": "Filter to exclusion rules with any one of these ids.",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/exclusion/rules/:id",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "exclusion_rule"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Updates the specified exclusion rule.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "exclusion_rule_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/exclusion/rules/:id/deletion",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "exclusion_rule"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Marks the exclusion rule deleted. Once updated, the rule itself will be deleted.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "A global exclusion rule allows the user to select 1 or more items by query and to globally exclude those items from sale in one or more regions.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "exclusion_rule"
    },
    {
      "path": "/:organization/exports",
      "plural": "exports",
      "operations": [
        {
          "path": "/:organization/exports",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[export]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Search exports. Always paginated.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  },
                  {
                    "value": "discriminator"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "created_by_user_id",
              "maximum": 100,
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "discriminator",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/exports",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "export"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Create an export.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "export_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/exports/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[export_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Provides visibility into recent changes of each export, including deletion.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "type"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "export_id",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/exports/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "export"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Get a single export.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/exports/:id",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "export"
    },
    {
      "path": "/permission",
      "plural": "flow_roles",
      "operations": [
        {
          "path": "/permission/organization/:organization/roles",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[flow_role]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "List roles in use by this organization.",
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "All roles available to attach to a user.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "flow_role"
    },
    {
      "path": "/:organization/fraud/email/rules",
      "plural": "fraud_email_rules",
      "operations": [
        {
          "path": "/:organization/fraud/email/rules",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[fraud_email_rule]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Retrieve fraud review email rules. Always paginated.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "decision"
                  },
                  {
                    "value": "email"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "sort_parameter_default",
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "decision",
              "location": "Query",
              "type": "fraud_email_rule_decision",
              "required": false
            },
            {
              "name": "email",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "decision",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/fraud/email/rules",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "fraud_email_rule"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "fraud_email_rule"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Add an email decision rule.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "fraud_email_rule_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/fraud/email/rules/:id",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Remove an email decision rule.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Rule to apply to enable white-listing and black-listing for an email address.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "fraud_email_rule"
    },
    {
      "path": "/:organization/ftp/files",
      "plural": "ftp_files",
      "operations": [
        {
          "path": "/:organization/ftp/files",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[ftp_file]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            },
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "name",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "name",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/ftp/files",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "ftp_file"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [],
          "body": {
            "attributes": [],
            "type": "ftp_file_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/ftp/files/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "ftp_file"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/ftp/files/:id",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "The FTP File represents a file uploaded to the FTP Server",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "ftp_file"
    },
    {
      "path": "/:organization/ftp/folders",
      "plural": "ftp_folders",
      "operations": [
        {
          "path": "/:organization/ftp/folders",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[ftp_folder]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            },
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "path"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "path",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "/from-flow/billing/"
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/ftp/folders",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "ftp_folder"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [],
          "body": {
            "attributes": [],
            "type": "ftp_folder_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/ftp/folders/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "ftp_folder"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/ftp/folders/:id",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "The FTP Folder represents a single folder associated with an organization for which we create an external FTP Directory",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "ftp_folder"
    },
    {
      "path": "/:organization/ftp/settings",
      "plural": "ftp_organization_settings",
      "operations": [
        {
          "path": "/:organization/ftp/settings",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "ftp_organization_settings"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "id",
                  "limit",
                  "offset",
                  "sort",
                  "versions"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/ftp/settings",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "ftp_organization_settings"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [],
          "body": {
            "attributes": [],
            "type": "ftp_organization_settings_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/ftp/settings",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "The FTP Organization Settings allows you to enable an FTP Drop Point for an organization, creating the standard set of FTP Folders, credentials, and associated webhooks.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "ftp_organization_settings"
    },
    {
      "path": "/:organization/orders/:number/fulfillments",
      "plural": "fulfillments",
      "operations": [
        {
          "path": "/:organization/orders/:number/fulfillments",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[fulfillment]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/orders/:number/fulfillments/cancellations",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Fulfillment was modified as a result of the request",
              "attributes": [],
              "type": "fulfillment"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "fulfillment_cancellation_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/orders/:number/fulfillments/complete/cancellations",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Request was valid but resulted in no update to the order (order already cancelled or already shipped)",
              "attributes": [],
              "type": "fulfillment"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Fulfillment was modified as a result of the request",
              "attributes": [],
              "type": "fulfillment"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_operations",
                  "organization_fulfillment"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "fulfillment_complete_cancellation_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Used to track and manage the fulfillment of an order.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "fulfillment"
    },
    {
      "path": "/_internal_",
      "plural": "healthchecks",
      "operations": [
        {
          "path": "/_internal_/healthcheck",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "healthcheck"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [],
          "parameters": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "healthcheck"
    },
    {
      "path": "/:organization/imports",
      "plural": "imports",
      "operations": [
        {
          "path": "/:organization/imports",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[import]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Search imports. Always paginated.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  },
                  {
                    "value": "type"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "created_by_user_id",
              "maximum": 100,
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "type",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/imports",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "import"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Create an import.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "import_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/imports/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[import_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Provides visibility into recent changes of each import, including deletion.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "type"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "import_id",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/imports/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "import"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Get a single import.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/imports/:id",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "import"
    },
    {
      "path": "/:organization/import/templates",
      "plural": "import_templates",
      "operations": [
        {
          "path": "/:organization/import/templates",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[import_template]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/import/templates",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "import_template_example"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "import_template_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "import_template"
    },
    {
      "path": "/invitations",
      "plural": "invitations",
      "operations": [
        {
          "path": "/invitations",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[invitation]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Search invitations. Always paginated.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "organization"
                  },
                  {
                    "value": "email"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "membership_manager"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "organization",
              "description": "Find invitations for this organization",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "email",
              "description": "Find invitations for this email",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "token",
              "description": "Find invitation for this token",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "organization"
            }
          ]
        },
        {
          "path": "/invitations",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "invitation"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Create a new invitation.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "invitation_form"
          },
          "parameters": []
        },
        {
          "path": "/invitations/tokens/:token",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "invitation"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Lookup an invitation by its token.",
          "attributes": [],
          "parameters": [
            {
              "name": "token",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "organization"
            }
          ]
        },
        {
          "path": "/invitations/tokens/:token",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Indicates user was previously a member of the organization",
              "attributes": [],
              "type": "membership"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "The new membership record for this user/organization",
              "attributes": [],
              "type": "membership"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "invitation_error"
            }
          ],
          "description": "Accepts the invitation w/ the specified token and the authenticated user. Creating a membership record for this user within this organization. Invitations are one time use only - you will get a validation error if the invitation has previously been accepted or if the user's email addresses do not match the email on the invite.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "token",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/invitations/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[invitation_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "invitation"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "membership_manager"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "invitation",
              "description": "Filter to versions for invitations with any one of these ids.",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/invitations/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "invitation"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about a specific invitation.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "membership_manager"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "organization"
            }
          ]
        },
        {
          "path": "/invitations/:id",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "An invitation via email to a user to join this organization. The user will then walk through a user login/registration process and will immediately become a member of the organization.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "invitation"
    },
    {
      "path": "/:organization/shopify/price/rules/discount/:code",
      "plural": "price_rules",
      "operations": [
        {
          "path": "/:organization/shopify/price/rules/discount/:code",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "io.flow.shopify.external.v0.models.price_rule"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "code",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "io.flow.shopify.external.v0.models.price_rule"
    },
    {
      "path": "/:organization/search/item/query/suggestions",
      "plural": "item_query_suggestions",
      "operations": [
        {
          "path": "/:organization/search/item/query/suggestions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[item_query_suggestion]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Returns search suggestions for catalog items",
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions",
                  "sort_parameter_default"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "q",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "gucci category:handbag price:10"
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "item_query_suggestion"
    },
    {
      "path": "/carrier/:carrier/data/:organization/:order_number",
      "plural": "links",
      "operations": [
        {
          "path": "/carrier/:carrier/data/:organization/:order_number",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 302
                }
              },
              "attributes": [],
              "type": "string"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "carrier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "order_number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "link"
    },
    {
      "path": "/memberships",
      "plural": "memberships",
      "operations": [
        {
          "path": "/memberships",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[membership]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Search memberships. Always paginated.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "user"
                  },
                  {
                    "value": "organization"
                  },
                  {
                    "value": "role"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "membership_manager"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "user",
              "description": "Find memberships for this user id",
              "maximum": 100,
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "organization",
              "description": "Find memberships for this organization id",
              "maximum": 100,
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "role",
              "description": "Find memberships with ANY of these roles.",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 2,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "organization, user"
            }
          ]
        },
        {
          "path": "/memberships",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "membership"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Create a new membership.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "membership_form"
          },
          "parameters": []
        },
        {
          "path": "/memberships/versions",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[membership_version]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "membership"
                  },
                  {
                    "value": "user"
                  },
                  {
                    "value": "organization"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "membership_manager"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "membership",
              "description": "Filter membership changes with any one of these ids.",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "user",
              "description": "Filter membership changes for this user id",
              "maximum": 100,
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "organization",
              "description": "Filter membership changes for this organization id",
              "maximum": 100,
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "journal_timestamp",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/memberships/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "membership"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about a specific membership.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "membership_manager"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "organization"
            }
          ]
        },
        {
          "path": "/memberships/:id",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "membership"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Change the role for a specific membership record. If the user already has the specified role within the organization, does nothing.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "membership_put_form"
          },
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/memberships/:id",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Represents the users that are part of this organization. Primary purpose is to manage which users have access to the organization's data and to provide a simple user interface to assign roles and permissions to each member of the organization",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "membership"
    },
    {
      "path": "/balance",
      "plural": "merchant_gift_card_balances",
      "operations": [
        {
          "path": "/balance",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "merchant_gift_card_balance"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "merchant_gift_card_error"
            }
          ],
          "description": "Check the remaining balance on a gift card",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "merchant_gift_card_balance_form"
          },
          "parameters": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "merchant_gift_card_balance"
    },
    {
      "path": "/redeem",
      "plural": "merchant_gift_card_redemptions",
      "operations": [
        {
          "path": "/redeem",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "merchant_gift_card_balance"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "merchant_gift_card_error"
            }
          ],
          "description": "Redeems a gift card",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "merchant_gift_card_redemption_form"
          },
          "parameters": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "merchant_gift_card_redemption"
    },
    {
      "path": "/reverse",
      "plural": "merchant_gift_card_reversals",
      "operations": [
        {
          "path": "/reverse",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "merchant_gift_card_balance"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "merchant_gift_card_error"
            }
          ],
          "description": "Check the remaining balance on a gift card",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "merchant_gift_card_reversal_form"
          },
          "parameters": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "merchant_gift_card_reversal"
    },
    {
      "path": "/organization-authorizations",
      "plural": "organization_authorizations",
      "operations": [
        {
          "path": "/organization-authorizations",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "organization_authorization"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "For the authorized user, if the specified organization exists, and the user is an active member of this organization, returns the authorization data used throughout APIs at Flow, including the user's role in that organization and the organization environment. Otherwise, returns 401 - this indicates either the org does not exist or the user does not have access to the org.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            }
          ],
          "deprecation": {
            "description": "Use GET /:organization/permission/checks"
          },
          "body": {
            "attributes": [],
            "type": "organization_authorization_form"
          },
          "parameters": []
        },
        {
          "path": "/organization-authorizations/:organization",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "organization_authorization"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "For the authorized user and specific organization, if the user is an active member of this organization, returns the authorization data used throughout APIs at Flow, including the user's role in that organization and the organization environment.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "membership_manager"
                ]
              }
            }
          ],
          "deprecation": {
            "description": "Use GET /:organization/permission/checks"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Defines the data used for broad authorization of user access to org level data",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "organization_authorization"
    },
    {
      "path": "/:organization_id/default/configurations",
      "plural": "organization_default_configurations",
      "operations": [
        {
          "path": "/:organization_id/default/configurations",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "organization_default_configurations"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization_id",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization_id/default/configurations/checkout",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "organization_default_configurations"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Update the default checkout configuration id for this organization",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "organization_default_configurations_form"
          },
          "parameters": [
            {
              "name": "organization_id",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "organization_default_configurations"
    },
    {
      "path": "/:organization/tokens",
      "plural": "organization_tokens",
      "operations": [
        {
          "path": "/:organization/tokens",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[organization_token]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Get all tokens for the specified organization",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "description"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "mine",
              "description": "Filter to tokens created by the requesting user",
              "location": "Query",
              "type": "boolean",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/tokens",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "organization_token"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Create a new organization",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "organization_token_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "All of the metadata associated with a given token.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "organization_token"
    },
    {
      "path": "/partners/:partner/tokens",
      "plural": "partner_tokens",
      "operations": [
        {
          "path": "/partners/:partner/tokens",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[partner_token]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Get all tokens for the specified partner",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "description"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "partner",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "mine",
              "description": "Filter to tokens created by the requesting user",
              "location": "Query",
              "type": "boolean",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/partners/:partner/tokens",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "partner_token"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Create a new partner",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "partner_token_form"
          },
          "parameters": [
            {
              "name": "partner",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "All of the metadata associated with a given token.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "partner_token"
    },
    {
      "path": "/users/passwords",
      "plural": "password_reset_forms",
      "operations": [
        {
          "path": "/users/passwords",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "expandable_user"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [],
          "body": {
            "attributes": [],
            "type": "password_reset_form"
          },
          "parameters": [
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "user"
            }
          ]
        },
        {
          "path": "/users/passwords/resets",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [],
          "body": {
            "attributes": [],
            "type": "password_reset_request_form"
          },
          "parameters": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "password_reset_form"
    },
    {
      "path": "",
      "plural": "permission_checks",
      "operations": [
        {
          "path": "/:organization/permission/checks/all",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "permission_check"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns permissions for the specified organization for the current request. Used by integrators to test headers.",
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "permitted_method",
              "description": "If provided, only routes matching this method will be returned.",
              "location": "Query",
              "type": "permitted_http_method",
              "required": false
            },
            {
              "name": "path",
              "description": "If provided, only routes matching theis regular expression will be retunerd.",
              "location": "Query",
              "type": "string",
              "required": false
            }
          ]
        }
      ],
      "description": "Used to test an integration's permissions, including identifying the authentication technique that will be used for similar requests.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "permission_check"
    },
    {
      "path": "/users/scheduled/exports",
      "plural": "scheduled_exports",
      "operations": [
        {
          "path": "/users/scheduled/exports",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[scheduled_export]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Search scheduled exports. Always paginated.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/users/scheduled/exports",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "scheduled_export"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Create a scheduled export.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "scheduled_export_form"
          },
          "parameters": []
        },
        {
          "path": "/users/scheduled/exports/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "scheduled_export"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Get a single scheduled export.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/users/scheduled/exports/:id",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "scheduled_export"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Update a scheduled export.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "scheduled_export_form"
          },
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/users/scheduled/exports/:id",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "scheduled_export"
    },
    {
      "path": "/sessions",
      "plural": "sessions",
      "operations": [
        {
          "path": "/sessions/shopify/organizations/:organization",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "organization_session"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "description": "401 not a required response since operation is anonymously authenticated.",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "session_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/sessions/shopify/:session",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "session"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "description": "401 not a required response since operation is anonymously authenticated.",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "session",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/sessions/shopify/:session",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "session"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "description": "401 not a required response since operation is anonymously authenticated.",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "session_put_form"
          },
          "parameters": [
            {
              "name": "session",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/sessions/shopify/:session",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [],
          "parameters": [
            {
              "name": "session",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/sessions/shopify/:session/clear",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "session"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Clears the session geo parameters",
          "attributes": [
            {
              "name": "linter",
              "description": "401 not a required response since operation is anonymously authenticated.",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "session",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/sessions/shopify/:session/organizations/:organization",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "organization_session"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "description": "401 not a required response since operation is anonymously authenticated.",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "session_put_form"
          },
          "parameters": [
            {
              "name": "session",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/sessions/shopify/:session/reset",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "session"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Resets the session based on the provided geo parameters.",
          "attributes": [
            {
              "name": "linter",
              "description": "401 not a required response since operation is anonymously authenticated.",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "session_put_form"
          },
          "parameters": [
            {
              "name": "session",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/sessions/organizations/:organization",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "organization_session"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "description": "401 not a required response since operation is anonymously authenticated.",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "session_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/sessions/:session",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "session"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "description": "401 not a required response since operation is anonymously authenticated.",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "session",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/sessions/:session",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "session"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "description": "401 not a required response since operation is anonymously authenticated.",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "session_put_form"
          },
          "parameters": [
            {
              "name": "session",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/sessions/:session",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [],
          "parameters": [
            {
              "name": "session",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/sessions/:session/clear",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "session"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Clears the session geo parameters",
          "attributes": [
            {
              "name": "linter",
              "description": "401 not a required response since operation is anonymously authenticated.",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "session",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/sessions/:session/organizations/:organization",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "organization_session"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "description": "401 not a required response since operation is anonymously authenticated.",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "session_put_form"
          },
          "parameters": [
            {
              "name": "session",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/sessions/:session/reset",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "session"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Resets the session based on the provided geo parameters.",
          "attributes": [
            {
              "name": "linter",
              "description": "401 not a required response since operation is anonymously authenticated.",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "session_put_form"
          },
          "parameters": [
            {
              "name": "session",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "session"
    },
    {
      "path": "/authorizations/sessions",
      "plural": "session_authorizations",
      "operations": [
        {
          "path": "/authorizations/sessions",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "session_authorization"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [],
          "body": {
            "attributes": [],
            "type": "session_authorization_form"
          },
          "parameters": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "session_authorization"
    },
    {
      "path": "/shopify/carts",
      "plural": "shopify_carts",
      "operations": [
        {
          "path": "/shopify/carts/order/:number",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "shopify_cart"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Retrieve representation of a Shopify cart for the given order number.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "number",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/shopify/carts/:id.html",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "string"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Retrieve representation of a Shopify cart given the unique cart id.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/shopify/carts/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "shopify_cart"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Retrieve representation of a Shopify cart given the unique cart id.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/shopify/carts/:id/add",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "shopify_cart"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "shopify_cart"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Add an item to a Shopify cart given the unique cart id.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "shopify_cart_add_form"
          },
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/shopify/carts/:id/attributes",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "shopify_cart"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Update the attribute information for the cart.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "shopify_order_attributes_form"
          },
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/shopify/carts/:id/change",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "shopify_cart"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Change/Update an item in a Shopify cart given the unique cart id.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "shopify_cart_change_form"
          },
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/shopify/carts/:id/clear",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "shopify_cart"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Remove all cart items given the unique cart id .",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/shopify/carts/:id/geo",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "shopify_cart"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Update the geo information for the cart.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "geo_form"
          },
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/shopify/carts/:id/orders",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "order"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Create an order from a Flow cart.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "session"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "experience"
            }
          ]
        }
      ],
      "description": "Cart actions are based off the Shopify Ajax API, documentation at https://help.shopify.com/themes/development/getting-started/using-ajax-api",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "shopify_cart"
    },
    {
      "path": "/:organization/experiences/:experience_key/shopify/cart",
      "plural": "shopify_cart_conversions",
      "operations": [
        {
          "path": "/:organization/experiences/:experience_key/shopify/cart/conversions",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "shopify_cart_conversion"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Creates a shopify cart conversion from a shopify cart",
          "attributes": [],
          "body": {
            "attributes": [],
            "type": "io.flow.shopify.external.v0.models.shopify_cart"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "experience_key",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "expand",
              "maximum": 1,
              "location": "Query",
              "type": "[string]",
              "minimum": 0,
              "required": false,
              "example": "experience"
            }
          ]
        }
      ],
      "description": "Shopify cart conversions create representations of cart data for Shopify based on a given experience. Cart actions are based off the Shopify Ajax API, documentation at https://help.shopify.com/themes/development/getting-started/using-ajax-api",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "shopify_cart_conversion"
    },
    {
      "path": "/:organization/shopify/localization/settings",
      "plural": "shopify_localization_settings",
      "operations": [
        {
          "path": "/:organization/shopify/localization/settings",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[shopify_localization_setting]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "-created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/shopify/localization/settings",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "shopify_localization_setting"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "shopify_localization_setting"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Add a localization setting.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "shopify_localization_setting_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/shopify/localization/settings/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "shopify_localization_setting"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/shopify/localization/settings/:id",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "shopify_localization_setting"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Update a localization setting.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "shopify_localization_setting_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/shopify/localization/settings/:id",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "shopify_localization_setting"
    },
    {
      "path": "/:organization/shopify/locations/mappings",
      "plural": "shopify_location_flow_center_mappings",
      "operations": [
        {
          "path": "/:organization/shopify/locations/mappings",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[shopify_location_flow_center_mapping]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "-created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/shopify/locations/mappings",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "shopify_location_flow_center_mapping"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "shopify_location_flow_center_mapping"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Add a Shopify location/Flow Center mapping.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "shopify_location_flow_center_mapping_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/shopify/locations/mappings/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "shopify_location_flow_center_mapping"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/shopify/locations/mappings/:id",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "shopify_location_flow_center_mapping"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Update a Shopify location/Flow Center mapping.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "shopify_location_flow_center_mapping_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/shopify/locations/mappings/:id",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "shopify_location_flow_center_mapping"
    },
    {
      "path": "/:organization/shopify/private/apps",
      "plural": "shopify_private_apps",
      "operations": [
        {
          "path": "/:organization/shopify/private/apps",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[shopify_private_app]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "-created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/shopify/private/apps",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "shopify_private_app"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "shopify_private_app"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "shopify_private_app_form"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/shopify/private/apps/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "shopify_private_app"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/shopify/private/apps/:id",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "description": "Shopify private app information.",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "shopify_private_app"
    },
    {
      "path": "/:organization/shopify/sync/status",
      "plural": "shopify_sync_statuses",
      "operations": [
        {
          "path": "/:organization/shopify/sync/status",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "shopify_sync_status"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "id",
                  "limit",
                  "offset",
                  "sort",
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "default": "60",
              "name": "interval_seconds",
              "location": "Query",
              "type": "long",
              "required": true
            },
            {
              "default": "localized_variants",
              "name": "sync_check",
              "location": "Query",
              "type": "shopify_sync_check",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "shopify_sync_status"
    },
    {
      "path": "/:organization/suggestion",
      "plural": "suggestions",
      "operations": [
        {
          "path": "/:organization/suggestion/catalog",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[suggestion]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Returns search suggestions for catalog items",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "count"
                  },
                  {
                    "value": "label"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions",
                  "sort_parameter_default"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations",
                  "organization_fulfillment",
                  "organization_marketing"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "q",
              "location": "Query",
              "type": "string",
              "required": false,
              "example": "gucci category:handbag price:10"
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-count",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "suggestion",
      "deprecation": {
        "description": "Use /:organization/search/item/query/suggestions"
      }
    },
    {
      "path": "/:organization/tax/settings",
      "plural": "tax_settings",
      "operations": [
        {
          "path": "/:organization/tax/settings",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "tax_setting"
            },
            {
              "code": {
                "integer": {
                  "value": 400
                }
              },
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns the tax settings for the organization.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/tax/settings",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "tax_setting"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "tax_setting"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "tax_setting"
          },
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/:organization/tax/settings",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "tax_setting"
    },
    {
      "path": "/tokens",
      "plural": "tokens",
      "operations": [
        {
          "path": "/tokens",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[token]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            }
          ],
          "description": "Get all tokens that you are authorized to view. Note that the cleartext token value is never sent. To view the API token itself, see the resource path /tokens/:id/cleartext",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "description"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "organization",
              "description": "Filter to tokens created for this organization",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "partner",
              "description": "Filter to tokens created for this partner",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "mine",
              "description": "Filter to tokens created by the requesting user",
              "location": "Query",
              "type": "boolean",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/tokens/authentications",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "token_reference"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Preferred method to validate a token, obtaining specific information if the token is valid (or a 404 if the token does not exist). We use an HTTP POST with a form body to ensure that the token itself is not logged in the request logs.",
          "attributes": [],
          "body": {
            "attributes": [],
            "type": "token_authentication_form"
          },
          "parameters": []
        },
        {
          "path": "/tokens/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "token"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Get metadata for the token with this ID",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/tokens/:id",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/tokens/:id/cleartext",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "cleartext"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Retrieves the token with the actual string token in cleartext",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "token"
    },
    {
      "path": "/token-validations",
      "plural": "token_validations",
      "operations": [
        {
          "path": "/token-validations",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "token_validation"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "membership_manager"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "token_validation_form"
          },
          "parameters": []
        }
      ],
      "description": "Validations test whether or not a given API token is valid",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "token_validation"
    },
    {
      "path": "/:organization/uploads",
      "plural": "uploads",
      "operations": [
        {
          "path": "/:organization/uploads/:name",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "upload"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "organization",
              "description": "Refers to your organization's account identifier",
              "location": "Path",
              "type": "string",
              "required": true
            },
            {
              "name": "name",
              "description": "The name of the file you are uploading. Note that the name will be part of the generated URL - but the URL itself will contain a unique randomized string.",
              "location": "Path",
              "type": "string",
              "required": true,
              "example": "import.csv"
            }
          ]
        }
      ],
      "description": "Provides the ability to upload a file to a URL (an expiring s3 url, usually valid for 1 week)",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "upload"
    },
    {
      "path": "/users",
      "plural": "users",
      "operations": [
        {
          "path": "/users",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "[user]"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Search users. Must specify an id or email.",
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "email"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            },
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100,
              "location": "Query",
              "type": "[string]",
              "required": false
            },
            {
              "name": "email",
              "description": "Find users with this email address. Case insensitive. Exact match",
              "location": "Query",
              "type": "string",
              "required": false
            },
            {
              "name": "status",
              "description": "Find users with this status",
              "location": "Query",
              "type": "user_status",
              "required": false
            },
            {
              "default": "25",
              "name": "limit",
              "description": "The maximum number of results to return",
              "maximum": 100,
              "location": "Query",
              "type": "long",
              "minimum": 1,
              "required": true
            },
            {
              "default": "0",
              "name": "offset",
              "description": "The number of results to skip before returning results",
              "location": "Query",
              "type": "long",
              "minimum": 0,
              "required": true
            },
            {
              "default": "-created_at",
              "name": "sort",
              "location": "Query",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/users",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "description": "Operation succeeded and the resource was created",
              "attributes": [],
              "type": "user"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Create a new user. Note that new users will be created with a status of pending and will not be able to authenticate until approved by a member of the Flow team.",
          "attributes": [],
          "body": {
            "attributes": [],
            "type": "user_form"
          },
          "parameters": []
        },
        {
          "path": "/users/authenticate",
          "method": "POST",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "user"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Authenticates a user by email / password. Note only users that have a status of active will be authorized.",
          "attributes": [],
          "body": {
            "attributes": [],
            "type": "authentication_form"
          },
          "parameters": []
        },
        {
          "path": "/users/:id",
          "method": "GET",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "user"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            }
          ],
          "description": "Returns information about a specific user.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin",
                  "organization_merchant",
                  "organization_operations"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/users/:id",
          "method": "PUT",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "description": "Successful response",
              "attributes": [],
              "type": "user"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Update a user.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "user_put_form"
          },
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/users/:id/passwords",
          "method": "PATCH",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Update the password for a user.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "body": {
            "attributes": [],
            "type": "password_change_form"
          },
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        },
        {
          "path": "/users/:id/passwords",
          "method": "DELETE",
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "description": "Operation succeeded. No content is returned",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "description": "Authorization failed",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 403
                }
              },
              "attributes": [],
              "type": "permission_error"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "description": "Resource was not found",
              "attributes": [],
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation.",
              "attributes": [],
              "type": "generic_error"
            }
          ],
          "description": "Deletes a password for the given user.",
          "attributes": [
            {
              "name": "auth",
              "value": {
                "techniques": [
                  "user",
                  "token"
                ],
                "roles": [
                  "organization_admin"
                ]
              }
            }
          ],
          "parameters": [
            {
              "name": "id",
              "description": "Filter by one or more IDs of this resource",
              "location": "Path",
              "type": "string",
              "required": true
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "type": "user"
    }
  ],
  "annotations": [
    {
      "name": "personal_data",
      "description": "Identifies a field that contains Personal Data, as defined by GDPR. By default, any field marked with this annotation will be kept for 1 year and will be purgeable upon request provided there are no incomplete business activities associated with it."
    },
    {
      "name": "consumer",
      "description": "Identifies a field that contains data about a consumer [as opposed to an employee of Flow, an organization or a partner]."
    }
  ],
  "description": "The Flow Commerce REST API provides full access to the global ecommerce platform.",
  "version": "0.8.74",
  "enums": [
    {
      "plural": "adjustment_reason_keys",
      "values": [
        {
          "name": "duty_deminimis",
          "description": "If the duty de minimis value has not been met, an adjustment may be made to offset any previously calculated duty.",
          "attributes": []
        },
        {
          "name": "vat_deminimis",
          "description": "If the VAT de minimis value has not been met, an adjustment may be made to offset any previously calculated VAT.",
          "attributes": []
        }
      ],
      "name": "adjustment_reason_key",
      "description": "The key of each possible adjustment is defined here.",
      "attributes": []
    },
    {
      "plural": "aggregates",
      "values": [
        {
          "name": "maximum",
          "attributes": []
        },
        {
          "name": "minimum",
          "attributes": []
        }
      ],
      "name": "aggregate",
      "description": "The aggregate function to be applied",
      "attributes": []
    },
    {
      "plural": "attribute_data_types",
      "values": [
        {
          "name": "boolean",
          "description": "Boolean true/false data type",
          "attributes": []
        },
        {
          "name": "decimal",
          "description": "Decimal datatype without size or precision restrictions. Commonly used for currency values.",
          "attributes": []
        },
        {
          "name": "string",
          "description": "Unvalidated string of characters.",
          "attributes": []
        },
        {
          "name": "json_array",
          "description": "An example [\"Cotton\", \"Wool\"]",
          "attributes": []
        }
      ],
      "name": "attribute_data_type",
      "description": "Used to tag attributes with a data type so they are properly validated.",
      "attributes": []
    },
    {
      "plural": "attribute_intents",
      "values": [
        {
          "name": "brand",
          "description": "A brand name of the item (for retailers that sell multiple brands)",
          "attributes": []
        },
        {
          "name": "color",
          "description": "The color of the item",
          "attributes": []
        },
        {
          "name": "countries_of_origin",
          "description": "A space separated list of the countries of origin for this item",
          "attributes": []
        },
        {
          "name": "product_id",
          "description": "An identifier used to group items that are variations of the same product, such as different sizes or colors of the same shirt",
          "attributes": []
        },
        {
          "name": "fulfillment_method",
          "description": "Identifies whether the item is a physical or digital good",
          "attributes": []
        },
        {
          "name": "hazardous",
          "description": "Identifies whether this item may contain hazardous materials",
          "attributes": []
        },
        {
          "name": "price",
          "description": "A price for the item in the organization's base currency (will be localized based on each Experience's pricing policy)",
          "attributes": []
        },
        {
          "name": "size",
          "description": "A size label of the item",
          "attributes": []
        },
        {
          "name": "sku",
          "description": "An SKU for the item",
          "attributes": []
        },
        {
          "name": "taxability",
          "description": "Identifies whether taxes are applicable to an item",
          "attributes": []
        },
        {
          "name": "consumer_url",
          "description": "A URL of the product detail page of the item",
          "attributes": []
        },
        {
          "name": "gtin",
          "description": "The Global Trade Item Number of this item.",
          "attributes": []
        },
        {
          "name": "mpn",
          "description": "The Manufacturer Part Number of this item.",
          "attributes": []
        },
        {
          "name": "excluded_regions",
          "description": "A space separated list of the regions (as defined in https://api.flow.io/reference/regions) where the item must be excluded.",
          "attributes": []
        },
        {
          "name": "facet",
          "description": "Identifies a facet.",
          "attributes": []
        }
      ],
      "name": "attribute_intent",
      "description": "Used to tag attributes as having a specific meaning that can affect processing. For example, if you have an attribute called \"brandname\", and assign it the \"brand\" intent, the value of the \"brandname\" attribute will be used where a brand name is needed. Note that an intent can be assigned to any amount of attributes of an item.",
      "attributes": []
    },
    {
      "plural": "authentication_techniques",
      "values": [
        {
          "name": "anonymous",
          "description": "No authentication necessary.",
          "attributes": []
        },
        {
          "name": "session",
          "description": "A browser has been assigned an identifier by Flow to track their use of our service for an organization.",
          "attributes": []
        },
        {
          "name": "token",
          "description": "A token. Tokens carry the same permissions as the user who originally created them.",
          "attributes": []
        },
        {
          "name": "partner_token",
          "description": "A partner token. Partner Tokens can only access anonymous endpoints and the endpoints of the partner api.",
          "attributes": []
        },
        {
          "name": "user",
          "description": "A user logs into Flow.",
          "attributes": []
        }
      ],
      "name": "authentication_technique",
      "description": "Various techniques a client request will use to authenticate with Flow.",
      "attributes": []
    },
    {
      "plural": "authorization_decline_codes",
      "values": [
        {
          "name": "expired",
          "description": "Payment method has expired",
          "attributes": []
        },
        {
          "name": "invalid_name",
          "description": "Invalid card holder name",
          "attributes": []
        },
        {
          "name": "invalid_number",
          "description": "Invalid payment number",
          "attributes": []
        },
        {
          "name": "invalid_expiration",
          "description": "Invalid expiration date",
          "attributes": []
        },
        {
          "name": "invalid_address",
          "description": "Invalid billing address",
          "attributes": []
        },
        {
          "name": "invalid_token_type",
          "description": "Cannot create a permanent card via an unauthorized request",
          "attributes": []
        },
        {
          "name": "invalid_token",
          "description": "The provided card token is invalid or it does not exist.",
          "attributes": []
        },
        {
          "name": "no_account",
          "description": "The provided payment method is not known by the issuing bank (the account does not exist)",
          "attributes": []
        },
        {
          "name": "avs",
          "description": "Declined due to avs mismatch)",
          "attributes": []
        },
        {
          "name": "cvv",
          "description": "Declined due to cvv mismatch)",
          "attributes": []
        },
        {
          "name": "fraud",
          "description": "Declined due to suspected fraud",
          "attributes": []
        },
        {
          "name": "duplicate",
          "description": "Declined due to suspected duplicate transaction",
          "attributes": []
        },
        {
          "name": "not_supported",
          "description": "Declined as payment method is not supported",
          "attributes": []
        },
        {
          "name": "unknown",
          "description": "Declined due to another reason (details not known)",
          "attributes": []
        }
      ],
      "name": "authorization_decline_code",
      "description": "Contains details related to the reason for which an authorization was declined.",
      "attributes": []
    },
    {
      "plural": "authorization_options",
      "values": [
        {
          "name": "store_card",
          "description": "If set, and the authorization is created using a one time nonce, we automatically tokenize and store the card. In these cases you will want to store the new card token in the authorization response (card object)",
          "attributes": []
        }
      ],
      "name": "authorization_option",
      "description": "Specifies optional behaviors that can be applied during an authorization",
      "attributes": []
    },
    {
      "plural": "authorization_result_action_types",
      "values": [
        {
          "name": "native",
          "description": "Indicates an authorization action should be presented to the user natively in the browser.",
          "attributes": []
        },
        {
          "name": "redirect",
          "description": "Indicates that the user should be redirected to the provided URL.",
          "attributes": []
        },
        {
          "name": "wait",
          "description": "Indicates that more time is needed before the authorization result is known. In the case of 3D Secure, this means the authorization status should be polled until it is no longer pending.",
          "attributes": []
        }
      ],
      "name": "authorization_result_action_type",
      "description": "Specifies an action necessary to continue processing the authorization, such as redirecting to a payment issuer to complete user verification.",
      "attributes": []
    },
    {
      "plural": "authorization_statuses",
      "values": [
        {
          "name": "pending",
          "description": "If an immediate response is not available, the state will be 'pending'. For example, online payment methods like AliPay or PayPal will have a status of 'pending' until the user completes the payment. Pending authorizations expire if the user does not complete the payment in a timely fashion.",
          "attributes": []
        },
        {
          "name": "expired",
          "description": "Authorization has expired.",
          "attributes": []
        },
        {
          "name": "authorized",
          "description": "Authorization was successful",
          "attributes": []
        },
        {
          "name": "review",
          "description": "If an immediate response is not available, the state will be 'review' - this usually indicates fraud review requires additional time / verification (or a potential network issue with the issuing bank)",
          "attributes": []
        },
        {
          "name": "declined",
          "description": "Indicates the authorization has been declined by the issuing bank. See the authorization decline code for more details as to the reason for decline.",
          "attributes": []
        },
        {
          "name": "reversed",
          "description": "Indicates the authorization has been fully reversed. You can fully reverse an authorization up until the moment you capture funds; once you have captured funds you must create refunds.",
          "attributes": []
        }
      ],
      "name": "authorization_status",
      "attributes": []
    },
    {
      "plural": "availability_statuses",
      "values": [
        {
          "name": "enabled",
          "attributes": []
        },
        {
          "name": "disabled",
          "attributes": []
        }
      ],
      "name": "availability_status",
      "attributes": []
    },
    {
      "plural": "available_filter_formats",
      "values": [
        {
          "name": "boolean",
          "attributes": []
        },
        {
          "name": "date",
          "description": "Expects date in format YYYY-MM-DD",
          "attributes": []
        },
        {
          "name": "money",
          "attributes": []
        },
        {
          "name": "decimal",
          "attributes": []
        },
        {
          "name": "string",
          "attributes": []
        },
        {
          "name": "unit_of_length",
          "attributes": []
        },
        {
          "name": "unit_of_mass",
          "attributes": []
        }
      ],
      "name": "available_filter_format",
      "description": "The Available Filter Format defines the type of data that is expected in a single filter",
      "attributes": []
    },
    {
      "plural": "avs_codes",
      "values": [
        {
          "name": "match",
          "description": "Full match",
          "attributes": []
        },
        {
          "name": "partial",
          "description": "Partial match; see details in 'avs' model to understand which components matched",
          "attributes": []
        },
        {
          "name": "unsupported",
          "description": "Issuer does not support address verification",
          "attributes": []
        },
        {
          "name": "no_match",
          "description": "Address does not match expected card values",
          "attributes": []
        }
      ],
      "name": "avs_code",
      "attributes": []
    },
    {
      "plural": "calendars",
      "values": [
        {
          "name": "weekdays",
          "description": "Mon - Fri",
          "attributes": []
        },
        {
          "name": "everyday",
          "description": "7 days per week",
          "attributes": []
        }
      ],
      "name": "calendar",
      "attributes": []
    },
    {
      "plural": "cancel_reasons",
      "values": [
        {
          "name": "out_of_stock",
          "description": "Out of stock is a permanent cancel of the fulfillment of an item qty. If no other fulfillment parties exist, this will cancel the ordered quantity and reduce or refund the consumer's payment.",
          "attributes": []
        },
        {
          "name": "consumer_requested",
          "description": "A consumer requested cancellation of an item qty and the fulfillment party has acknowledged that the qty will not be shipped. This is a cancel of the ordered quantity and will reduce or refund the consumer's payment",
          "attributes": []
        },
        {
          "name": "flow_cancel",
          "description": "Flow has had to cancel an order, possibly due to fraud activity or inability to collect payment. This will cancel the ordered quantity. All known parties will be notified.",
          "attributes": []
        }
      ],
      "name": "cancel_reason",
      "description": "The reason for a cancellation. Choice of a reason may change how and which parties are notified about a cancel.",
      "attributes": []
    },
    {
      "plural": "capabilities",
      "values": [
        {
          "name": "crossdock",
          "attributes": []
        }
      ],
      "name": "capability",
      "attributes": []
    },
    {
      "plural": "capture_decline_codes",
      "values": [
        {
          "name": "expired",
          "description": "Payment authorization has expired",
          "attributes": []
        },
        {
          "name": "insufficient_funds",
          "description": "The amount to capture exceeded the amount authorized and not yet captured",
          "attributes": []
        },
        {
          "name": "unknown",
          "description": "Failed due to another reason (details not known)",
          "attributes": []
        }
      ],
      "name": "capture_decline_code",
      "description": "Contains details related to the reason for which a capture failed.",
      "attributes": []
    },
    {
      "plural": "capture_statuses",
      "values": [
        {
          "name": "pending",
          "description": "The capture has been initiated and requires time to complete.",
          "attributes": []
        },
        {
          "name": "succeeded",
          "description": "The capture has been processed successfully.",
          "attributes": []
        },
        {
          "name": "failed",
          "description": "The capture failed to process.",
          "attributes": []
        },
        {
          "name": "canceled",
          "description": "The capture was canceled.",
          "attributes": []
        }
      ],
      "name": "capture_status",
      "attributes": []
    },
    {
      "plural": "card_error_codes",
      "values": [
        {
          "name": "invalid_address",
          "description": "Invalid billing address",
          "attributes": []
        },
        {
          "name": "invalid_name",
          "description": "Invalid cardholder name",
          "attributes": []
        },
        {
          "name": "invalid_number",
          "description": "Invalid payment number",
          "attributes": []
        },
        {
          "name": "invalid_expiration",
          "description": "Invalid expiration date",
          "attributes": []
        },
        {
          "name": "invalid_token_type",
          "description": "Cannot create a permanent card via an unauthorized request",
          "attributes": []
        },
        {
          "name": "avs",
          "description": "Declined due to avs mismatch",
          "attributes": []
        },
        {
          "name": "cvv",
          "description": "Declined due to cvv mismatch",
          "attributes": []
        },
        {
          "name": "fraud",
          "description": "Declined due to suspected fraud",
          "attributes": []
        },
        {
          "name": "unknown",
          "description": "Declined due to another reason (details not known)",
          "attributes": []
        }
      ],
      "name": "card_error_code",
      "attributes": []
    },
    {
      "plural": "card_types",
      "values": [
        {
          "name": "american_express",
          "attributes": []
        },
        {
          "name": "cartes_bancaires",
          "attributes": []
        },
        {
          "name": "china_union_pay",
          "attributes": []
        },
        {
          "name": "dankort",
          "attributes": []
        },
        {
          "name": "diners_club",
          "attributes": []
        },
        {
          "name": "discover",
          "attributes": []
        },
        {
          "name": "jcb",
          "attributes": []
        },
        {
          "name": "maestro",
          "attributes": []
        },
        {
          "name": "mastercard",
          "attributes": []
        },
        {
          "name": "visa",
          "attributes": []
        }
      ],
      "name": "card_type",
      "attributes": []
    },
    {
      "plural": "center_capabilities",
      "values": [
        {
          "name": "international",
          "attributes": []
        },
        {
          "name": "domestic",
          "attributes": []
        },
        {
          "name": "crossdock",
          "attributes": []
        },
        {
          "name": "commercial_invoice",
          "attributes": []
        }
      ],
      "name": "center_capability",
      "attributes": []
    },
    {
      "plural": "change_types",
      "values": [
        {
          "name": "insert",
          "attributes": []
        },
        {
          "name": "update",
          "attributes": []
        },
        {
          "name": "delete",
          "attributes": []
        }
      ],
      "name": "change_type",
      "attributes": []
    },
    {
      "plural": "consumer_invoice_customer_types",
      "values": [
        {
          "name": "business_eu_verified",
          "description": "A business that have been verified in the European Union",
          "attributes": []
        },
        {
          "name": "business_non_verified",
          "description": "A business, but with no additional verification",
          "attributes": []
        },
        {
          "name": "individual",
          "attributes": []
        }
      ],
      "name": "consumer_invoice_customer_type",
      "attributes": []
    },
    {
      "plural": "consumer_invoice_document_types",
      "values": [
        {
          "name": "pdf",
          "attributes": []
        }
      ],
      "name": "consumer_invoice_document_type",
      "description": "The invoice content type defines the type of content contained in a given url",
      "attributes": []
    },
    {
      "plural": "consumer_invoice_statuses",
      "values": [
        {
          "name": "pending",
          "description": "Indicates that the credit memo has been created but validation is pending (e.g. waiting for the associated refund to be confirmed)",
          "attributes": []
        },
        {
          "name": "available",
          "description": "Indicates that the credit memo is fully validated and available for the end consumer",
          "attributes": []
        },
        {
          "name": "invalid",
          "description": "Indicates that the credit memo failed to validate after multiple attempts and time",
          "attributes": []
        }
      ],
      "name": "consumer_invoice_status",
      "attributes": []
    },
    {
      "plural": "country_picker_sources",
      "values": [
        {
          "name": "experience",
          "description": "Indicates we should build the list of countries based on each active experience country",
          "attributes": []
        },
        {
          "name": "destination",
          "description": "Indicates we should build the list of countries based on all countries to which you have a rate card (ie. all valid destination countries)",
          "attributes": []
        }
      ],
      "name": "country_picker_source",
      "attributes": []
    },
    {
      "plural": "credit_payment_error_codes",
      "values": [
        {
          "name": "generic_error",
          "attributes": []
        },
        {
          "name": "invalid_order_number",
          "description": "Indicates the specified order does not exist",
          "attributes": []
        },
        {
          "name": "invalid_currency",
          "description": "Indicates that the specified currency code is not valid",
          "attributes": []
        },
        {
          "name": "invalid_description",
          "description": "Indicates that the description is invalid (must be non-empty)",
          "attributes": []
        },
        {
          "name": "duplicate",
          "description": "Indicates that a credit payment with the specified key already exists",
          "attributes": []
        },
        {
          "name": "amount_must_be_positive",
          "description": "Indicates the provided credit amount was <= 0",
          "attributes": []
        },
        {
          "name": "amount_exceeds_balance",
          "description": "Indicates the provided credit amount exceeds the remaining balance on the order",
          "attributes": []
        },
        {
          "name": "insufficient_amount",
          "description": "Indicates the provided credit amount exceeds the maximum amount of applicable credit",
          "attributes": []
        }
      ],
      "name": "credit_payment_error_code",
      "attributes": []
    },
    {
      "plural": "currency_label_formatters",
      "values": [
        {
          "name": "strip_trailing_zeros",
          "description": "If a price ends in '.00' or ',00', we remove the cents and just display the price as a whole number. e.g. 'A$100.00' becomes 'A$100'",
          "attributes": []
        }
      ],
      "name": "currency_label_formatter",
      "description": "A currency label formatter accepts a price label and updates it according to a set of rules.",
      "attributes": []
    },
    {
      "plural": "currency_symbol_formats",
      "values": [
        {
          "name": "narrow",
          "description": "The narrow format refers to the Unicode Common Locale Data Repository (CLDR) 'narrow' symbols (e.g. '$' for CAD and AUD)",
          "attributes": []
        },
        {
          "name": "primary",
          "description": "The primary format refers to the Unicode Common Locale Data Repository (CLDR) 'primary' symbols (e.g. 'CA$' for CAD and 'A$' for AUD)",
          "attributes": []
        }
      ],
      "name": "currency_symbol_format",
      "description": "The currency symbol format controls which set of currency symbols we use when displaying currencies",
      "attributes": []
    },
    {
      "plural": "customer_address_types",
      "values": [
        {
          "name": "billing",
          "attributes": []
        },
        {
          "name": "invoice",
          "attributes": []
        },
        {
          "name": "shipping",
          "attributes": []
        }
      ],
      "name": "customer_address_type",
      "attributes": []
    },
    {
      "plural": "cvv_codes",
      "values": [
        {
          "name": "match",
          "description": "CVV matches",
          "attributes": []
        },
        {
          "name": "suspicious",
          "description": "CVV did not match; Transaction is possibly fraudulent",
          "attributes": []
        },
        {
          "name": "unsupported",
          "description": "CVV did not match; Issuer does not support card verification numbers",
          "attributes": []
        },
        {
          "name": "no_match",
          "description": "CVV did not match; Specific reason not available",
          "attributes": []
        }
      ],
      "name": "cvv_code",
      "attributes": []
    },
    {
      "plural": "day_of_weeks",
      "values": [
        {
          "name": "sunday",
          "attributes": []
        },
        {
          "name": "monday",
          "attributes": []
        },
        {
          "name": "tuesday",
          "attributes": []
        },
        {
          "name": "wednesday",
          "attributes": []
        },
        {
          "name": "thursday",
          "attributes": []
        },
        {
          "name": "friday",
          "attributes": []
        },
        {
          "name": "saturday",
          "attributes": []
        }
      ],
      "name": "day_of_week",
      "attributes": []
    },
    {
      "plural": "delivered_duties",
      "values": [
        {
          "name": "paid",
          "description": "Delivered Duty Paid (DDP). See https://en.wikipedia.org/wiki/Incoterms for more information",
          "attributes": []
        },
        {
          "name": "unpaid",
          "description": "Delivered Duty Unpaid (DDU). See https://en.wikipedia.org/wiki/Incoterms for more information",
          "attributes": []
        }
      ],
      "name": "delivered_duty",
      "attributes": []
    },
    {
      "plural": "delivered_duty_display_types",
      "values": [
        {
          "name": "all",
          "description": "Displays all available options to the customer.",
          "attributes": []
        },
        {
          "name": "single",
          "description": "Displays a single option (either DDU or DDP), while the other can be displayed by changing duties and tax preferences at checkout.",
          "attributes": []
        }
      ],
      "name": "delivered_duty_display_type",
      "attributes": []
    },
    {
      "plural": "delivery_option_cost_detail_component_keys",
      "values": [
        {
          "name": "ratecard_base_cost",
          "attributes": []
        },
        {
          "name": "ratecard_ddp_fee",
          "attributes": []
        },
        {
          "name": "ratecard_fuel_surcharge",
          "attributes": []
        },
        {
          "name": "ratecard_oversized_shipment_fee",
          "attributes": []
        },
        {
          "name": "ratecard_rural_shipment_fee",
          "attributes": []
        },
        {
          "name": "center_commercial_invoice_fee",
          "attributes": []
        },
        {
          "name": "center_inbound_carton_fee",
          "attributes": []
        },
        {
          "name": "center_outbound_carton_fee",
          "attributes": []
        }
      ],
      "name": "delivery_option_cost_detail_component_key",
      "attributes": []
    },
    {
      "plural": "delivery_option_cost_detail_sources",
      "values": [
        {
          "name": "center",
          "attributes": []
        },
        {
          "name": "ratecard",
          "attributes": []
        }
      ],
      "name": "delivery_option_cost_detail_source",
      "attributes": []
    },
    {
      "plural": "delivery_window_component_sources",
      "values": [
        {
          "name": "flow",
          "attributes": []
        },
        {
          "name": "organization",
          "attributes": []
        },
        {
          "name": "carrier",
          "attributes": []
        },
        {
          "name": "center",
          "attributes": []
        },
        {
          "name": "mixed",
          "description": "A delivery estimate may be a combination of multiple sources",
          "attributes": []
        }
      ],
      "name": "delivery_window_component_source",
      "attributes": []
    },
    {
      "plural": "delivery_window_locations",
      "values": [
        {
          "name": "center",
          "attributes": []
        },
        {
          "name": "crossdock",
          "attributes": []
        },
        {
          "name": "customer",
          "attributes": []
        }
      ],
      "name": "delivery_window_location",
      "attributes": []
    },
    {
      "plural": "directions",
      "values": [
        {
          "name": "outbound",
          "description": "Outbound shipment to typically fulfill a customer order",
          "attributes": []
        },
        {
          "name": "return",
          "description": "Inbound or return shipment",
          "attributes": []
        }
      ],
      "name": "direction",
      "attributes": []
    },
    {
      "plural": "discount_targets",
      "values": [
        {
          "name": "item",
          "description": "Discount is targeted to an item.",
          "attributes": []
        },
        {
          "name": "shipping",
          "description": "Discount is targeting to shipping. Only applicable if the discount is provided at the order level.",
          "attributes": []
        }
      ],
      "name": "discount_target",
      "attributes": []
    },
    {
      "plural": "ecommerce_platform_types",
      "values": [
        {
          "name": "commercetools",
          "attributes": []
        },
        {
          "name": "custom",
          "attributes": []
        },
        {
          "name": "magento",
          "attributes": []
        },
        {
          "name": "shopify",
          "attributes": []
        },
        {
          "name": "sfcc",
          "attributes": []
        },
        {
          "name": "solidus",
          "attributes": []
        },
        {
          "name": "workarea",
          "attributes": []
        }
      ],
      "name": "ecommerce_platform_type",
      "attributes": []
    },
    {
      "plural": "economic_title_locations",
      "values": [
        {
          "name": "high_seas",
          "description": "Indicates title transferred on the high seas",
          "attributes": []
        },
        {
          "name": "origination",
          "description": "Indicates title transferred at the originating fulfillment center",
          "attributes": []
        },
        {
          "name": "destination",
          "description": "Indicates title transferred at the destination",
          "attributes": []
        }
      ],
      "name": "economic_title_location",
      "attributes": []
    },
    {
      "plural": "environments",
      "values": [
        {
          "name": "sandbox",
          "description": "In sandbox, no external services (e.g. orders, payments, logistics) will generate real transactions",
          "attributes": []
        },
        {
          "name": "production",
          "description": "In production, all external services are live and will generate real transactions",
          "attributes": []
        }
      ],
      "name": "environment",
      "attributes": []
    },
    {
      "plural": "event_types",
      "values": [
        {
          "name": "attribute_upserted",
          "attributes": []
        },
        {
          "name": "attribute_deleted",
          "attributes": []
        },
        {
          "name": "attribute_upserted_v2",
          "attributes": []
        },
        {
          "name": "attribute_deleted_v2",
          "attributes": []
        },
        {
          "name": "catalog_upserted",
          "attributes": []
        },
        {
          "name": "catalog_deleted",
          "attributes": []
        },
        {
          "name": "subcatalog_upserted",
          "attributes": []
        },
        {
          "name": "subcatalog_deleted",
          "attributes": []
        },
        {
          "name": "catalog_item_upserted",
          "attributes": []
        },
        {
          "name": "catalog_item_deleted",
          "attributes": []
        },
        {
          "name": "catalog_item_upserted_v2",
          "attributes": []
        },
        {
          "name": "catalog_item_deleted_v2",
          "attributes": []
        },
        {
          "name": "subcatalog_item_upserted",
          "attributes": []
        },
        {
          "name": "subcatalog_item_deleted",
          "attributes": []
        },
        {
          "name": "b2b_invoice_upserted",
          "attributes": []
        },
        {
          "name": "b2b_invoice_deleted",
          "attributes": []
        },
        {
          "name": "b2b_credit_memo_upserted",
          "attributes": []
        },
        {
          "name": "b2b_credit_memo_deleted",
          "attributes": []
        },
        {
          "name": "consumer_invoice_upserted",
          "attributes": []
        },
        {
          "name": "consumer_invoice_deleted",
          "attributes": []
        },
        {
          "name": "credit_memo_upserted",
          "attributes": []
        },
        {
          "name": "credit_memo_deleted",
          "attributes": []
        },
        {
          "name": "crossdock_shipment_upserted",
          "attributes": []
        },
        {
          "name": "rate_deleted",
          "attributes": []
        },
        {
          "name": "rate_upserted",
          "attributes": []
        },
        {
          "name": "rate_deleted_v3",
          "attributes": []
        },
        {
          "name": "rate_upserted_v3",
          "attributes": []
        },
        {
          "name": "customer_upserted",
          "attributes": []
        },
        {
          "name": "customer_deleted",
          "attributes": []
        },
        {
          "name": "customer_address_book_contact_upserted",
          "attributes": []
        },
        {
          "name": "customer_address_book_contact_deleted",
          "attributes": []
        },
        {
          "name": "email_notification_upserted",
          "attributes": []
        },
        {
          "name": "email_notification_deleted",
          "attributes": []
        },
        {
          "name": "available_promotions_upserted",
          "attributes": []
        },
        {
          "name": "available_promotions_deleted",
          "attributes": []
        },
        {
          "name": "available_promotions_upserted_v2",
          "attributes": []
        },
        {
          "name": "available_promotions_deleted_v2",
          "attributes": []
        },
        {
          "name": "allocation_deleted_v2",
          "attributes": []
        },
        {
          "name": "allocation_upserted_v2",
          "attributes": []
        },
        {
          "name": "currency_format_deleted",
          "attributes": []
        },
        {
          "name": "currency_format_upserted",
          "attributes": []
        },
        {
          "name": "experience_deleted",
          "attributes": []
        },
        {
          "name": "experience_upserted",
          "attributes": []
        },
        {
          "name": "experience_deleted_v2",
          "attributes": []
        },
        {
          "name": "experience_upserted_v2",
          "attributes": []
        },
        {
          "name": "experience_price_book_mapping_deleted",
          "attributes": []
        },
        {
          "name": "experience_price_book_mapping_upserted",
          "attributes": []
        },
        {
          "name": "experience_logistics_settings_upserted",
          "attributes": []
        },
        {
          "name": "experience_logistics_settings_deleted",
          "attributes": []
        },
        {
          "name": "item_margin_deleted",
          "attributes": []
        },
        {
          "name": "item_margin_upserted",
          "attributes": []
        },
        {
          "name": "item_sales_margin_deleted",
          "attributes": []
        },
        {
          "name": "item_sales_margin_upserted",
          "attributes": []
        },
        {
          "name": "label_format_deleted",
          "attributes": []
        },
        {
          "name": "label_format_upserted",
          "attributes": []
        },
        {
          "name": "order_deleted",
          "attributes": []
        },
        {
          "name": "order_upserted",
          "attributes": []
        },
        {
          "name": "order_deleted_v2",
          "attributes": []
        },
        {
          "name": "order_upserted_v2",
          "attributes": []
        },
        {
          "name": "order_identifier_deleted",
          "attributes": []
        },
        {
          "name": "order_identifier_upserted",
          "attributes": []
        },
        {
          "name": "order_identifier_deleted_v2",
          "attributes": []
        },
        {
          "name": "order_identifier_upserted_v2",
          "attributes": []
        },
        {
          "name": "order_identifier_upserted_v3",
          "attributes": []
        },
        {
          "name": "pricing_deleted",
          "attributes": []
        },
        {
          "name": "pricing_upserted",
          "attributes": []
        },
        {
          "name": "order_service_change_request",
          "attributes": []
        },
        {
          "name": "fraud_status_changed",
          "attributes": []
        },
        {
          "name": "center_upserted",
          "attributes": []
        },
        {
          "name": "center_deleted",
          "attributes": []
        },
        {
          "name": "shipping_configuration_upserted",
          "attributes": []
        },
        {
          "name": "shipping_configuration_deleted",
          "attributes": []
        },
        {
          "name": "tier_upserted_v2",
          "attributes": []
        },
        {
          "name": "tier_deleted_v2",
          "attributes": []
        },
        {
          "name": "shipping_lane_upserted",
          "attributes": []
        },
        {
          "name": "shipping_lane_deleted",
          "attributes": []
        },
        {
          "name": "shipping_configuration_item_availability_upserted",
          "attributes": []
        },
        {
          "name": "shipping_configuration_item_availability_deleted",
          "attributes": []
        },
        {
          "name": "shipping_configuration_item_shipping_pricing_upserted",
          "attributes": []
        },
        {
          "name": "shipping_configuration_item_shipping_pricing_deleted",
          "attributes": []
        },
        {
          "name": "hs6_code_upserted",
          "attributes": []
        },
        {
          "name": "hs6_code_deleted",
          "attributes": []
        },
        {
          "name": "hs10_code_upserted",
          "attributes": []
        },
        {
          "name": "hs10_code_deleted",
          "attributes": []
        },
        {
          "name": "item_origin_upserted",
          "attributes": []
        },
        {
          "name": "item_origin_deleted",
          "attributes": []
        },
        {
          "name": "harmonized_landed_cost_upserted",
          "attributes": []
        },
        {
          "name": "fully_harmonized_item_upserted",
          "attributes": []
        },
        {
          "name": "rule_upserted",
          "attributes": []
        },
        {
          "name": "rule_deleted",
          "attributes": []
        },
        {
          "name": "serial_upserted",
          "attributes": []
        },
        {
          "name": "serial_deleted",
          "attributes": []
        },
        {
          "name": "snapshot_upserted",
          "attributes": []
        },
        {
          "name": "snapshot_deleted",
          "attributes": []
        },
        {
          "name": "label_upserted",
          "attributes": []
        },
        {
          "name": "label_deleted_v2",
          "attributes": []
        },
        {
          "name": "label_upserted_v2",
          "attributes": []
        },
        {
          "name": "notification_upserted",
          "attributes": []
        },
        {
          "name": "notification_deleted",
          "attributes": []
        },
        {
          "name": "manifested_label_upserted",
          "attributes": []
        },
        {
          "name": "manifested_label_deleted",
          "attributes": []
        },
        {
          "name": "local_item_upserted",
          "attributes": []
        },
        {
          "name": "local_item_deleted",
          "attributes": []
        },
        {
          "name": "checkout_optin_responses_upserted",
          "attributes": []
        },
        {
          "name": "checkout_optin_responses_deleted",
          "attributes": []
        },
        {
          "name": "browse_optin_responses_upserted",
          "attributes": []
        },
        {
          "name": "browse_optin_responses_deleted",
          "attributes": []
        },
        {
          "name": "order_placed",
          "attributes": []
        },
        {
          "name": "order_placed_v2",
          "attributes": []
        },
        {
          "name": "ready_to_fulfill",
          "attributes": []
        },
        {
          "name": "membership_upserted_v2",
          "attributes": []
        },
        {
          "name": "membership_deleted_v2",
          "attributes": []
        },
        {
          "name": "organization_upserted",
          "attributes": []
        },
        {
          "name": "organization_deleted",
          "attributes": []
        },
        {
          "name": "organization_upserted_v2",
          "attributes": []
        },
        {
          "name": "organization_deleted_v2",
          "attributes": []
        },
        {
          "name": "organization_short_id_upserted",
          "attributes": []
        },
        {
          "name": "organization_short_id_deleted",
          "attributes": []
        },
        {
          "name": "organization_default_configurations_upserted",
          "attributes": []
        },
        {
          "name": "organization_default_configurations_deleted",
          "attributes": []
        },
        {
          "name": "ecommerce_platform_upserted",
          "attributes": []
        },
        {
          "name": "ecommerce_platform_deleted",
          "attributes": []
        },
        {
          "name": "authorization_deleted_v2",
          "attributes": []
        },
        {
          "name": "authorization_status_changed",
          "attributes": []
        },
        {
          "name": "card_authorization_upserted_v2",
          "attributes": []
        },
        {
          "name": "card_authorization_deleted_v2",
          "attributes": []
        },
        {
          "name": "online_authorization_upserted_v2",
          "attributes": []
        },
        {
          "name": "online_authorization_deleted_v2",
          "attributes": []
        },
        {
          "name": "capture_upserted_v2",
          "attributes": []
        },
        {
          "name": "capture_deleted",
          "attributes": []
        },
        {
          "name": "card_upserted_v2",
          "attributes": []
        },
        {
          "name": "card_deleted",
          "attributes": []
        },
        {
          "name": "payment_upserted",
          "attributes": []
        },
        {
          "name": "payment_deleted",
          "attributes": []
        },
        {
          "name": "refund_upserted_v2",
          "attributes": []
        },
        {
          "name": "refund_deleted_v2",
          "attributes": []
        },
        {
          "name": "refund_capture_upserted_v2",
          "attributes": []
        },
        {
          "name": "reversal_upserted",
          "attributes": []
        },
        {
          "name": "reversal_deleted",
          "attributes": []
        },
        {
          "name": "capture_identifier_upserted",
          "attributes": []
        },
        {
          "name": "capture_identifier_deleted",
          "attributes": []
        },
        {
          "name": "refund_identifier_upserted",
          "attributes": []
        },
        {
          "name": "refund_identifier_deleted",
          "attributes": []
        },
        {
          "name": "virtual_card_capture_upserted",
          "attributes": []
        },
        {
          "name": "virtual_card_capture_deleted",
          "attributes": []
        },
        {
          "name": "virtual_card_refund_upserted",
          "attributes": []
        },
        {
          "name": "virtual_card_refund_deleted",
          "attributes": []
        },
        {
          "name": "price_book_upserted",
          "attributes": []
        },
        {
          "name": "price_book_deleted",
          "attributes": []
        },
        {
          "name": "price_book_item_upserted",
          "attributes": []
        },
        {
          "name": "price_book_item_deleted",
          "attributes": []
        },
        {
          "name": "organization_rates_published",
          "attributes": []
        },
        {
          "name": "ratecard_lane_upserted",
          "attributes": []
        },
        {
          "name": "ratecard_lane_deleted",
          "attributes": []
        },
        {
          "name": "ratecard_upserted",
          "attributes": []
        },
        {
          "name": "ratecard_deleted",
          "attributes": []
        },
        {
          "name": "return_upserted",
          "attributes": []
        },
        {
          "name": "return_deleted",
          "attributes": []
        },
        {
          "name": "shopify_localization_setting_upserted",
          "attributes": []
        },
        {
          "name": "shopify_localization_setting_deleted",
          "attributes": []
        },
        {
          "name": "targeting_item_upserted",
          "attributes": []
        },
        {
          "name": "targeting_item_upserted_v2",
          "attributes": []
        },
        {
          "name": "targeting_item_deleted",
          "attributes": []
        },
        {
          "name": "targeting_item_deleted_v3",
          "attributes": []
        },
        {
          "name": "tracking_label_event_upserted",
          "attributes": []
        }
      ],
      "name": "event_type",
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "webhook"
          }
        }
      ]
    },
    {
      "plural": "exception_types",
      "values": [
        {
          "name": "open",
          "attributes": []
        },
        {
          "name": "closed",
          "attributes": []
        }
      ],
      "name": "exception_type",
      "attributes": []
    },
    {
      "plural": "exclusion_rule_states",
      "values": [
        {
          "name": "current",
          "attributes": []
        },
        {
          "name": "deleting",
          "attributes": []
        },
        {
          "name": "updating",
          "attributes": []
        }
      ],
      "name": "exclusion_rule_state",
      "description": "The exclusion rule state highlights if an exclusion rule is currently processing as some updates take some time to apply to large catalogs.",
      "attributes": []
    },
    {
      "plural": "experience_clone_statuses",
      "values": [
        {
          "name": "pending",
          "attributes": []
        },
        {
          "name": "updating",
          "attributes": []
        },
        {
          "name": "completed",
          "attributes": []
        },
        {
          "name": "failed",
          "attributes": []
        }
      ],
      "name": "experience_clone_status",
      "attributes": []
    },
    {
      "plural": "experience_payment_method_tags",
      "values": [
        {
          "name": "display",
          "description": "A displayed payment method will be highlighted during the checkout process for an experience.",
          "attributes": []
        }
      ],
      "name": "experience_payment_method_tag",
      "attributes": []
    },
    {
      "plural": "experience_statuses",
      "values": [
        {
          "name": "draft",
          "attributes": []
        },
        {
          "name": "active",
          "attributes": []
        },
        {
          "name": "archiving",
          "description": "Archiving indicates an experience has been archived. We allow some time for sessions to expire before fully marking the experience archived.",
          "attributes": []
        },
        {
          "name": "archived",
          "attributes": []
        }
      ],
      "name": "experience_status",
      "attributes": []
    },
    {
      "plural": "export_statuses",
      "values": [
        {
          "name": "created",
          "attributes": []
        },
        {
          "name": "processing",
          "attributes": []
        },
        {
          "name": "completed",
          "attributes": []
        },
        {
          "name": "failed",
          "attributes": []
        }
      ],
      "name": "export_status",
      "description": "Export status is a finite state machine with valid transitions of created to processing, processing to completed or failed",
      "attributes": []
    },
    {
      "plural": "flow_addon_roles",
      "values": [
        {
          "name": "consumer_data_viewer",
          "description": "Can view consumer's private data",
          "attributes": []
        },
        {
          "name": "membership_manager",
          "description": "Can invite new users to the org.",
          "attributes": []
        }
      ],
      "name": "flow_addon_role",
      "description": "Default addon roles supported by Flow. These roles don't provide enough access to be useful on their own but convey additional responsibility to user roles.",
      "attributes": []
    },
    {
      "plural": "flow_behaviors",
      "values": [
        {
          "name": "view_consumer_data",
          "description": "Allows user to view consumers' personal data.",
          "attributes": []
        }
      ],
      "name": "flow_behavior",
      "description": "Behaviors represent cross-cutting concerns that may be assigned via roles and may apply to many API endpoints.",
      "attributes": []
    },
    {
      "plural": "flow_user_roles",
      "values": [
        {
          "name": "organization_admin",
          "description": "Can fully administrate a merchant organization.",
          "attributes": []
        },
        {
          "name": "organization_merchant",
          "description": "Can access merchant functions such as analytics, billing, experiences.",
          "attributes": []
        },
        {
          "name": "organization_operations",
          "description": "Can access customer service functions and retreive relevant data.",
          "attributes": []
        },
        {
          "name": "organization_fulfillment",
          "description": "Can access fulfillment functions and retreive relevant data.",
          "attributes": []
        },
        {
          "name": "organization_marketing",
          "description": "Can access marketing functions and retreive relevant data.",
          "attributes": []
        },
        {
          "name": "organization_finance",
          "description": "Can access billing and reconcilliation functions and retreive relevant data.",
          "attributes": []
        },
        {
          "name": "flow_operations",
          "description": "Can access Flow internal functions.",
          "attributes": []
        }
      ],
      "name": "flow_user_role",
      "description": "Default user roles supported by Flow",
      "attributes": []
    },
    {
      "plural": "fraud_email_rule_decisions",
      "values": [
        {
          "name": "approved",
          "description": "Approve all orders matching the customers email address.",
          "attributes": []
        },
        {
          "name": "declined",
          "description": "Decline all orders matching the customers email address.",
          "attributes": []
        }
      ],
      "name": "fraud_email_rule_decision",
      "description": "The decision to take when applying an email rule.",
      "attributes": []
    },
    {
      "plural": "fraud_liabilities",
      "values": [
        {
          "name": "flow",
          "description": "Flow takes any fraud liability for the order.",
          "attributes": []
        },
        {
          "name": "organization",
          "description": "The merchant takes any fraud liability for the order.",
          "attributes": []
        }
      ],
      "name": "fraud_liability",
      "description": "Specifies who assumes liability for any fraud related to the order.",
      "attributes": []
    },
    {
      "plural": "fraud_statuses",
      "values": [
        {
          "name": "pending",
          "description": "If an immediate response is not available, the state will be 'pending'.",
          "attributes": []
        },
        {
          "name": "approved",
          "description": "Fraud check has passed and the order is approved.",
          "attributes": []
        },
        {
          "name": "declined",
          "description": "Indicates the fraud check has been declined by the fraud providing service.",
          "attributes": []
        },
        {
          "name": "review",
          "description": "Indicates the fraud check decision from the fraud providing service is being reviewed.",
          "attributes": []
        }
      ],
      "name": "fraud_status",
      "description": "The current fraud status for an order.",
      "attributes": []
    },
    {
      "plural": "ftp_file_sources",
      "values": [
        {
          "name": "flow",
          "description": "Indicates flow created this file",
          "attributes": []
        },
        {
          "name": "organization",
          "description": "Indicates the organization created this file",
          "attributes": []
        }
      ],
      "name": "ftp_file_source",
      "attributes": []
    },
    {
      "plural": "fulfillment_item_quantity_statuses",
      "values": [
        {
          "name": "new",
          "description": "Item may be shipped or cancelled",
          "attributes": []
        },
        {
          "name": "shipped",
          "description": "Item has been packaged for shipment; can no longer be cancelled.",
          "attributes": []
        },
        {
          "name": "cancelled",
          "description": "Item will not be fulfilled.",
          "attributes": []
        }
      ],
      "name": "fulfillment_item_quantity_status",
      "description": "Possible fulfillment statuses for a item quantity",
      "attributes": []
    },
    {
      "plural": "fulfillment_method_types",
      "values": [
        {
          "name": "fulfillment_method",
          "description": "Indicates how an item will be shipped or fulfilled.  Acceptable values are defined by the 'fulfillment_method_value' enum.",
          "attributes": []
        }
      ],
      "name": "fulfillment_method_type",
      "description": "Used to indicate an item's fulfillment method type.",
      "attributes": []
    },
    {
      "plural": "fulfillment_method_values",
      "values": [
        {
          "name": "digital",
          "description": "Indicates item will be fulfilled digitally and no shipment is required (e.g. Gift Card).",
          "attributes": []
        },
        {
          "name": "physical",
          "description": "Indicates item will be shipped in a physical package.",
          "attributes": []
        }
      ],
      "name": "fulfillment_method_value",
      "description": "Used to indicate an item's fulfillment method values.",
      "attributes": []
    },
    {
      "plural": "generic_error_codes",
      "values": [
        {
          "name": "generic_error",
          "description": "Generic errors are the default type. The accompanying message will provide details on the failure.",
          "attributes": []
        },
        {
          "name": "client_error",
          "description": "A client error has occurred. This represents a misconfiguration of the client",
          "attributes": []
        },
        {
          "name": "server_error",
          "description": "A server error has occurred. The Flow tech team is automatically notified of all server errors",
          "attributes": []
        }
      ],
      "name": "generic_error_code",
      "attributes": []
    },
    {
      "plural": "goods_supplies",
      "values": [
        {
          "name": "export",
          "description": "Goods will be supplied from a DC from outside the national and customs boundaries of the destination.",
          "attributes": []
        },
        {
          "name": "intra_community",
          "description": "Goods will be supplied from a DC outside the national boundries of the destination, but within the same customs union.",
          "attributes": []
        },
        {
          "name": "local",
          "description": "Goods will be supplied from a DC within the same country as the destination.",
          "attributes": []
        }
      ],
      "name": "goods_supply",
      "description": "Defines how goods will be supplied to a customer from a distribution center (DC) from the perspective of the type of border being crossed.",
      "attributes": []
    },
    {
      "plural": "holiday_calendars",
      "values": [
        {
          "name": "us_bank_holidays",
          "attributes": []
        },
        {
          "name": "jewish_holidays",
          "attributes": []
        }
      ],
      "name": "holiday_calendar",
      "attributes": []
    },
    {
      "plural": "image_tags",
      "values": [
        {
          "name": "thumbnail",
          "description": "Thumbnail images identify the image to use when displaying products in the Flow Console.",
          "attributes": []
        },
        {
          "name": "checkout",
          "description": "Checkout images identify the item image to use when displaying the item in the context of a consumer checkout (e.g. cart, checkout page).",
          "attributes": []
        }
      ],
      "name": "image_tag",
      "attributes": []
    },
    {
      "plural": "import_types",
      "values": [
        {
          "name": "catalog_items",
          "description": "Provides bulk upsert of items into an organization's catalog.",
          "attributes": []
        },
        {
          "name": "customs_descriptions",
          "description": "Provides upload of customs descriptions for the products in a catalog.",
          "attributes": []
        },
        {
          "name": "customs_description_tariffs",
          "description": "Provides upload of customs descriptions and corresponding tariffs. These are independent of any catalog, product, or item.",
          "attributes": []
        },
        {
          "name": "experiences_with_settings",
          "description": "Provides bulk upsert of experiences with associated settings.",
          "attributes": []
        },
        {
          "name": "harmonization_codes",
          "description": "Provides upload of HS-6 and HS-10 codes for the items in a catalog",
          "attributes": []
        },
        {
          "name": "item_prices",
          "description": "Provides bulk upsert of item pricing into an organization's catalog, updating only the prices and associated price attributes while preserving all other item information.",
          "attributes": []
        },
        {
          "name": "item_form_overlays",
          "description": "Item form overlays allow you to upload additional catalog item information that will be applied to each catalog item, even if you later modify the item. You can think of this import as providing catalog item data that will be overlaid on top of the content in your core catalog.",
          "attributes": []
        },
        {
          "name": "price_book_items",
          "description": "Provides bulk upsert of price book items based on item number.",
          "attributes": []
        },
        {
          "name": "price_book_items_query",
          "description": "Provides bulk upsert of price book items based on a query (e.g. update all items by sku or product id).",
          "attributes": []
        },
        {
          "name": "ratecard_lanes",
          "description": "Provides way to upload a new ratecard with lanes and rates for a service level.",
          "attributes": []
        },
        {
          "name": "order_service_changes",
          "description": "Provides way to upload service level changes for orders that require updated shipping methods.",
          "attributes": []
        }
      ],
      "name": "import_type",
      "attributes": []
    },
    {
      "plural": "included_levy_keys",
      "values": [
        {
          "name": "duty",
          "attributes": []
        },
        {
          "name": "vat",
          "attributes": []
        },
        {
          "name": "vat_and_duty",
          "attributes": []
        },
        {
          "name": "none",
          "attributes": []
        }
      ],
      "name": "included_levy_key",
      "description": "The key of each possible localized price note is defined here.",
      "attributes": []
    },
    {
      "plural": "incoterms",
      "values": [
        {
          "name": "EXW",
          "description": "Ex Works (named place of delivery)",
          "attributes": []
        },
        {
          "name": "FCA",
          "description": "Free Carrier (named place of delivery)",
          "attributes": []
        },
        {
          "name": "CPT",
          "description": "Carriage Paid To (named place of destination)",
          "attributes": []
        },
        {
          "name": "CIP",
          "description": "Carriage and Insurance Paid to (named place of destination)",
          "attributes": []
        },
        {
          "name": "DAT",
          "description": "Delivered At Terminal (named terminal at port or place of destination)",
          "attributes": []
        },
        {
          "name": "DAP",
          "description": "Delivered At Place (named place of destination)",
          "attributes": []
        },
        {
          "name": "DDP",
          "description": "Delivered Duty Paid (named place of destination)",
          "attributes": []
        },
        {
          "name": "FAS",
          "description": "Free Alongside Ship (named port of shipment)",
          "attributes": []
        },
        {
          "name": "FOB",
          "description": "Free on Board (named port of shipment)",
          "attributes": []
        },
        {
          "name": "CFR",
          "description": "Cost and Freight (named port of destination)",
          "attributes": []
        },
        {
          "name": "CIF",
          "description": "Cost, Insurance & Freight (named port of destination)",
          "attributes": []
        },
        {
          "name": "DAF",
          "description": "Delivered at Frontier (named place of delivery)",
          "attributes": []
        },
        {
          "name": "DES",
          "description": "Delivered Ex Ship",
          "attributes": []
        },
        {
          "name": "DEQ",
          "description": "Delivered Ex Quay (named port of delivery)",
          "attributes": []
        },
        {
          "name": "DDU",
          "description": "Delivered Duty Unpaid (named place of destination)",
          "attributes": []
        }
      ],
      "name": "incoterm",
      "description": "International Commercial Terms are a series of pre-defined commercial terms published by the International Chamber of Commerce (ICC) relating to international commercial law.",
      "attributes": []
    },
    {
      "plural": "input_specification_types",
      "values": [
        {
          "name": "text",
          "attributes": []
        },
        {
          "name": "number",
          "attributes": []
        }
      ],
      "name": "input_specification_type",
      "attributes": []
    },
    {
      "plural": "inventory_statuses",
      "values": [
        {
          "name": "has_inventory",
          "attributes": []
        },
        {
          "name": "no_inventory",
          "attributes": []
        }
      ],
      "name": "inventory_status",
      "attributes": []
    },
    {
      "plural": "invitation_error_codes",
      "values": [
        {
          "name": "expired",
          "attributes": []
        },
        {
          "name": "invalid_email",
          "attributes": []
        }
      ],
      "name": "invitation_error_code",
      "attributes": []
    },
    {
      "plural": "item_availability_statuses",
      "values": [
        {
          "name": "available",
          "description": "Inventory is generally available for purchase",
          "attributes": []
        },
        {
          "name": "low",
          "description": "Inventory is low and may soon become unavailable for purchase (# inventory items <= 5). Unless there is a specific use case for low inventory, it can be treated the same as 'available'",
          "attributes": []
        },
        {
          "name": "out_of_stock",
          "description": "There is no inventory available and is not available for purchase. Sample actions that can be taken are hiding the item or marking as `sold out` on the frontend",
          "attributes": []
        }
      ],
      "name": "item_availability_status",
      "attributes": []
    },
    {
      "plural": "lane_directions",
      "values": [
        {
          "name": "outbound",
          "attributes": []
        },
        {
          "name": "return",
          "attributes": []
        }
      ],
      "name": "lane_direction",
      "description": "Describes fulfillment and shipping direction",
      "attributes": []
    },
    {
      "plural": "lane_preselect_preferences",
      "values": [
        {
          "name": "lowest_cost",
          "description": "Preselect the lowest cost tier in the shipping lane",
          "attributes": []
        },
        {
          "name": "default_tier",
          "description": "Manually designate a tier in the shipping lane as the default",
          "attributes": []
        }
      ],
      "name": "lane_preselect_preference",
      "attributes": []
    },
    {
      "plural": "lane_strategies",
      "values": [
        {
          "name": "oldest",
          "description": "Use the oldest center by creation date.",
          "attributes": []
        },
        {
          "name": "fastest",
          "description": "Optimize for fastest average time in transit across all tiers from the center on the lane",
          "attributes": []
        },
        {
          "name": "lowest_cost",
          "description": "Optimize for lowest average cost across all tiers from the center on the lane",
          "attributes": []
        },
        {
          "name": "highest_priority",
          "description": "Get the highest priority center for the shipping lane",
          "attributes": []
        }
      ],
      "name": "lane_strategy",
      "description": "Strategy to select origin center on a shipping lane with multiple capable shipping origin centers",
      "attributes": []
    },
    {
      "plural": "levy_components",
      "values": [
        {
          "name": "goods",
          "description": "The value of goods",
          "attributes": []
        },
        {
          "name": "duty",
          "attributes": []
        },
        {
          "name": "insurance",
          "attributes": []
        },
        {
          "name": "freight",
          "attributes": []
        },
        {
          "name": "vat",
          "description": "Value-Added Tax",
          "attributes": []
        }
      ],
      "name": "levy_component",
      "attributes": []
    },
    {
      "plural": "levy_strategies",
      "values": [
        {
          "name": "minimum",
          "attributes": []
        },
        {
          "name": "average",
          "attributes": []
        },
        {
          "name": "maximum",
          "attributes": []
        }
      ],
      "name": "levy_strategy",
      "attributes": []
    },
    {
      "plural": "location_error_codes",
      "values": [
        {
          "name": "address_required",
          "description": "Indicates that a non empty address was not specified when required",
          "attributes": []
        },
        {
          "name": "ip_invalid",
          "description": "Indicates the specified IP Address is invalid",
          "attributes": []
        },
        {
          "name": "ip_required",
          "description": "Indicates that a non empty IP Address was not specified when required",
          "attributes": []
        },
        {
          "name": "timezone_unavailable",
          "description": "Indicates that there is no timezone information available for the specified IP Address",
          "attributes": []
        }
      ],
      "name": "location_error_code",
      "attributes": []
    },
    {
      "plural": "margin_types",
      "values": [
        {
          "name": "fixed",
          "description": "A fixed amount to add, e.g 2.5 would add an absolute margin of 2.5 in the base currency of your item.",
          "attributes": []
        },
        {
          "name": "percent",
          "description": "A percent of the base cost to add, e.g. 1.2 would represent a 1.2% increase.",
          "attributes": []
        }
      ],
      "name": "margin_type",
      "description": "Either a fixed or percent adjustment applied to some amount.",
      "attributes": []
    },
    {
      "plural": "measurement_systems",
      "values": [
        {
          "name": "imperial",
          "attributes": []
        },
        {
          "name": "metric",
          "attributes": []
        }
      ],
      "name": "measurement_system",
      "attributes": []
    },
    {
      "plural": "merchant_gift_card_error_codes",
      "values": [
        {
          "name": "invalid",
          "description": "Generic error type",
          "attributes": []
        },
        {
          "name": "expired",
          "attributes": []
        },
        {
          "name": "empty",
          "description": "Balance is 0",
          "attributes": []
        },
        {
          "name": "insufficient_funds",
          "description": "Redemption amount greater than balance",
          "attributes": []
        },
        {
          "name": "unsupported_currency",
          "description": "Redemption or reversal currency is not supported",
          "attributes": []
        }
      ],
      "name": "merchant_gift_card_error_code",
      "attributes": []
    },
    {
      "plural": "merchant_of_records",
      "values": [
        {
          "name": "flow",
          "attributes": []
        },
        {
          "name": "organization",
          "attributes": []
        }
      ],
      "name": "merchant_of_record",
      "description": "The merchant of record enum defines who is merchant of record for a particular transaction - either Flow is serving as the merchant of record or the organization is serving as merchant of record.",
      "attributes": []
    },
    {
      "plural": "methods",
      "values": [
        {
          "name": "post",
          "attributes": []
        }
      ],
      "name": "method",
      "description": "The available methods by which we deliver each webhook event",
      "attributes": []
    },
    {
      "plural": "optin_response_types",
      "values": [
        {
          "name": "not_shown",
          "attributes": []
        },
        {
          "name": "opted_in",
          "attributes": []
        },
        {
          "name": "opted_out",
          "attributes": []
        }
      ],
      "name": "optin_response_type",
      "attributes": []
    },
    {
      "plural": "order_change_sources",
      "values": [
        {
          "name": "consumer",
          "description": "The party that placed an order",
          "attributes": []
        },
        {
          "name": "retailer",
          "description": "The party that owns the processing of the order",
          "attributes": []
        },
        {
          "name": "fulfillment",
          "description": "A party providing fulfillment for an order",
          "attributes": []
        },
        {
          "name": "flow",
          "description": "Flow may provide anti-fraud or payment services for an order",
          "attributes": []
        },
        {
          "name": "carrier",
          "description": "A party providing carriage for an order",
          "attributes": []
        }
      ],
      "name": "order_change_source",
      "description": "The original source of a change. For example, if a retailer is cancelling on behalf of a customer request, the source is consumer, even though the merchant issues the change to Flow.",
      "attributes": []
    },
    {
      "plural": "order_error_codes",
      "values": [
        {
          "name": "generic_error",
          "attributes": []
        },
        {
          "name": "order_item_not_available",
          "description": "When creating an order, if a particular item is not available in the country / destination (either because it was restricted or excluded from that country), we return this error code and list the specific item numbers which are not available in the 'numbers' field.",
          "attributes": []
        },
        {
          "name": "order_identifier_error",
          "description": "Indicates that there is no order with the specified number (nor an order for which an order identifier with that number has been created)",
          "attributes": []
        },
        {
          "name": "authorization_invalid",
          "description": "The authorization key specified is invalid - either because it does not exist or is not associated with this order",
          "attributes": []
        },
        {
          "name": "domestic_shipping_unavailable",
          "description": "Indicates that an order was created for a country for one of your domicile countries and you have asked Flow not to accept orders for this country.",
          "attributes": []
        },
        {
          "name": "shipping_unavailable",
          "description": "Indicates that an order was created for a country to which you have asked Flow not to ship.",
          "attributes": []
        },
        {
          "name": "value_threshold_exceeded",
          "description": "Indicates the order value exceeds the value threshold for destination and cannot be shipped. When specified, the order will also populate the threshold attribute.",
          "attributes": []
        },
        {
          "name": "invalid_currency",
          "description": "Indicates that the specified currency code is not valid",
          "attributes": []
        },
        {
          "name": "invalid_country",
          "description": "Indicates that the specified country code is not valid",
          "attributes": []
        },
        {
          "name": "invalid_region",
          "description": "Indicates that the specified region code is not valid",
          "attributes": []
        },
        {
          "name": "invalid_language",
          "description": "Indicates that the specified language code is not valid",
          "attributes": []
        },
        {
          "name": "item_out_of_stock",
          "description": "Indicates that one or more ordered items is marked as out-of-stock or otherwise cannot be reserved. We will list the specific out-of-stock items in the numbers field",
          "attributes": []
        },
        {
          "name": "gift_card_not_accepted",
          "description": "Indicates a failure to charge a gift card. Error message will indicate when retries are possible.",
          "attributes": []
        },
        {
          "name": "total_changed",
          "description": "Indicates that the order total has changed, likely due to pricebook update or rate change. This is not an error but the consumer should be shown the new price before continuing checkout.",
          "attributes": []
        }
      ],
      "name": "order_error_code",
      "attributes": []
    },
    {
      "plural": "order_merchant_of_records",
      "values": [
        {
          "name": "flow",
          "attributes": []
        },
        {
          "name": "organization",
          "attributes": []
        },
        {
          "name": "mixed",
          "attributes": []
        }
      ],
      "name": "order_merchant_of_record",
      "description": "The order merchant of record defines who is merchant of record for a particular order. The value will be 'mixed' if you support split payments and the merchant of record differed across the individual payment transactions.",
      "attributes": []
    },
    {
      "plural": "order_payment_types",
      "values": [
        {
          "name": "card",
          "description": "Represents a payment in the form of a credit or debit card",
          "attributes": []
        },
        {
          "name": "online",
          "description": "Represents an online payment (e.g. paypal, alipay, etc)",
          "attributes": []
        },
        {
          "name": "credit",
          "description": "A payment in the form of a credit of some type (e.g. a store credit, gift card) applied to an order",
          "attributes": []
        },
        {
          "name": "installment_plan",
          "description": "An installment plan payment represents that the user has elected an installment plan to pay for this order. For the purposes of the order, the balance will reflect fully paid for the total value of the installment plan, even though individual installments may be created in the future. Note this feature was deprecated in early 2020.",
          "attributes": []
        },
        {
          "name": "cash_on_delivery",
          "description": "Request to pay the balance with cash on delivery. Offered only when the final mile carriers support cash on delivery.",
          "attributes": []
        }
      ],
      "name": "order_payment_type",
      "description": "The order payment type identified the different ways a consumer may have paid for an order. The primary purpose is in displaying summary level payment information to the user; the type can then be used to know how to request additional details for each payment.",
      "attributes": []
    },
    {
      "plural": "order_price_detail_component_keys",
      "values": [
        {
          "name": "adjustment",
          "description": "A general purpose adjustment applied to the order.",
          "attributes": []
        },
        {
          "name": "vat_deminimis",
          "description": "An adjustment based on whether the VAT de minimis applies to the order.",
          "attributes": []
        },
        {
          "name": "duty_deminimis",
          "description": "An adjustment based on whether the duty de minimis applies to the order.",
          "attributes": []
        },
        {
          "name": "duties_item_price",
          "description": "The duty owed on the price of the order's items, including any added margins and rounding.",
          "attributes": []
        },
        {
          "name": "duties_freight",
          "description": "The duty owed on the freight cost of the order.",
          "attributes": []
        },
        {
          "name": "duties_insurance",
          "description": "The duty owed on the insurance cost of the order.",
          "attributes": []
        },
        {
          "name": "vat_item_price",
          "description": "The VAT owed on the price of the order's items, including any added margins and rounding.",
          "attributes": []
        },
        {
          "name": "vat_freight",
          "description": "The VAT owed on the freight cost of the order.",
          "attributes": []
        },
        {
          "name": "vat_insurance",
          "description": "The VAT owed on the insurance cost of the order.",
          "attributes": []
        },
        {
          "name": "vat_duties_item_price",
          "description": "The VAT owed on the duties on the price of the order's items, including any added margins and rounding.",
          "attributes": []
        },
        {
          "name": "vat_duties_freight",
          "description": "The VAT owed on the duties on the freight cost of the order.",
          "attributes": []
        },
        {
          "name": "vat_duties_insurance",
          "description": "The VAT owed on the duties on the insurance cost of the order.",
          "attributes": []
        },
        {
          "name": "item_price",
          "description": "The sum of the price of the order's items with their currency margins, percent margins, and fixed margins included.",
          "attributes": []
        },
        {
          "name": "item_discount",
          "description": "The sum of all discounts applied to the order's items.",
          "attributes": []
        },
        {
          "name": "rounding",
          "description": "The sum of any rounding applied to the order's items.",
          "attributes": []
        },
        {
          "name": "insurance",
          "description": "The insurance cost for the order.",
          "attributes": []
        },
        {
          "name": "shipping",
          "description": "The shipping cost for the order.",
          "attributes": []
        },
        {
          "name": "order_discount",
          "description": "A discount applied to the entire order.",
          "attributes": []
        },
        {
          "name": "subtotal_percent_sales_margin",
          "description": "The sum of adjustments to item price, margin and rounding made due to percentage sales margins.",
          "attributes": []
        },
        {
          "name": "subtotal_vat_percent_sales_margin",
          "description": "The sum of adjustments to VAT owed made due to percentage sales margins.",
          "attributes": []
        },
        {
          "name": "subtotal_duty_percent_sales_margin",
          "description": "The sum of adjustments to duty owed made due to percentage sales margins.",
          "attributes": []
        },
        {
          "name": "vat_subsidy",
          "description": "An offset to account for any VAT subsidized by the organization. For example, if VAT is included in an item price and changes at the order level (due to passing de minimis threshold, or the destination having a more specific VAT rate), the difference will be represented here.",
          "attributes": []
        },
        {
          "name": "duty_subsidy",
          "description": "An offset to account for any duty subsidized by the organization. For example, if duty is included in an item price and changes at the order level (due to passing de minimis threshold, or the destination having a more specific duty rate), the difference will be represented here.",
          "attributes": []
        },
        {
          "name": "remote_area_surcharge",
          "description": "Surcharge applied to a shipment for delivery to a remote area determined by the carrier.",
          "attributes": []
        },
        {
          "name": "fuel_surcharge",
          "description": "Surcharge applied to a shipment for fuel consumption by the carrier.",
          "attributes": []
        }
      ],
      "name": "order_price_detail_component_key",
      "attributes": []
    },
    {
      "plural": "order_price_detail_keys",
      "values": [
        {
          "name": "adjustment",
          "description": "The details of any adjustments made to the order.",
          "attributes": []
        },
        {
          "name": "subtotal",
          "description": "The details of the subtotal for the order, including item prices, margins, and rounding.",
          "attributes": []
        },
        {
          "name": "vat",
          "description": "The details of any VAT owed on the order.",
          "attributes": []
        },
        {
          "name": "duty",
          "description": "The details of any duties owed on the order.",
          "attributes": []
        },
        {
          "name": "shipping",
          "description": "The details of shipping costs for the order.",
          "attributes": []
        },
        {
          "name": "insurance",
          "description": "The details of insurance costs for the order.",
          "attributes": []
        },
        {
          "name": "discount",
          "description": "The details of any discount applied to the order.",
          "attributes": []
        },
        {
          "name": "surcharges",
          "description": "Additional fees and levies applied to the order",
          "attributes": []
        }
      ],
      "name": "order_price_detail_key",
      "attributes": []
    },
    {
      "plural": "order_statuses",
      "values": [
        {
          "name": "open",
          "attributes": []
        },
        {
          "name": "submitted",
          "attributes": []
        }
      ],
      "name": "order_status",
      "description": "Indicates an order's status",
      "attributes": []
    },
    {
      "plural": "order_storages",
      "values": [
        {
          "name": "do_not_persist",
          "description": "Indicates to not persist the order.",
          "attributes": []
        },
        {
          "name": "persist",
          "description": "Indicates to persist the order.",
          "attributes": []
        }
      ],
      "name": "order_storage",
      "attributes": []
    },
    {
      "plural": "organization_payment_method_tags",
      "values": [
        {
          "name": "deny",
          "description": "A denied payment method cannot be used for an organization in any experience.",
          "attributes": []
        }
      ],
      "name": "organization_payment_method_tag",
      "attributes": []
    },
    {
      "plural": "payment_error_codes",
      "values": [
        {
          "name": "duplicate",
          "attributes": []
        },
        {
          "name": "invalid_amount",
          "description": "Amount is not valid (e.g. for merchant of record payments, the amount specified must match the order). This typically is handled by refreshing the order amount and reconfirming with the user as something has changed.",
          "attributes": []
        },
        {
          "name": "invalid_currency",
          "description": "Currency is either not known or invalid (e.g. for merchant of record payments, the currency specified must match the order).",
          "attributes": []
        },
        {
          "name": "invalid_method",
          "description": "Invalid payment method",
          "attributes": []
        },
        {
          "name": "invalid_order",
          "description": "The specified order number was not found",
          "attributes": []
        },
        {
          "name": "invalid_customer",
          "description": "Customer information is invalid (e.g. email specified but not a valid email)",
          "attributes": []
        },
        {
          "name": "invalid_destination",
          "description": "Destination/shipping address is not valid",
          "attributes": []
        },
        {
          "name": "unknown",
          "description": "Failed due to another reason (details not known)",
          "attributes": []
        }
      ],
      "name": "payment_error_code",
      "attributes": []
    },
    {
      "plural": "payment_method_rule_content_keys",
      "values": [
        {
          "name": "description",
          "attributes": []
        }
      ],
      "name": "payment_method_rule_content_key",
      "description": "Indicates the intent of a given instance of payment method rule content.",
      "attributes": []
    },
    {
      "plural": "payment_method_types",
      "values": [
        {
          "name": "card",
          "description": "Represents all form of card payment (e.g. credit, debit, etc.)",
          "attributes": []
        },
        {
          "name": "online",
          "description": "Represents the most common form of alternative payment methods which require some degree of integration online (e.g. a redirect) to complete payment.",
          "attributes": []
        },
        {
          "name": "offline",
          "description": "Offline payment method types represent payments like Cash On Delivery which require offline collection",
          "attributes": []
        }
      ],
      "name": "payment_method_type",
      "description": "The payment method type defines at a high level different user experiences that are required to accept payment of this type. By enabling a payment method type, you are specifying that you have completed the integration and all payment methods of this type become available for offer to your users.",
      "attributes": []
    },
    {
      "plural": "payment_source_confirmation_action_types",
      "values": [
        {
          "name": "cvv",
          "attributes": []
        },
        {
          "name": "billing_address",
          "attributes": []
        },
        {
          "name": "number",
          "attributes": []
        }
      ],
      "name": "payment_source_confirmation_action_type",
      "attributes": []
    },
    {
      "plural": "permitted_http_methods",
      "values": [
        {
          "name": "GET",
          "attributes": []
        },
        {
          "name": "POST",
          "attributes": []
        },
        {
          "name": "PUT",
          "attributes": []
        },
        {
          "name": "DELETE",
          "attributes": []
        },
        {
          "name": "PATCH",
          "attributes": []
        }
      ],
      "name": "permitted_http_method",
      "description": "List of HTTP methods for which user permissions may be applied (OPTION for example is always permitted where CORS is enabled).",
      "attributes": []
    },
    {
      "plural": "physical_delivery_special_serivces",
      "values": [
        {
          "name": "cold_storage",
          "attributes": []
        },
        {
          "name": "hazardous",
          "attributes": []
        },
        {
          "name": "perishable",
          "attributes": []
        }
      ],
      "name": "physical_delivery_special_serivce",
      "attributes": []
    },
    {
      "plural": "price_accuracies",
      "values": [
        {
          "name": "calculated",
          "description": "The price shown is accurate and will not change unless information already provided also changes.",
          "attributes": []
        },
        {
          "name": "estimated_from_partial_destination",
          "description": "The price shown is based on the best information provided; given a more precise address, the price may change.",
          "attributes": []
        }
      ],
      "name": "price_accuracy",
      "description": "Used to identify the accuracy of a price.",
      "attributes": []
    },
    {
      "plural": "price_book_statuses",
      "values": [
        {
          "name": "draft",
          "attributes": []
        },
        {
          "name": "published",
          "attributes": []
        },
        {
          "name": "archived",
          "attributes": []
        }
      ],
      "name": "price_book_status",
      "attributes": []
    },
    {
      "plural": "price_detail_component_keys",
      "values": [
        {
          "name": "base_price",
          "description": "The base price of the item.",
          "attributes": []
        },
        {
          "name": "discount",
          "description": "A discount applied to the base price of the item.",
          "attributes": []
        },
        {
          "name": "currency_margin",
          "description": "The amount added to the post-discount item price due to FX markup, as configured in the organization's currency settings.",
          "attributes": []
        },
        {
          "name": "percent_item_margin",
          "description": "The amount added to the post-discount item price from a percent item margin. Negative amounts represent discounts.",
          "attributes": []
        },
        {
          "name": "fixed_item_margin",
          "description": "The amount added to the post-discount item price from a fixed item margin. Negative amounts represent discounts.",
          "attributes": []
        },
        {
          "name": "duties_item_price",
          "description": "The duty owed on the post-discount base item price.",
          "attributes": []
        },
        {
          "name": "duties_added_margin",
          "description": "The duty owed on the sum of the currency margin, percent item margin, and fixed item margin.",
          "attributes": []
        },
        {
          "name": "duties_rounding",
          "description": "The duty owed on any rounding applied to the total item price.",
          "attributes": []
        },
        {
          "name": "duties_deminimis",
          "description": "An adjustment made if the item does not meet the duty de minimis rule.",
          "attributes": []
        },
        {
          "name": "vat_item_price",
          "description": "The VAT owed on the post-discount base item price.",
          "attributes": []
        },
        {
          "name": "vat_added_margin",
          "description": "The VAT owed on the sum of the currency margin, percent item margin, and fixed item margin.",
          "attributes": []
        },
        {
          "name": "vat_rounding",
          "description": "The VAT owed on any rounding applied to the total item price.",
          "attributes": []
        },
        {
          "name": "vat_duties_item_price",
          "description": "The VAT owed on the duty owed on the post-discount base item price.",
          "attributes": []
        },
        {
          "name": "vat_duties_added_margin",
          "description": "The VAT owed on the duty owed on the sum of the currency margin, percent item margin, and fixed item margin.",
          "attributes": []
        },
        {
          "name": "vat_duties_rounding",
          "description": "The VAT owed on the duty owed on any rounding applied to the total item price.",
          "attributes": []
        },
        {
          "name": "vat_deminimis",
          "description": "An adjustment made if the item does not meet the VAT de minimis rule.",
          "attributes": []
        },
        {
          "name": "item_price_percent_sales_margin",
          "description": "An adjustment made to the item price as a result of a percent sales margin.",
          "attributes": []
        },
        {
          "name": "margins_percent_sales_margin",
          "description": "An adjustment made to the item margins as a result of a percent sales margin.",
          "attributes": []
        },
        {
          "name": "rounding_percent_sales_margin",
          "description": "An adjustment made to rounding as a result of a percent sales margin.",
          "attributes": []
        },
        {
          "name": "vat_percent_sales_margin",
          "description": "An adjustment made to VAT owed as a result of a percent sales margin.",
          "attributes": []
        },
        {
          "name": "vat_duty_percent_sales_margin",
          "description": "An adjustment made to VAT on duties (e.g. VAT on duties on item price) owed as a result of a percent sales margin.",
          "attributes": []
        },
        {
          "name": "duty_percent_sales_margin",
          "description": "An adjustment made to duty owed as a result of a percent sales margin.",
          "attributes": []
        }
      ],
      "name": "price_detail_component_key",
      "attributes": []
    },
    {
      "plural": "price_detail_keys",
      "values": [
        {
          "name": "item_price",
          "description": "The details of the item price.",
          "attributes": []
        },
        {
          "name": "margins",
          "description": "The details of any margins added to the item price.",
          "attributes": []
        },
        {
          "name": "vat",
          "description": "The details of any VAT owed on the item.",
          "attributes": []
        },
        {
          "name": "duty",
          "description": "The details of any duties owed on the item.",
          "attributes": []
        },
        {
          "name": "rounding",
          "description": "The details of any rounding added to the item.",
          "attributes": []
        },
        {
          "name": "adjustment",
          "description": "The details of any price adjustments due to sales margins. A negative value indicates a discount.",
          "attributes": []
        }
      ],
      "name": "price_detail_key",
      "attributes": []
    },
    {
      "plural": "price_facet_boundaries",
      "values": [
        {
          "name": "min",
          "attributes": []
        },
        {
          "name": "max",
          "attributes": []
        }
      ],
      "name": "price_facet_boundary",
      "attributes": []
    },
    {
      "plural": "pricing_levy_settings",
      "values": [
        {
          "name": "included",
          "attributes": []
        },
        {
          "name": "displayed",
          "attributes": []
        },
        {
          "name": "ignored",
          "attributes": []
        }
      ],
      "name": "pricing_levy_setting",
      "attributes": []
    },
    {
      "plural": "promotion_trigger_types",
      "values": [
        {
          "name": "automatic",
          "description": "Automatic indicates the the promotion will be automatically applied to the order",
          "attributes": []
        },
        {
          "name": "order_subtotal",
          "description": "Order subtotal sets a minimum value - orders whose subtotal is greater than the minimum will have the promotion applied. A common use case is to offer free shipping to orders about 150 CAD.",
          "attributes": []
        }
      ],
      "name": "promotion_trigger_type",
      "description": "The Promotion Trigger Type defines the conditions we evaluate when deciding if a particular promotion should be applied to an order.",
      "attributes": []
    },
    {
      "plural": "province_types",
      "values": [
        {
          "name": "city",
          "attributes": []
        },
        {
          "name": "dependency",
          "attributes": []
        },
        {
          "name": "district",
          "attributes": []
        },
        {
          "name": "emirate",
          "attributes": []
        },
        {
          "name": "entity",
          "attributes": []
        },
        {
          "name": "municipality",
          "attributes": []
        },
        {
          "name": "outlying_area",
          "attributes": []
        },
        {
          "name": "parish",
          "attributes": []
        },
        {
          "name": "province",
          "attributes": []
        },
        {
          "name": "state",
          "attributes": []
        },
        {
          "name": "territory",
          "attributes": []
        },
        {
          "name": "other",
          "attributes": []
        }
      ],
      "name": "province_type",
      "description": "Local terminology for province",
      "attributes": []
    },
    {
      "plural": "query_types",
      "values": [
        {
          "name": "exclusion",
          "description": "Exclude items satisfied by the associated query",
          "attributes": []
        },
        {
          "name": "inclusion",
          "description": "Include items satisfied by the associated query",
          "attributes": []
        }
      ],
      "name": "query_type",
      "description": "Type to indicate whether query is an inclusion or exclusion",
      "attributes": []
    },
    {
      "plural": "quote_error_codes",
      "values": [
        {
          "name": "generic_error",
          "attributes": []
        },
        {
          "name": "items_not_available",
          "description": "Item numbers are not available in inventory",
          "attributes": []
        },
        {
          "name": "shipping_unavailable",
          "description": "Indicates that an order was created for a destination country to which you have no shipping lanes.",
          "attributes": []
        }
      ],
      "name": "quote_error_code",
      "attributes": []
    },
    {
      "plural": "rate_types",
      "values": [
        {
          "name": "flow",
          "description": "Represents a Flow rate type (which excludes currency margins)",
          "attributes": []
        },
        {
          "name": "organization",
          "description": "Represents an organization rate type (which includes currency margins)",
          "attributes": []
        }
      ],
      "name": "rate_type",
      "description": "Indicates the type of the rate",
      "attributes": []
    },
    {
      "plural": "ratecard_owners",
      "values": [
        {
          "name": "flow",
          "attributes": []
        },
        {
          "name": "organization",
          "attributes": []
        }
      ],
      "name": "ratecard_owner",
      "description": "Identifies which party in a transaction is responsible for an activity, such as remittance of tax.",
      "attributes": []
    },
    {
      "plural": "refund_decline_codes",
      "values": [
        {
          "name": "expired",
          "description": "All associated payment captures have expired; refunds can no longer be issued",
          "attributes": []
        },
        {
          "name": "insufficient_funds",
          "description": "The requested refund amount exceeded the amount of remaining unrefunded funds",
          "attributes": []
        },
        {
          "name": "unknown",
          "description": "Failed due to another reason (details not known)",
          "attributes": []
        }
      ],
      "name": "refund_decline_code",
      "description": "Contains details related to the reason for which a refund failed.",
      "attributes": []
    },
    {
      "plural": "refund_statuses",
      "values": [
        {
          "name": "pending",
          "description": "The refund has been initiated and requires time to complete.",
          "attributes": []
        },
        {
          "name": "succeeded",
          "description": "The refund has been processed successfully.",
          "attributes": []
        },
        {
          "name": "failed",
          "description": "The refund failed to process.",
          "attributes": []
        },
        {
          "name": "canceled",
          "description": "The refund was canceled.",
          "attributes": []
        }
      ],
      "name": "refund_status",
      "attributes": []
    },
    {
      "plural": "return_statuses",
      "values": [
        {
          "name": "open",
          "attributes": []
        },
        {
          "name": "refunded",
          "attributes": []
        }
      ],
      "name": "return_status",
      "attributes": []
    },
    {
      "plural": "reversal_error_codes",
      "values": [
        {
          "name": "amount_exceeds_balance",
          "description": "Amount specified exceeds the remaining authorization balance.",
          "attributes": []
        },
        {
          "name": "authorization_declined",
          "description": "The authorization was initially declined; there is nothing to reverse.",
          "attributes": []
        },
        {
          "name": "authorization_expired",
          "description": "The authorization has expired and can no longer be reversed.",
          "attributes": []
        },
        {
          "name": "invalid_authorization",
          "description": "The authorization was not found.",
          "attributes": []
        },
        {
          "name": "invalid_key",
          "description": "Invalid key",
          "attributes": []
        },
        {
          "name": "invalid_amount",
          "description": "Amount is not valid - usually because amount was <= 0",
          "attributes": []
        },
        {
          "name": "invalid_currency",
          "description": "Currency is either not known or invalid",
          "attributes": []
        },
        {
          "name": "no_remaining_balance",
          "description": "The authorization has already been fully captured and/or reversed - there are no additional funds to reverse.",
          "attributes": []
        },
        {
          "name": "partial_reversal_not_supported",
          "description": "Indicates a request for a partial reversal when the underlying processor does not support it",
          "attributes": []
        },
        {
          "name": "unknown",
          "description": "Unknown or other",
          "attributes": []
        }
      ],
      "name": "reversal_error_code",
      "attributes": []
    },
    {
      "plural": "reversal_statuses",
      "values": [
        {
          "name": "pending",
          "description": "Reversal is pending processing.",
          "attributes": []
        },
        {
          "name": "processed",
          "description": "Reversal has been processed successfully.",
          "attributes": []
        },
        {
          "name": "failed",
          "description": "Reversal failed to process.",
          "attributes": []
        }
      ],
      "name": "reversal_status",
      "attributes": []
    },
    {
      "plural": "roles",
      "values": [
        {
          "name": "admin",
          "attributes": []
        },
        {
          "name": "member",
          "attributes": []
        }
      ],
      "name": "role",
      "description": "A user's role within an organization",
      "attributes": []
    },
    {
      "plural": "rounding_methods",
      "values": [
        {
          "name": "up",
          "description": "Round up to the specified rounding.value",
          "attributes": []
        },
        {
          "name": "down",
          "description": "Round down to the specified rounding.value",
          "attributes": []
        },
        {
          "name": "nearest",
          "description": "Round to the nearest specified rounding.value. If equidistant, will round up.",
          "attributes": []
        }
      ],
      "name": "rounding_method",
      "description": "Direction to round localized price",
      "attributes": []
    },
    {
      "plural": "rounding_types",
      "values": [
        {
          "name": "pattern",
          "description": "Rounds a value to an amount ending with a pattern, e.g. an amount ending in '.99'.",
          "attributes": []
        },
        {
          "name": "multiple",
          "description": "Rounds a value to an amount that is the multiple of a value, e.g. rounding to the nearest 5 would ensure that the resulting number ends in either 0 or 5.",
          "attributes": []
        }
      ],
      "name": "rounding_type",
      "description": "Rounding type determines the rule used to enforce rounding. Common rules will ensure that the final price ends w/ a given number (e.g. ends with .95) or is a multiple of some number (multiples of 5 or 10 are common).",
      "attributes": []
    },
    {
      "plural": "schedule_exception_statuses",
      "values": [
        {
          "name": "Open",
          "attributes": []
        },
        {
          "name": "Closed",
          "attributes": []
        }
      ],
      "name": "schedule_exception_status",
      "attributes": []
    },
    {
      "plural": "serial_statuses",
      "values": [
        {
          "name": "available",
          "attributes": []
        },
        {
          "name": "reserved",
          "attributes": []
        },
        {
          "name": "sold",
          "attributes": []
        }
      ],
      "name": "serial_status",
      "description": "The states applicable to a serial",
      "attributes": []
    },
    {
      "plural": "shipment_integration_types",
      "values": [
        {
          "name": "direct",
          "description": "Always generate a label for the chosen delivery option.",
          "attributes": []
        },
        {
          "name": "information",
          "description": "Booking and label generation is not available. Just use Flow to calculate delivery window estimates and shipment prices to display.",
          "attributes": []
        },
        {
          "name": "preadvice",
          "description": "A generic label will be provided by the client organization when available as pre-advice shipment notification to carrier partner.",
          "attributes": []
        }
      ],
      "name": "shipment_integration_type",
      "description": "Type of shipping integration for a given shipping tier",
      "attributes": []
    },
    {
      "plural": "shipment_recipients",
      "values": [
        {
          "name": "customer",
          "description": "Outbound shipment to the customer",
          "attributes": []
        },
        {
          "name": "return",
          "description": "Inbound or return shipment",
          "attributes": []
        },
        {
          "name": "crossdock",
          "description": "Outbound shipment to a crossdock",
          "attributes": []
        }
      ],
      "name": "shipment_recipient",
      "attributes": []
    },
    {
      "plural": "shipping_configuration_types",
      "values": [
        {
          "name": "default",
          "attributes": []
        },
        {
          "name": "variant",
          "attributes": []
        }
      ],
      "name": "shipping_configuration_type",
      "attributes": []
    },
    {
      "plural": "shopify_grants",
      "values": [
        {
          "name": "customer",
          "description": "Access to /admin/customers.json",
          "attributes": []
        },
        {
          "name": "discount",
          "description": "Access to /admin/price_rules/:id/discount_codes.json",
          "attributes": []
        },
        {
          "name": "gift_card",
          "description": "Access to /admin/gift_cards.json",
          "attributes": []
        },
        {
          "name": "metafield",
          "description": "Access to /admin/variants/:id/metafields.json",
          "attributes": []
        },
        {
          "name": "order",
          "description": "Access to /admin/orders/:id/metafields.json",
          "attributes": []
        }
      ],
      "name": "shopify_grant",
      "attributes": []
    },
    {
      "plural": "shopify_localization_methods",
      "values": [
        {
          "name": "api",
          "description": "Indicates localization should be achieved via the API.",
          "attributes": []
        },
        {
          "name": "ssr",
          "description": "Indicates localization should be achieved via server side rendering. For example, using variant metafields.",
          "attributes": []
        }
      ],
      "name": "shopify_localization_method",
      "attributes": []
    },
    {
      "plural": "shopify_sync_checks",
      "values": [
        {
          "name": "localized_variants",
          "description": "Provides status check of localized variant metafields sync to Shopify",
          "attributes": []
        },
        {
          "name": "flow_variant_metafields",
          "description": "Provides status check of Flow variant metafields sync to Shopify",
          "attributes": []
        }
      ],
      "name": "shopify_sync_check",
      "attributes": []
    },
    {
      "plural": "sort_directions",
      "values": [
        {
          "name": "ascending",
          "attributes": []
        },
        {
          "name": "descending",
          "attributes": []
        }
      ],
      "name": "sort_direction",
      "attributes": []
    },
    {
      "plural": "strategies",
      "values": [
        {
          "name": "range",
          "description": "Tightest range",
          "attributes": []
        },
        {
          "name": "from",
          "description": "Lowest minimum of the ranges",
          "attributes": []
        },
        {
          "name": "to",
          "description": "Lowest maximum of the ranges",
          "attributes": []
        }
      ],
      "name": "strategy",
      "attributes": []
    },
    {
      "plural": "subcatalog_item_statuses",
      "values": [
        {
          "name": "excluded",
          "description": "The user has chosen to exclude the item from the associated subcatalog.",
          "attributes": []
        },
        {
          "name": "included",
          "description": "The item is included in the associated subcatalog.",
          "attributes": []
        },
        {
          "name": "restricted",
          "description": "Item is not allowed to be sold in the market associated with the given subcatalog.",
          "attributes": []
        }
      ],
      "name": "subcatalog_item_status",
      "description": "Status indicating availability of a subcatalog item in an experience.",
      "attributes": []
    },
    {
      "plural": "surcharge_responsible_parties",
      "values": [
        {
          "name": "organization",
          "description": "The merchant pays for this surcharge",
          "attributes": []
        },
        {
          "name": "customer",
          "description": "The customer pays for this surcharge",
          "attributes": []
        }
      ],
      "name": "surcharge_responsible_party",
      "attributes": []
    },
    {
      "plural": "tax_applicabilities",
      "values": [
        {
          "name": "none",
          "description": "In no scenario should a customer pay tax within the Flow system.",
          "attributes": []
        },
        {
          "name": "all",
          "description": "In all scenarios a customer should pay tax within the Flow system.",
          "attributes": []
        }
      ],
      "name": "tax_applicability",
      "attributes": []
    },
    {
      "plural": "tax_verification_results",
      "values": [
        {
          "name": "valid",
          "attributes": []
        },
        {
          "name": "invalid",
          "attributes": []
        },
        {
          "name": "unable_to_validate",
          "attributes": []
        }
      ],
      "name": "tax_verification_result",
      "attributes": []
    },
    {
      "plural": "taxability_types",
      "values": [
        {
          "name": "tax_rule",
          "description": "Rule indicating how taxes should be applied.  Acceptable values are defined by the 'taxability_value' enum.",
          "attributes": []
        }
      ],
      "name": "taxability_type",
      "attributes": []
    },
    {
      "plural": "taxability_values",
      "values": [
        {
          "name": "exempt",
          "description": "An item with this value is exempt from being taxed.",
          "attributes": []
        }
      ],
      "name": "taxability_value",
      "description": "Used to indicate an item's taxability.",
      "attributes": []
    },
    {
      "plural": "three_d_secure_codes",
      "values": [
        {
          "name": "verified",
          "attributes": []
        },
        {
          "name": "not_verified",
          "attributes": []
        },
        {
          "name": "failed",
          "attributes": []
        }
      ],
      "name": "three_d_secure_code",
      "attributes": []
    },
    {
      "plural": "tier_estimate_types",
      "values": [
        {
          "name": "calculated",
          "description": "Displays the calculated delivery window estimate next to the shipping tier name.",
          "attributes": []
        },
        {
          "name": "custom",
          "description": "Shows a custom label next to the shipping tier name instead of a delivery window estimate.",
          "attributes": []
        }
      ],
      "name": "tier_estimate_type",
      "description": "Describes the type of label displayed for shipping tiers.",
      "attributes": []
    },
    {
      "plural": "tier_strategies",
      "values": [
        {
          "name": "fastest",
          "description": "Optimize for fastest first, then cheapest",
          "attributes": []
        },
        {
          "name": "lowest_cost",
          "description": "Optimize for lowest cost first, then fastest",
          "attributes": []
        }
      ],
      "name": "tier_strategy",
      "description": "Strategy to apply when there are multiple rates available for a tier",
      "attributes": []
    },
    {
      "plural": "token_types",
      "values": [
        {
          "name": "permanent",
          "description": "Create a permanent token for the card (stored up until normal purge interval)",
          "attributes": []
        },
        {
          "name": "one_time",
          "description": "Create a one time token for the card. This token can be used to either authorized payment or later exchange for a permanent token. Once used, this token cannot be used for future activity.",
          "attributes": []
        }
      ],
      "name": "token_type",
      "attributes": []
    },
    {
      "plural": "tracking_number_types",
      "values": [
        {
          "name": "flow",
          "attributes": []
        },
        {
          "name": "carrier",
          "attributes": []
        }
      ],
      "name": "tracking_number_type",
      "attributes": []
    },
    {
      "plural": "tracking_statuses",
      "values": [
        {
          "name": "label_created",
          "attributes": []
        },
        {
          "name": "pending",
          "attributes": []
        },
        {
          "name": "info_received",
          "attributes": []
        },
        {
          "name": "picked_up",
          "attributes": []
        },
        {
          "name": "in_transit",
          "attributes": []
        },
        {
          "name": "out_for_delivery",
          "attributes": []
        },
        {
          "name": "attempt_fail",
          "attributes": []
        },
        {
          "name": "delivered",
          "attributes": []
        },
        {
          "name": "exception",
          "attributes": []
        },
        {
          "name": "returned",
          "attributes": []
        },
        {
          "name": "expired",
          "attributes": []
        }
      ],
      "name": "tracking_status",
      "attributes": []
    },
    {
      "plural": "unit_of_measurements",
      "values": [
        {
          "name": "millimeter",
          "description": "Equivalent to MILLI(METRE).",
          "attributes": []
        },
        {
          "name": "centimeter",
          "description": "Equivalent to CENTI(METRE).",
          "attributes": []
        },
        {
          "name": "inch",
          "description": "A unit of length equal to 0.0254 m (standard name in).",
          "attributes": []
        },
        {
          "name": "foot",
          "description": "A unit of length equal to 0.3048 m (standard name ft).",
          "attributes": []
        },
        {
          "name": "cubic_inch",
          "description": "A unit of volume equal to one cubic inch (in³).",
          "attributes": []
        },
        {
          "name": "cubic_meter",
          "description": "The metric unit for volume quantities (m³).",
          "attributes": []
        },
        {
          "name": "gram",
          "description": "A unit of mass equal to 1 / 1000 kilogram (standard name g).",
          "attributes": []
        },
        {
          "name": "kilogram",
          "description": "The base unit for mass quantities (kg).",
          "attributes": []
        },
        {
          "name": "meter",
          "description": "The base unit for length quantities (m).",
          "attributes": []
        },
        {
          "name": "ounce",
          "description": "A unit of mass equal to 1 / 16 POUND (standard name oz).",
          "attributes": []
        },
        {
          "name": "pound",
          "description": "A unit of mass equal to 453.59237 grams (avoirdupois pound, standard name lb).",
          "attributes": []
        }
      ],
      "name": "unit_of_measurement",
      "description": "Defines the units of measurement that we support. As units are added, we conform with the standard units provided by jscience as part of JSR 363 - see http://jscience.org/api/javax/measure/unit/SI.html and http://jscience.org/api/javax/measure/unit/NonSI.html",
      "attributes": []
    },
    {
      "plural": "unit_of_times",
      "values": [
        {
          "name": "year",
          "attributes": []
        },
        {
          "name": "month",
          "attributes": []
        },
        {
          "name": "week",
          "attributes": []
        },
        {
          "name": "day",
          "attributes": []
        },
        {
          "name": "hour",
          "attributes": []
        },
        {
          "name": "minute",
          "attributes": []
        }
      ],
      "name": "unit_of_time",
      "description": "Defines the units of time that we support",
      "attributes": []
    },
    {
      "plural": "update_policies",
      "values": [
        {
          "name": "auto",
          "attributes": []
        },
        {
          "name": "queue",
          "description": "Queue item update for approval.",
          "attributes": []
        },
        {
          "name": "discard",
          "attributes": []
        }
      ],
      "name": "update_policy",
      "attributes": []
    },
    {
      "plural": "update_types",
      "values": [
        {
          "name": "change",
          "description": "Long value to increment or decrement. Positive quantities are added to inventory while negative quantities are decrement from inventory.",
          "attributes": []
        },
        {
          "name": "set",
          "description": "Set absolute quantity to new value with no regard for previous updates",
          "attributes": []
        }
      ],
      "name": "update_type",
      "description": "Types of updates that can be made on quantity of inventory",
      "attributes": []
    },
    {
      "plural": "user_statuses",
      "values": [
        {
          "name": "pending",
          "description": "Represents a new user account that is pending approval",
          "attributes": []
        },
        {
          "name": "active",
          "description": "Represents an active user account - can authenticate with this account",
          "attributes": []
        },
        {
          "name": "inactive",
          "description": "Represents an inactive user account - can no longer authenticate with this account",
          "attributes": []
        }
      ],
      "name": "user_status",
      "description": "The status of the user account. Valid transitions are from pending -> active, active -> inactive, inactive -> active",
      "attributes": []
    },
    {
      "plural": "value_added_services",
      "values": [
        {
          "name": "Hazardous Material",
          "description": "See https://en.wikipedia.org/wiki/ORM-D",
          "attributes": []
        }
      ],
      "name": "value_added_service",
      "attributes": []
    },
    {
      "plural": "visibilities",
      "values": [
        {
          "name": "public",
          "attributes": []
        },
        {
          "name": "private",
          "attributes": []
        }
      ],
      "name": "visibility",
      "attributes": []
    },
    {
      "plural": "webhook_statuses",
      "values": [
        {
          "name": "pending",
          "attributes": []
        },
        {
          "name": "success",
          "attributes": []
        },
        {
          "name": "failure",
          "attributes": []
        }
      ],
      "name": "webhook_status",
      "attributes": []
    },
    {
      "plural": "zero_amount_indicators",
      "values": [
        {
          "name": "zero",
          "description": "Show the number 0.00 in the label",
          "attributes": []
        },
        {
          "name": "free",
          "description": "Show the word `FREE` in the label",
          "attributes": []
        }
      ],
      "name": "zero_amount_indicator",
      "attributes": []
    }
  ],
  "application": {
    "key": "api"
  },
  "organization": {
    "key": "flow"
  },
  "name": "API",
  "namespace": "io.flow.v0",
  "attributes": [],
  "apidoc": {
    "version": "0.14.84"
  },
  "info": {
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    },
    "contact": {
      "email": "tech@flow.io"
    }
  }
}